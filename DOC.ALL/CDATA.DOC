

                                IDE-CD
                        Информация к размышлению

   Данный документ никоим образом не является полным описанием стандартного
   IDE-CD. Здесь были собраны только основные данные, необходимые для общего
   понимания принципов функционирования. Предполагается знание (хотя бы в
   общих чертах) IDE-интерфейса (стандарт ходил под именем ATA-R4C.*).
        Для желающих быстро заполучить исходники для управления CD-ROM могу
   порекомендовать драйвер VIDE-CDD.SYS. Он проще всего поддается
   дизассемблированию и содержит достаточно неплохой код. Кроме того,
   в исходных текстах драйвера CD для Linux содержится много полезной
   информации, хотя ориентация на "юниксоидный" тип запросов мешает
   использованию этих тексты для компиляции под MS-DOS.


                     Соглашения и используемые сокращения.

    При указании конкретных адресов подразумевается, что IDE-CD является
    мастером, адрес контроллера - 170h. Если у Вас используются другие адреса,
    вместо 17x необходимо подставить 1Fx, 1E8+x или 168+x.

    Тик = 18.2 герца.

    Все адреса и коды шестнадцатиричные.

    Данные, длиной в слово или двойное слово в/из CD идут в формате
    co старшим первым байтом ( в отличие от PC, где первый байт - младший).

    AP - Atapi пакет, 12 байт передаваемых в CD-Rom. Содержат команду
         и основные данные для нее.
    AK - Atapi команда
    M  - минуты в формате BCD
    S  - секунды в формате BCD
    F  - номер фрейма в формате BCD


                      I. Определение наличия CD в системе

        Для проверки присутствия Atapi-CD устройства необходимо:

        1. На нужном шлейфе выбрать требуемое устройство (Master/Slave) в
           регистре 176.
        2. Проверить готовность (бит 80 в регистре 177)
        3. Если не готово - устройства нет.

        Далее можно дать команду общего сброса (вывести код 8 в регистр 177
        и подождать 1-3 тика), либо попробовать обойтись без этого. Если
        CD находится в cостоянии ожидания команды сброс давать не
        обязательно.

        4. В порт 177 вывести команду ECh и подождать пару тиков.
        5. Проверить порт 174 (д.б. = 14h) и порт 175 (д.б. = EBh).

        Если все условия соблюдены, то можно считать, что на IDE-шлейфе
        присутствует Atapi устройство. Для уточнения типа устройства можно
        воспользоваться Atapi-командами.


                     II. Выполнение команд

        Для выполнения AK необходимо:
        1. Выбрать соответствующее устройство (Master/Slave)
        2. Дождаться готовности (в порту 177)
        3. Установить желательный размер блока в регистрах 174 (мл.)
           и 175 (ст. часть) Если команда не возвращает данные, это можно
           и не делать.
        4. В 177 записать команду A0h.
        5. Дождаться требования данных (в 177).
        6. В режиме словной пересылки записать в порт 170 6 слов AP.
        7. Если команда не требует дополнительных передач, то проверить
           статус завершения по регистрам ошибок и все.
           Иначе:
        8. Дождаться прерывания.
        9. Считать из регистров 174 и 175 длину выдаваемого (принимаемого)
           блока.
        10. Если длина =0 - конец операции, иначе произвести обмен данными
                и перейти на п. 8
        11. Проанализировать статус завершения.

        При передаче данные передаются пословно через порт 170.

                     III. Типы команд

        По виду команды можно разделить на три группы:
        а) Управления
                Как правило, все данные находятся в AP. Иногда
                применяется дополнительно пересылаемый блок данных.
                В ответ CD не передает никакой информации, а
                результат можно определить по регистрам ошибок
                IDE-интерфейса (171 и 177) или с помощью
                дополнительной команды получения состояния.
        б) Передачи данных
                Адресные данные и параметры передачи находятся в AP
                Поскольку пишущие CD не рассматриваются (мне они не известны),
                то блок данных, передаваемых в CD, отсутствует.
                Если в команде подразумевается передача данных из CD и
                нет ошибок, CD драйв выдает в ответ на команду блок (блоки)
                данных.
        в) Получения информации
                Все данные о запросе находятся в AP. В ответ на команду СD
                выдает блок данных.



                        IV. IDE команды

        У CD есть несколько вспомогательных команд, которые исполняются
        так же, как и команды обычного IDE винчестера.

        Вот основные команды:
        A0h - Команда передачи AP.
        A1h - Идентификация привода. Аналог команды ECh для IDE-винчестера, но
                формат выходного блока другой
        ECh - Воспринимается как ошибка, но в регистрах 174 и 175 устанавливается
                сигнатура 14 EB - признак Atapi устройства
        08h - Сброс. Выполняет процедуру начальной инициализации.


        Также, могут выполняться некоторые команды управления сохранением энергии,
        установки возможностей и пр. Во многих приводах они воспринимаются как
        правильные команды, но реально не исполняются или исполняются частично.



                V. Команды в ATAPI-пакетах

Первый байт в AP является кодом команды. Это единственный байт, который
анализируется всегда. Остальные 11 байт содержат информацию, зависящую
от конкретной команды.

----------------------------------------------------------------------
 Команда 00h - пустышка

 Пакет:
        db  0
        db  11*dup(0)   ; *

        Ничего не делает, может применяться для проверки смены диска

        Здесь и далее: данные помеченые "*", как правило, не анализируются CD,
        но для совсместимости должны быть установлены в 0

------------------------------------------------------------------------
 Команда 01h - Установить на начало диска

 Пакет:
        db 01h
        db 12*dup(0)    ; *
        Команда управляющая (практически не используется).

----------------------------------------------------------------------
 Команда 03h - читать состояние привода

 Пакет:
        db 03h
        db 3*dup(0)     ; *
        db Len          ; длина выходного блока
        db 7*dup(0)     ; *

        На выходе таблица из 12h байт, в которой самыми интересными являются
        байты 2, 0С и 0D - это код ошибки последней операции.

--------------------------------------------------------------------------
 Команда 012h - читать строку параметров изготовителя драйва

 Пакет:
        db 12h
        db  0h,0h       ; иногда здесь устанавливаются некие параметры
        db  0h          ; *
        db  Len         ; длина выходной строки
        db  7*dup(0)    ; *

        Драйв выдает некую строку изготовителя (в формате изготовителя)
        Зависит от типа CD-Rom. Иногда применяется в драйверах для проверки
        соответствия драйвера и устройства.

---------------------------------------------------------------------------
 Команда 01Bh - управление треем и прочее

 Пакет:
        db 1Bh
        db 3*dup(0)     ; *
        db Func         ; подфункция
        db 7*dup(0)     ; *

        Команда управляющая.

        Подфункции:
        0 - войти в режим Sleep
        1 - остановить проигрывание/чтение
        2 - выдвинуть трей
        3 - закрыть трей

---------------------------------------------------------------------------
 Команда 01Eh - блокировка трея

 Пакет:
        db 1Eh
        db 3*dup(?)     ; *
        db Func         ; подфункция
        db 7*dup(?)     ; *

        Команда управляющая.

        Младший бит Func= 0 - разблокировать трей
                        = 1 - заблокировать трей

---------------------------------------------------------------------------
 Команда 025h - получить размер диска в секторах.

 Пакет:
        db 25h
        db 11*dup(0)    ; *

        Команда информационная.

        Пользователю в ответ передается блок из 8 байт:
        dd Sectors      ; число секторов на текущем диске
        dd SectSize     ; размер сектора (как правило, не зависит
                        ; от диска и равен 930h)
---------------------------------------------------------------------------
 Команда 02Bh - Seek

 Пакет:
        db 2Bh
        db 2*dup(0)     ; *
        db M,S,F        ; куда позиционироваться
        db 6*dup(0)     ; *

        Команда управляющая.
----------------------------------------------------------------------------
Команда 042h - смешанная информация (чтение субканала)

Пакет:
        db      42h
        db      ScMsf   ; 0/2 - тип выдачи адресов (MSF или номер сектора)
        db      FullInfo; вариант запроса (полный/краткий - 4
        db      Func    ; подфункция
        db      3*dup(0); *
        db      LenHi   ; Старшая часть длины таблицы
        db      LenLo   ; Младшая -------//----------
        db      3*dup(0); *

        Команда информационная, выдает блок следующей информации:

        00h db   0h     ; просто константа
        01h db   состояние диска:
                      11h - Играет Аудио
                      12h - Аудио стоит
                      13h - Аудио остановилось на конце
                      14h - Открыта дверь или ошибка запуска
                      15h - Прочее
        02h db  0h

        03h и далее зависит от Func и бита 40h в Fullinfo
        бит 40h отсутствует (байт Func не проверяется):
              03h db  00h
        бит 40h присутствует и Func не равен 2 или 3
              03h db  0Ch
              04h db  01h
              05h db  Ctrl/Addr
              06h db  TrackNumber
              07h db  Point or Index
              08h db  ?
              09h db  3*dup(?) - MSF/SECTOR на дорожке
              0Ch db  0h
              0Dh db  3*dup(?) - MSF/SECTOR на диске
              10h - конец блока запроса
               --Подфункция 2-- (Получить UPC код)
              03h db  14h
              04h db  02h
              05h db  3h*dup(?0)
              08h db  80h        - флажок наличия UPC (если нет, то UPC отсутствует)
              09h db  0Ch*dup(?) - здесь хранится UPC код (6 цифр в BCD коде)
              15h db  3*dup(?)   - Положение чего-то на диске в формате MSF
               --Подфункция 3--
              03h db  14h
              04h db  03h
              05h db  ?         ; неизвестный, но информативный параметр
              06h db  2*dup(0)
              08h db  80h - флажок присутствия (аналогично функции 02h)
              09h db  далее неочевидно

-----------------------------------------------------------------------------
Команда 043h - информация о дорожках

Пакет:
        db      43h
        db      ScMsf   ; тип выдачи адреса (MSF/Сектор)
        db      4*dup(0); *
        db      BegTrk  ; начальная дорожка (от 1; 0 заменяется на 1)
        db      LenHi   ; Старшая часть длины таблицы
        db      LenLo   ; Младшая -------//----------
        db      Func    ; варианты выдачи информации (0/40h/80h)
        db      2*dup(0); *

        Команда информационная, выдает таблицы дорожек.

        Func    = 00    ; получить обычную таблицу дорожек
                = 40    ; получить таблицу сессий
                = 80    ; получить обычную таблицу в расширенном формате

        Общий формат таблицы :
        dw      Len             ; длина последующих полей в байтах
        db      BegTrk          ; первая дорожка
        db      EndTrk          ; последняя дорожка
        d?      <track_Def>     ; описание дорожек

        Описание дорожек м.б. трех форматов:

        1) 5 байт на дорожку (внутренний формат, наружу не выдается):
                db      Type            ; тип дорожки и флаги
                db      Index           ; индекс дорожки (номер)
                db*3    Start           ; адрес начала дорожки

        2) 8 байт на дорожку (Func=0h/40h):
                db      Res1
                db      Type            ; тип дорожки и флаги
                db      Index           ; индекс дорожки (номер)
                db      Res2
                db*4    Start           ; адрес начала дорожки

        3) 11 байт на дорожку (Func = 80h):
                db      Res1
                db      Type            ; тип дорожки
                db      Res2
                db      Index           ; индекс дорожки
                db      Res3
                db      Res4
                db      Res5
                db*4    Start           ; адрес начала дорожки

        Type  - тип дорожки:
                14h - ROM
                10h - Audio

        Index - кодируется в BCD и для обычной дорожки находится в интервале
        01-99. Коды A0 и выше имеют служебные дорожки, которые не являются
        физическими дорожками на диске, а носят служебный характер -
        информируют о числе дорожек, начале диска конце диска и т.п.

        Start - в зависимости от запроса, может быть либо номером сектора,
        либо адресом сектора в формате MSF.

-----------------------------------------------------------------------------
Команда 044h - информация о реальных метках положения (Read TOC HEADER)

Пакет:
        db      44h
        db      SL      ; бит 2 - что записывать в выходной буфер
                        ; (исходный номер сектора или считанный)
        db      0       ; *
        db      M,S,F   ; Номер сектора
        db      0       ; *
        dw      Len     ; длина выдаваемой информации
        db      3*dup(0); *

        Команда информационная, выдает следующую таблицу из 8 байт:

        db      SectorType      ; тип формата сектора
        db      4*dup(0)
        db      M,S,F           ; адрес сектора

        Пакет выдается только в том случае, если CD смог считать заданный
        сектор и определить его тип.

-----------------------------------------------------------------------------
Команда 047h - проигрывать Audio в стиле MSF

Пакет:
        db 47h
        db 2*dup(?)     ; *
        db M,S,F        ; начало отрезка (FF:FF:FF - текущая позиция)
        db M,S,F        ; конец отрезка
        db 3*dup(?)     ; *
        Команда управляющая.
-----------------------------------------------------------------------------
Команда 04Bh - Start/stop Audio

Пакет :
        db  4Bh
        db  7*dup(0)    ; *
        db  Func
        db  4*dup(0)    ; *

        Команда управляющая.

        Младший бит Func= 0 - остановить
                        = 1 - запустить
---------------------------------------------------------------------------
Команда 04Eh - остановить проигрывание
Пакет:
        db 4eh
        db 11*dup(?)    ; *
        Команда управляющая.
---------------------------------------------------------------------------
Команда 0B9h - читать данные

Пакет:
        db B9h  ;
        db Fmt  ; может быть = 00h годится любой формат
                ;              08h обычный CD-диск (Желтая книга)
                ;              10h\  разновидности
                ;              14h/      Green XA
        db 0    ; *
        db M,S,F; начало чтения
        db M,S,F; конец чтения
        db Flg  ; флаги читаемого куска сектора:
                ; 01   три
                ; 02     неиспользуемых
                ; 04           бита
                ; 08  EDC/Zero/ECC
                ; 10  основное тело сектора (data)
                ; 20  описатель адреса сектора (head)
                ; 40  данные субканала (sub)
                ; 80  начальные синхробайты (sync)
                ; передаются только те  части секторов, для которых
                ; установлены биты. Передаваемые части сектора должны идти
                ; подряд, без пропусков.
        db 0    ; всегда д.б. =0, иначе ошибка (?)
        db 0    ; *

        Команда передачи данные.
        Если начало=конец, производится позиционирование на указанную
        позицию и тест читабельности. В этом случае данные не передаются.

--------------------------------------------------------------------------
Команда 0BEh - читать данные в терминах секторов
Пакет:
        db B9h  ;
        db Fmt  ;
        db 0    ; *
        db Sec*3; начало чтения (номер сектора)
        db 0    ; *
        db ScNum; Число секторов
        db Flg  ; флаги читаемого куска сектора
        db 0    ; всегда д.б. =0, иначе ошибка (?)
        db 0    ; *
        Команда полностью аналогична команде B9, за исключением формата AP.

--------------------------------------------------------------------------
В данное описание не попали команды
   028h/0A8h - еще одно хитрое чтение данных
   055h/05Ah - Получить/Установить параметры (в т.ч. аудио каналов)
   024h/0A5h - еще один вариант проигрывания аудио (в секторах).
   и (возможно) несколько других, которые не используются в драйверах
   и поддерживаются не всеми приводами.
------------------------------------------------------------------------

══════════════════════════════════════════════════════════════════════════════
                             Приложение A
                        Коды состояний привода
                    (взяты из драйвера CD в Linux'е)

/* первый байт */
char *sense_key_texts[16] = {
0  "No sense data",
1  "Recovered error",
2  "Not ready",
3  "Medium error",
4  "Hardware error",
5  "Illegal request",
6  "Unit attention",
7  "Data protect",
8  "(reserved)",
9  "(reserved)",
a  "(reserved)",
b  "Aborted command",
c  "(reserved)",
d  "(reserved)",
e  "Miscompare",
f  "(reserved)",
};

/* второй и третий байты */
struct {
  short asc_ascq;
  char *text;
} sense_data_texts[] = {
  { 0x0000, "No additional sense information" },
  { 0x0011, "Audio play operation in progress" },
  { 0x0012, "Audio play operation paused" },
  { 0x0013, "Audio play operation successfully completed" },
  { 0x0014, "Audio play operation stopped due to error" },
  { 0x0015, "No current audio status to return" },
  { 0x0200, "No seek complete" },
  { 0x0400, "Logical unit not ready - cause not reportable" },
  { 0x0401, "Logical unit not ready - in progress (sic) of becoming ready" },
  { 0x0402, "Logical unit not ready - initializing command required" },
  { 0x0403, "Logical unit not ready - manual intervention required" },
  { 0x0600, "No reference position found" },
  { 0x0900, "Track following error" },
  { 0x0901, "Tracking servo failure" },
  { 0x0902, "Focus servo failure" },
  { 0x0903, "Spindle servo failure" },
  { 0x1100, "Unrecovered read error" },
  { 0x1106, "CIRC unrecovered error" },
  { 0x1500, "Random positioning error" },
  { 0x1501, "Mechanical positioning error" },
  { 0x1502, "Positioning error detected by read of medium" },
  { 0x1700, "Recovered data with no error correction applied" },
  { 0x1701, "Recovered data with retries" },
  { 0x1702, "Recovered data with positive head offset" },
  { 0x1703, "Recovered data with negative head offset" },
  { 0x1704, "Recovered data with retries and/or CIRC applied" },
  { 0x1705, "Recovered data using previous sector ID" },
  { 0x1800, "Recovered data with error correction applied" },
  { 0x1801, "Recovered data with error correction and retries applied" },
  { 0x1802, "Recovered data - the data was auto-reallocated" },
  { 0x1803, "Recovered data with CIRC" },
  { 0x1804, "Recovered data with L-EC" },
  { 0x1805, "Recovered data - recommend reassignment" },
  { 0x1806, "Recovered data - recommend rewrite" },
  { 0x1a00, "Parameter list length error" },
  { 0x2000, "Invalid command operation code" },
  { 0x2100, "Logical block address out of range" },
  { 0x2400, "Invalid field in command packet" },
  { 0x2600, "Invalid field in parameter list" },
  { 0x2601, "Parameter not supported" },
  { 0x2602, "Parameter value invalid" },
  { 0x2603, "Threshold parameters not supported" },
  { 0x2800, "Not ready to ready transition, medium may have changed" },
  { 0x2900, "Power on, reset or bus device reset occurred" },
  { 0x2a00, "Parameters changed" },
  { 0x2a01, "Mode parameters changed" },
  { 0x3000, "Incompatible medium installed" },
  { 0x3001, "Cannot read medium - unknown format" },
  { 0x3002, "Cannot read medium - incompatible format" },
  { 0x3700, "Rounded parameter" },
  { 0x3900, "Saving parameters not supported" },
  { 0x3a00, "Medium not present" },
  { 0x3f00, "ATAPI CD-ROM drive operating conditions have changed" },
  { 0x3f01, "Microcode has been changed" },
  { 0x3f02, "Changed operating definition" },
  { 0x3f03, "Inquiry data has changed" },
  { 0x4000, "Diagnostic failure on component (ASCQ)" },
  { 0x4400, "Internal ATAPI CD-ROM drive failure" },
  { 0x4e00, "Overlapped commands attempted" },
  { 0x5300, "Media load or eject failed" },
  { 0x5302, "Medium removal prevented" },
  { 0x5700, "Unable to recover table of contents" },
  { 0x5a00, "Operator request or state change input (unspecified)" },
  { 0x5a01, "Operator medium removal request" },
  { 0x5b00, "Threshold condition met" },
  { 0x5c00, "Status change" },
  { 0x6300, "End of user area encountered on this track" },
  { 0x6400, "Illegal mode for this track" },
  { 0xbf00, "Loss of streaming" },


                        Приложение B
                      Некоторые форматы сектров
                    (Взяты из Linux'а)
┌───────────────────────────────┬────────────────────┬──────────────────┐
│ Аудио диск (красная книга):   │ audio_sample_bytes │                  │
│                               │        2352        │                  │
├───────────────────────────────┼──────┬──────┬──────┼─────┬──────┬─────┤
│ Данные (желтая, mode 1):      │ sync │ head │ data │ EDC │ zero │ ECC │
│                               │  12  │   4  │ 2048 │  4  │   8  │ 276 │
├───────────────────────────────┼──────┼──────┼──────┼─────┴──────┴─────┤
│ Данные (желтая, mode2):       │ sync │ head │ data │                  │
│                               │  12  │   4  │ 2336 │                  │
├───────────────────────────────┼──────┼──────┼──────┼──────┬─────┬─────┤
│ XA данные (зеленая,           │      │      │      │      │     │     │
│                 mode2 form1): │ sync │ head │ sub  │ data │ EDC │ ECC │
│                               │  12  │   4  │  8   │ 2048 │  4  │ 276 │
├───────────────────────────────┼──────┼──────┼──────┼──────┼─────┼─────┤
│ XA данные (зеленая,           │      │      │      │      │     │     │
│                 mode2 form2): │ sync │ head │ sub  │ data │ EDC │     │
│                               │  12  │   4  │  8   │ 2324 │  4  │     │
└───────────────────────────────┴──────┴──────┴──────┴──────┴─────┴─────┘

#########################################################################

PS/ Изначально этот документ составлялся исключительно для внутреннего
    использования по причине невозможности найти фирменное описание
    стандарта на ATAPI-CD.
    Поскольку вся информация бралась из дизассемблированных драйверов,
    исходных текстов Linux'а и отдизассемблированной прошивки ACER665,
    вполне возможны определенные расхождения со стандартом. Несмотря на
    это, мне кажется, что даже такое описание представляет определенную
    ценность. Лучше неполное описание, чем вообще никакого.

    У меня осталась еще кое-какая информация, например, тексты CD-драйверов,
    прошивок и т.п., которые были сочтены несущественными. Если необходимо,
    можно вставить в этот документ выдержки из драйверов.

    Ревизии:
    10.08.1996  - собраны и как-то систематизированы отрывочные данные
    19.09.1996  - первый раз отдан на растерзание.


Предложения, замечания, ругань и т.п.
                        просьба направлять по адресу 2:5030/163.44
Константин Норватов (Konstantin Norvatoff, KonNor)

Также, можно попробовать найти меня по адресу: konnor@small.spb.su

