     
                                               Ч А С Т Ь  IV
_________________________________________________________________
      
     О П И С А Н И Е    К О М А Н Д     И      Ф У Н К Ц И Й
_________________________________________________________________
      
     Две главы  в  этой  части содержат полную информацию по всем
командам и функциям языка PAL, включенным в систему Paradox  вер-
сии 3.0. Эти главы:
     
      Глава 20.  Описание команд.
      Глава 21.  Описание функций.



                                                    Г Л А В А  20
-----------------------------------------------------------------

                К О М А Н Д Ы   Я З Ы К А   P A L

-----------------------------------------------------------------

     В этой  главе  содержится  полное описание всех команд языка
PAL, что включает:
     - обсуждение организации и нотации записи команд;
     - общий список команд языка PAL;
     - описание каждой команды.


               ОРГАНИЗАЦИЯ И НОТАЦИЯ ЗАПИСИ КОМАНД
-----------------------------------------------------------------

     Каждая команда приводится отдельно. Команды приводятся в ал-
фавитном порядке, причем команды, содержащие  только  специальные
символы (такие, как =,?,?? и @), приводятся первыми. Функции язы-
ка PAL описаны отдельно в главе 21.

     В описании каждой команды первоначально приводится  имя  ко-
манды и ее действие.Затем для каждой команды приводится следующая
информация:
    - Синтаксис:  точно описывает формат команды и все требуемые
или возможные параметры, как описано далее в "Нотации";
    - Описание: описывает команду ,ее аргументы и ее действие;
    - Использование:   описывает,если необходимо, технику исполь-
зования данной команды, и некоторые полезные сведения, которые вы
должны знать для правильного пользования этой командой;
     - Примеры: содержит,если необходимо, один или более примеров
использования команды при программировании;
     - Версия:  содержит,если необходимо, информацию о том, когда
была добавлена эта команда;
     - См.также:  описывает,  если необходимо, связанные с данной
командой другие команды,функции языка PAL и разделы документации.


                           Нотация
-----------------------------------------------------------------

    Описание синтаксиса для каждой команды содержит точное описа-
ние, как записывать команду. При этом используются следующие пра-
вила:

    - Имена команд даются  заглавными  буквами: ATAN,ATAN2;
    - Угловые скобки применяются для обозначения параметров, тре-
бующихся в команде, как, например,
     ?? <выражение 1>.
Угловые скобки не являются частью синтаксиса команды.
    - Двойные угловые скобки применяются для обозначения необяза-
тельных  пунктов,  которые  могут как включаться, так и не выклю-
чаться, как, например,:
     LOCATE <<NEXT>> <field value>.
     - Знак  | используется для разделения нескольких альтернатив
при записи команды. Для этой цели используется также слово "или".


                   Алфавитный перечень команд.
-----------------------------------------------------------------

=                  присвоение значений  переменным,  масивам  или
                   полям

?                  запись в  строку  ниже  курсора на канве языка
                   PAL

??                 запись в строку на канве языка PAL сразу после
                   курсора

@                  позиционирует курсор на канве языка PAL

ACCEPT             ввести значения с клавиатуры

ADD                добавить записи из одной таблицы в другую

ARRAY              определение массива

BACKSPACE          {Backspace} уничтожает символы слева от курсо-
                   ра

BEEP               звуковой сигнал

CANCELEDIT         отменяет режим редактирования

CANVAS             управляет отображением канвы языка PAL на  эк-
                   ране

CHECK              {F6} размещает  или  стирает метку в выбранном
                   поле формы запроса

CHECKDESCENDING    {Ctrl}{F6} сортирует текущее  поле  запроса  в
                   убывающем порядке

CHECKPLUS          {Alt}{F6} размещает  или  стирает метку в выб-
                   ранном поле формы запроса

CLEAR              очистка канвы языка PAL
                                            
CLEARALL           {Alt} {F8} Очищает все образы  в  рабочем поле
                   системы Paradox

CLEARIMAGE         {F8} удаляет текущий образ

CLOSE PRINTER      закрывает ранее открытый канал устройства  пе-
                   чати

COEDIT             позволяет многим пользователям производить из-
                   менения в текущей таблице одновременно

COEDITKEY          {Alt} {F9} включает режим совместного редакти-
                   рования

COPY               копирование таблицы  и  ее  семейства в другую
                   таблицу

COPYFORM           копирование формы

COPYFROMARRAY      копирование элементов  массива  в поля текущей
                   записи текущего образа

COPYREPORT         копирование отчета

COPYTOARRAY        копирует  поля  текущей  записи  в  массив

CREATE             создание новой таблицы

CREATELIB          создание новой библиотеки процедур

CROSSTABKEY        {Alt}{X} создание "кросс"-таблицы  для  данной
                   таблицы

CTRLBACKSPACE      {Ctrl} {Backspase} стирает содержимое текущего
                   поля

CTRLBREAK          {Ctrl} {Break}  прерывает  выполнение  текущей
                   задачи

CTRLEND            моделирует нажатие {Ctrl} {End}

CTRLHOME           моделирует нажатие {Ctrl} {Home}

CTRLLEFT           моделирует нажатие {Ctrl} {<--}

CTRLPGDN           моделирует нажатие {Ctrl} {PgDn}

CTRLPGUP           моделирует нажатие {Ctrl} {PgUp}

CTRLRIGHT          моделирует нажатие {Ctrl} {-->}

CURSOR             переключает изображение курсора на  канве  или
                   изменяет его вид

DEBUG              прекращение выполнения  скрипта и передача уп-
                   равления отладчику

DEL                моделирует нажатие {Del}

DELETE             удаление таблицы и ее семейства

DELETELINE         {Ctrl}{Y} удаляет информацию от позиции курсо-
                   ра до конца строки

DITTO              {Ctrl} {D} копирует поле из предыдущей записи

DO_IT!             {F2} заканчивает или выполняет операцию

DOS                {Ctrl}{O} временный выход в DOS

DOSBIG             {Alt}{O} временный выход в DOS с освобождением
                   максимально доступной памяти

DOWN               моделирует нажатие клавиши "стрелка вниз"

DOWNIMAGE          {F4} перемещает курсор вниз к следующему обра-
                   зу в рабочем поле

ECHO               открывает или блокирует вывод на дисплей внут-
                   ренней работы скрипта

EDIT               редактирование таблицы

EDITKEY            {F9} включение режима редактирования таблицы

EDITLOG            восстанавливает или  аннулирует  изменения   в
                   таблице,записанные в журнал транзакций

EMPTY              очистка таблицы от всех записей

END                моделирует нажатие {End}

ENTER              моделирует нажатие {Enter}

ESC                {Esc} возвращает в предыдущее меню,приглашение
                   или состояние рабочего поля

EXAMPLE            {F5} вводит пример в текущее поле формы запро-
                   са

EXECUTE            выполнить последовательность команд языка PAL

EXECPROC           вызывает процедуру, не имеющую аргументов

EXIT               завершение работы  системы  Paradox  и выход в
                   DOS

FIELDVIEW          {Alt}{F5} или {Ctrl}{F} включает  режим  прос-
                   мотра поля

FIRSTSHOW          делает текущий образ первым отображаемым обра-
                   зом

FOR                выполняет последовательность  команд  заданное
                   число раз

FORMKEY            {F7} переключает изображение табличного вида и
                   формы

FORMTABLES         выдает список таблиц, включенных  в  многотаб-
                   личную форму

GRAPHKEY           {Ctrl}{F7} выдает график текущей таблицы

GROUPBY            {Shift}{F6} при использовании наборов в запро-
                   сах группирует записи по текущему полю запроса
                   без его отображения

HELP               {F1} выводит подсказку на экран

HOME               моделирует нажатие {Home}

IF                 проверка условия

IMAGERIGHTS        устанавливает или  удаляет право доступа к об-
                   разам

INDEX              создание вторичного индекса таблицы

INFOLIB            вывод на экран имен процедур в библиотеке

INS                моделирует нажатие {Ins}

INSTANTPLAY        {Alt} {F4} служит для запуска instant скрипта

INSTANTREPORT      {Alt} {F7} печатает отчет для текущей таблицы

KEYLOOKUP          {Alt}{K} отображает  записи с дубликатами клю-
                   чей

KEYPRESS           ввод любого символа в систему Paradox как буд-
                   то с клавиатуры

LEFT               моделирует нажатие {-->}

LOCATE             позиционирует на запись в таблице

LOCK               блокирует одну или несколько таблиц

LOCKKEY            {Alt} {L}  переключение блокировки текущей за-
                   писи

LOCKRECORD         блокирует текущую запись

LOOP               передача управления в вершину цикла

MENU               {F10} высвечивает текущее меню

MESSAGE            высветить сообщение

MOVETO             делает поле или запись текущими

OPEN PRINTER       открывает канал текущего устройства печати

PAINTCANVAS        задает цвета или стили  изображения  на  канве
                   языка PAL

PASSWORD           позволяет получить доступ к защищенной таблице

PGDN               моделирует нажатие {PgDn}

PGUP               моделирует нажатие {PgUP}

PICKFORM           выбор формы

PLAY               выполнение скрипта

PRINT              выдает значения на печать или в файл

PRINTER            весь дальнейший  вывод  будет идти на печать и
                   на экран

PRIVTABLES         запоминает таблицы в личном каталоге  пользо-
                   вателя

PROC               определение процедуры

PROMPT             помещает сообщение системы Paradox в две верх-
                   ние строки экрана

PROTECT            защита таблиц с помощью пароля

QUERY              помещает запрос в рабочее поле

QUIT               конец скрипта и возвращение в систему Paradox

QUITLOOP           выход из цикла

READLIB            делает записанные  процедуры  доступными   для
                   скрипта

REFRESH            {Alt}{R} обновляет образы в рабочем пространс-
                   тве

RELEASE            освободить память от используемых переменных и
                   процедур

RENAME             изменение имени таблицы и ее семейства

REPORT             печать отчета

REPORTTABLES       выводит список связанных таблиц в многотаблич-
                   ном отчете

REQUIREDCHECK      включает и выключает режим ограничения целост-
                   ности

RESET              возвращает систему Paradox в состояние MAIN

RETURN             возврат из скрипта или процедуры

REVERSETAB         {Shift}{Tab} перемещает  курсор  к предыдущему
                   полю образа

RIGHT              моделирует нажатие {-->}

ROTATE             {Ctrl}{R} вращает вправо от курсора поля  таб-
                   лицы

RUN                запуск программ DOS

SAVEVARS           сохранение значений   переменных,  массивов  в
                   файл

SCAN               перемещаться по таблице запись за записью

SELECT             сделать выбор меню или ввети ответ  на  запрос
                   из меню

SETDIR             сменить текущий каталог

SETKEY             определить макрос клавиатуры

SETMARGIN          установить левую границу при отображении текс-
                   та

SETMAXSIZE         устанавливает максимальный размер таблицы

SETNEGCOLOR        определяет, используется  ли  выделение цветом
                   отрицательных значений в таблице

SETPRINTER         устанавливает порт для принтера

SETPRIVDIR         устанавливает частный каталог    для  текущего
                   сеанса в сети

SETQUERYORDER      устанавливает порядок сортировки и отображения
                   по умолчанию для таблицы ANSWER

SETRECORDPOSITION  перемещается по  форме  с  многими записями на
                   определенную позицию экрана

SETRESTARTCOUNT    ограничивает рестарт   запроса,   отчета   или
                   "кросстаб" по разделяемой таблице, если та из-
                   меняется

SETRETRYPERIOD     устанавливает период автоматического повтора

SETSWAP            устанавливает минимальный  объем  памяти, под-
                   держиваемой системой Paradox

SETUSERNAME        устанавливает текущее имя пользователя

SHOWARRAY          создает меню на основе двух массивов

SHOWFILES          показывает имена файлов в виде меню

SHOWMENU           генерация меню типа меню системы Paradox

SHOWTABLES         показывает имена таблиц в виде меню

SKIP               переместиться вперед или назад на определенное
                   число записей

SLEEP              сделать паузу на определенное время

SORT               сортировка таблиц

STYLE              установка атрибутов для вывода на канву  языка
                   PAL

SUBTRACT           удаление записей из таблицы, совпадающих с за-
                   писями в другой таблице

SWITCH             выполнение групп команд в зависимости от усло-
                   вия

SYNCCURSOR         устанавливает курсор  на  канву языка PAL в то
                   же место, что и в рабочем поле

TAB                {Tab} служит для перехода в следующее поле об-
                   раза

TEXT               вывод текста на канву языка PAL

TYPEIN             ввод строки символов  в  систему  Paradox  как
                   будто с клавиатуры

UNLOCK             снимает блокировку с одной или нескольких таб-
                   лиц

UNLOCKRECORD       снимает блокировку с текущей записи

UNPASSWORD         изменить возможность доступа к защищенной таб-
                   лице

UP                 моделирует нажатие клавиши "стрелка вверх"

UPIMAGE            {F3} перемещает курсор вверх к предыдущему об-
                   разу

VERTRULER          {Ctrl} {V}   отображает  вертикальный  счетчик
                   строк

VIEW               просмотр таблиц на экране

WAIT               позволяет просмотр или редактирование  таблицы
                   или записи до нажатия определенных клавиш

WHILE              выполнение группы  команд в течение выполнения
                   условия

WRITELIB           запись процедуры в библиотеку

ZOOM               {Ctrl}{Z} передвигает курсор к первой записи с
                   указанными величинами

ZOOMNEXT           {Alt} {Z} передвигает курсор к следующей запи-
                   си с указанной величиной

         
               КОМАНДЫ ЯЗЫКА PAL ПО КАТЕГОРИЯМ
-----------------------------------------------------------------
         
                   Команды сокращенного меню
-----------------------------------------------------------------

ADD       добавить записи из одной таблицы в другую
CANCELEDIT отменяет режим редактирования
COPY      копирование таблицы и ее семейства в другую таблицу
COPYFORM  копирование формы
COPYREPORT копирование отчета
CREATE    создание новой таблицы
DELETE    удаление таблицы и ее семейства
EDIT      редактирование таблицы
EMPTY     очистка таблицы от всех записей
EXIT      завершение работы системы Paradox и выход  в DOS
INDEX     создание вторичного индекса таблицы
LOCK      блокирует одну или несколько таблиц
PICKFORM  выбор формы
PLAY      выполнение скрипта
PROTECT   защита таблиц с помощью пароля
QUERY     помещает запрос в рабочее поле
RENAME    изменение имени таблицы и ее семейства
REPORT    печать отчета
SETDIR    сменить текущий директорий
SETPRIVDIR устанавливает частный  директорий  для текущего сеан-
          са в сети
SETUSERNAME устанавливает текущее имя пользователя
SORT      сортировка таблиц
SUBTRACT  удаление записей из таблицы, совпадающих с записями  в
          другой таблице
UNLOCK    снимает блокировку с одной или нескольких таблиц
UNPASSWORD изменить возможность доступа к защищенной таблице
VIEW      просмотр таблиц на экране
                                                                                                                                                                                                                                                               
          Команды управления библиотеками  процедур
-----------------------------------------------------------------
CREATELIB создание новой библиотеки процедур
EXECPROC  вызывает процедуру, не имеющую аргументов
INFOLIB   вывод на экран имен процедур в библиотеке
PROC      определение процедуры
READLIB   делает записанные процедуры доступными для скрипта
RELEASE   освободить память от используемых переменных и  про-
SETSWAP   устанавливает минимальный объем памяти, поддерживаемой
          системой Paradox
WRITELIB  запись процедуры в библиотеку
                                                                                                                                                                                                                                                               
          Команды для работы с переменными, массивами
-----------------------------------------------------------------
=         присвоение значений переменным, масивам или полям
ARRAY     определение массива
COPYFROMARRAY  копирование элементов массива в поля текущей
          записи текущего образа
COPYTOARRAY  копирует  поля  текущей  записи  в  массив
FORMTABLES выдает  список  таблиц,   включенных в многотабличную
          форму
RELEASE   освободить память от используемых переменных и  про-
          цедур
REPORTTABLES выводит список связанных  таблиц  в  многотаблич-
          ном отчете
SAVEVARS  сохранение значений переменных, массивов в файл
                                                                                                                                                                                                                                                               
             Команды для работы с рабочим полем
-----------------------------------------------------------------
CHECK     {F6} размещает или стирает метку в выбранном поле фор-
          мы
CHECKDESCENDING {Ctrl}{F6} сортирует текущее поле запроса в убы-
          вающем порядке
CHECKPLUS {Alt}{F6} размещает или стирает метку   в    выбранном
          поле формы
CLEARALL  {Alt} {F8} Очищает все образы   в  рабочем  пространс-
          тве системы  Paradox
CLEARIMAGE {F8} удаляет текущий образ
DITTO     {Ctrl} {D} копирует поле из предыдущей записи
DOWNIMAGE {F4} перемещает  курсор вниз к следующему образу в ра-
          бочем пространстве
FIRSTSHOW делает текущий образ первым видимым образом
GROUPBY   {Shift}{F6} при использовании наборов в запросах груп-
          пирует записи по текущему полю запроса без его отобра-
          жения
LOCATE    позиционирует на запись в таблице
MOVETO    делает поле или запись текущими
PASSWORD  позволяет получить доступ к защищенной таблице
REQUIREDCHECK включает и выключает режим ограничения целостно-
          сти
ROTATE    {Ctrl}{R} вращает вправо от курсора поля таблицы
SELECT    сделать выбор меню или ввети ответ на запрос из меню
SETNEGCOLOR определяет, используется ли выделение цветом отрица-
          тельных значений в таблице
SETQUERYORDER устанавливает порядок сортировки и отображения  по
          умолчанию для таблицы ANSWER
SETRECORDPOSITION перемещается  по  форме  с многими записями на
          определенную позицию экрана
SKIP      переместиться вперед или назад на определенное   число
          записей
SYNCCURSOR  устанавливает курсор на канву языка PAL в то же место, что
          и в рабочем поле
TYPEIN    ввод строки символов в систему Paradox как будто с клавиатуры
UNPASSWORD изменить возможность доступа к защищенной таблице
UPIMAGE   {F3} перемещает курсор вверх к предыдущему образу
                                                                                                                                                                                                                                                               
                      Команды ввода-вывода
-----------------------------------------------------------------
?         запись в строку ниже курсора на канве языка PAL
??        запись в строку на канве языка PAL сразу после курсора
@         позиционирует курсор на канве языка PAL
ACCEPT    ввести значения с клавиатуры
BEEP      звуковой сигнал
CANVAS    управляет отображением канвы языка PAL на экране
CLEAR     очистка канвы языка PAL
CLOSE PRINTER закрывает ранее открытый канал устройства печати
CURSOR    переключает изображение  курсора на канве или изменяет
          его вид
ECHO      открывает  или блокирует вывод на дисплей внутреннюю
          работу скрипта
KEYPRESS  ввод любого символа в систему  Paradox как будто с клавиатуры
MESSAGE   высветить сообщение
OPEN PRINTER открывает канал текущего устройства печати
PAINTCANVAS задает цвета или  стили  изображения  на  канве
        языка PAL
PRINT     посылает значения на печать или в файл
PRINTER   весь дальнейший выводбудет идти на печать и на экран
PROMPT    помещает приглашение системы Paradox в две верхние строки эк-
          рана
SETMARGIN установить левую границу при отображении текста
SETPRINTER устанавливает порт для принтера
SHOWARRAY создает меню на основе двух массивов
SHOWFILES показывает имена файлов в виде меню
SHOWMENU  генерация меню типа меню системы  Paradox
SHOWTABLES показывает имена таблиц в виде меню
STYLE     установка атрибутов для вывода в канву языка PAL
TEXT      вывод текста на канву языка PAL
TYPEIN    ввод строки символов в систему Paradox как будто с клавиатуры
WAIT      позволяет просмотр или редактирование таблицы  или  за-
          писи до нажатия определенных клавиш
                                                                                                                                                                                                                                                               
                   Системные команды языка PAL
-----------------------------------------------------------------
DEBUG     прекращение выполнения  скрипта  и передача управления
          отладчику (D)
EDITLOG   восстанавливает или аннулирует изменения в таблице,за-
          писанные в журнал транзакций
EXECUTE   выполнить последовательность команд языка PAL
RESET     возвращает систему Paradox в состояние MAIN
RUN       запуск программ DOS
SETKEY    определить макрос клавиатуры
SETMAXSIZE устанавливает максимальный размер таблицы
SLEEP     сделать паузу на определенное время
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
             Команды управления выполнением скрипта
-----------------------------------------------------------------
FOR       выполняет последовательность команд заданное число раз
IF        проверка условия
LOOP      передача управления в вершину цикла
PROC      определение процедуры
QUIT      конец скрипта и возвращение в систему Paradox
QUITLOOP  выход из цикла
RETURN    возврат из скрипта или процедуры
SCAN      перемещаться по таблице запись за записью
SWITCH    выполнение групп команд в зависимости от условия
WHILE     выполнение группы команд в течение выполнения условия
                                                                                                                                                                                                                                                               
                 Команды,имитирующие нажатие
             специальных   клавиш  системы Paradox
-----------------------------------------------------------------
BACKSPACE {Backspace} уничтожает символы слева от курсора
CHECK     {F6} размещает или стирает метку в выбранном поле фор-
          мы
CHECKDESCENDING {Ctrl}{F6} сортирует текущее поле запроса в убы-
          вающем порядке
CHECKPLUS {Alt}{F6} размещает или стирает метку   в    выбранном
          поле формы
CLEARALL  {Alt} {F8} Очищает все образы   в  рабочем  пространс-
          тве системы Paradox
CLEARIMAGE {F8} удаляет текущий образ
COEDITKEY {Alt} {F9} включает режим совместного редактирования
CROSSTABKEY {Alt}{X} создание "кросс"-таблицы для данной таблицы
CTRLBACKSPACE {Ctrl} {Backspase} стирает содержимое текущего поля
CTRLBREAK {Ctrl} {Break} прерывает выполнение текущей задачи
CTRLEND   моделирует нажатие {Ctrl} {End}
CTRLHOME  моделирует нажатие {Ctrl} {Home}
CTRLLEFT  моделирует нажатие {Ctrl} {<--}
CTRLPGDN  моделирует нажатие {Ctrl} {PgDn}
CTRLPGUP  моделирует нажатие {Ctrl} {PgUp}
CTRLRIGHT моделирует нажатие {Ctrl} {-->}
DEL       нажатие {Del}
DELETELINE {Ctrl}{Y} удаляет информацию  от  позиции  курсора до
          конца строки
DITTO     {Ctrl} {D} копирует поле из предыдущей записи
DO_IT!    {F2} заканчивает или выполняет операцию
DOS       {Ctrl}{O} временный выход в DOS
DOSBIG    {Alt}{O} временный выход в DOS с освобождением  макси-
          мально доступной памяти
DOWN      моделирует нажатие клавиши "стрелка вниз"
DOWNIMAGE {F4} перемещает  курсор вниз к следующему образу в ра-
          бочем пространстве
EDITKEY   {F9} включение режима редактирования таблицы
END       {End}
ENTER     {Enter}
ESC       {Esc} возвращает  в  предыдущее  меню,приглашение  или
          состояние рабочего поля
EXAMPLE   {F5} вводит пример в текущее поле запроса
FIELDVIEW {Alt}{F5} или {Ctrl}{F} включает режим просмотра поля
FORMKEY   {F7} переключает изображение табличного вида и формы
GRAPHKEY  {Ctrl}{F7} выдает график текущей таблицы
GROUPBY   {Shift}{F6} при использовании наборов в запросах груп-
          пирует записи по текущему полю запроса без его отобра-
          жения
HELP      {F1} выводит подсказку на экран
HOME      {Home}
INS       {Ins}
INSTANTPLAY {Alt} {F4} служит для запуска instant скрипта
INSTANTREPORT {Alt} {F7} печатает отчет для текущей таблицы
KEYLOOKUP {Alt}{K} отображает записи с дубликатами ключей
LEFT      {<--}
LOCKKEY   {Alt} {L} переключение блокировки текущей записи
MENU      {F10} высвечивает текущее меню
PGDN      {PgDn}
PGUP      {PgUP}
REFRESH   {Alt}{R} обновляет образы в рабочем пространстве
REVERSETAB {Shift}{Tab} перемещает курсор к предыдущему   полю
          образа
RIGHT     {-->}
ROTATE    {Ctrl}{R} вращает вправо от курсора поля таблицы
TAB       {Tab} служит для перехода в следующее поле образа
UP        моделирует нажатие клавиши "стрелка вверх"
UPIMAGE   {F3} перемещает курсор вверх к предыдущему образу
VERTRULER {Ctrl} {V} отображает вертикальный счетчик строк
ZOOM      {Ctrl}{Z} передвигает курсор к первой записи с  указан-
          ными величинами
ZOOMNEXT  {Alt} {Z} передвигает курсор к следующей  записи с ука-
          занной величиной
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                Многопользовательские команды
           (доступны  только в версиях 2.0 и выше)
----------------------------------------------------------------
IMAGERIGHTS устанавливает или удаляет право доступа к образам
LOCK      блокирует одну или несколько таблиц
LOCKKEY   {Alt} {L} переключение блокировки текущей записи
LOCKRECORD блокирует текущую запись
PRIVTABLES запоминает таблицы в личном директории пользователя
REFRESH   {Alt}{R} обновляет образы в рабочем пространстве
SETPRIVDIR устанавливает частный  директорий  для текущего сеан-
          са в сети
SETRESTARTCOUNT ограничивает рестарт запроса, отчета или "кросс-
          таб"  по разделяемой таблице, если та изменяется
SETRETRYPERIOD устанавливает период автоматического повтора
SETUSERNAME устанавливает текущее имя пользователя
UNLOCK    снимает блокировку с одной или нескольких таблиц
UNLOCKRECORD снимает блокировку с текущей записи
     

                         ОПИСАНИЕ КОМАНД
-----------------------------------------------------------------
      
                                  =
         
              Присваивает значения переменным,  элементам массива
              или полям в образе на рабочем поле.
     
Синтаксис     <переменная>=<выражение> |
              <элемент массива>=<выражение> |
              <спецификатор поля>=<выражение>
         
Описание      Предыдущее значение,   если оно имелось,  теряется.
              Первая форма присваивает значение переменной,  вто-
              рая - элементу массива, третья - полю таблицы. Зна-
              чение <выражениe> может быть любого типа.
              
Использование Необходимо принять во внимание,  что в случае прис-
              ваивания значения   полю,  тип значения должен быть
              типом поля. Вы не можете присвоить число буквенному
              полю, (однако  вы можете превратить число в строку,
              используя функцию STRVAL).
              
Примеры       у=01.05.60 - переменная
              x[20] = 27 * y  - элемент массива
              [NAME]= x+3     - поле
-----------------------------------------------------------------
                                       ?
              
              Высвечивает значение непосредственно  ниже  курсора
              на канве языка PAL.
              
Синтаксис     ? <выражение 1>, <выражение 2>, ... ,<выражение n>
              
Описание      Эта команда  выводит  значение выражения на экран с
              начала строки,  которая располагается ниже курсора.
              Значения выводятся   последовательно  без  пробелов
              между ними. Курсор перемещается к последнему высве-
              ченному значению  и устанавливается за ним.  Если ?
              занимает всю строку,  то курсор просто перемещается
              к следующей строке.
              
Использование Режимы и  атрибуты экрана (яркость,  цвет,  и т.п.)
              выбираются с помощью команды STYLE.
              
Примеры       Предположим, что текущее значение х = 1.5.60.
              Команда
              ? "The value of x is: ", x
              перемещает курсор к следующей строке и высвечивает:
              The value of x is: 1.5.60
              
См.также      Необходимо отметить, что часто предпочтительнее ис-
              пользовать команду TEXT для вывода текста на экран.
-----------------------------------------------------------------
                                      ??
              
              Высвечивает значения выражений на канве  языка  PAL
              начиная с текущей позиции курсора.
              
Синтаксис     ?? <выражение 1>, <выражение 2>, ... ,<выражение n>
              
Описание      Эта команда работает в в точности,  как и ?, но на-
              чинает вывод на экран с  текущей  позиции  курсора,
              перемещаясь затем на следующую строку.
              
Примеры       @ 10,10 ; располагая курсор на 10 строке 10 столбца.
              ?? "Enter you name" ; приглашает пользователя
                                  ; ввести имя.
              ACCEPT "NAME"       ; ввод переменной имя.
-----------------------------------------------------------------
                                       @
              
              Устанавливает курсор  в  заданную позицию координат
              экран на канве языка PAL
              
Синтаксис     @ <номер строки>, <номер столбца>
              
Описание      Экран имеет 24 строки и 80 столбцов. Строки нумеру-
              ются сверху вниз,  начиная с 0 и заканчивая 79. На-
              чало экрана имеет координаты 0,0 и,  следовательно,
              находится в   левом  верхнем  углу.  Любое значение
              строки вне интервала 0...24 и столбца вне интервала
              0...79 будут  давать ошибку.  Эта команда относится
              только к режиму PAla, но не к системе Paradox.
              
Примеры       @ 0,0 ; устанавливает курсор в начало (0,0).
              @ ROW(),COL()+1 ;перемещает курсор в следую-
                              ;щий столбец.
-----------------------------------------------------------------
                                    ACCEPT
              
              Ввод данных с клавиатуры с контролем ввода.

Синтаксис     ACCEPT <data type>
                           <<PICTURE<picture> >>
                           <<MIN <min value> >>
                           <<MAX <max value> >>
                           <<LOOKUP <lookup table> >>
                           <<DEFAULT <default value> >>
                           <<REQUIRED>>
                    TO <variable>
              где <picture> и <lookup table>-строковые выражения;
              <min value>,<max value>,<default value> - выражения
              со значением такого же типа имени,  как <data type>
              и <variable>.
              
Описание      Эта команда позволяет пользователю вводить значения
              определенных типов данных.  Когда ACCEPT выполняет-
              ся, управление   переходит к пользователю,  который
              должен ввести данные.  Когда пользователь  нажимает
              {ENTER}, введенные  значения присваиваются перемен-
              ной <variable>,  и управление возвращается к  прог-
              рамме.
              
Использование В процессе  ввода  пользователь  может использовать
              {BackSpace} для уничтожения  последнего  набранного
              символа, и   {Ctrl}{BackSpase} для уничтожения всех
              набранных символов.  Добавим,  что  при  завершении
              ввода, если   вводится ошибочное значение,  система
              Paradox дает сигнал.  Услуга выбора  PICTURE  может
              быть использоваться   для  ввода новых типов данных
              (например, телефонных  нонабранных символов в верх-
              ний регистр,  для автоматичесгого заполнения обяза-
              тельных символов).Выбор МIN и MAX  задает  интервал
              данных, а  LOOKUP используется для того, чтобы про-
              верить, есть  ли значения, набранные пользователем,
              в первом поле таблицы,заданной опцией LOOKUP. Выбор
              использования DEFAULT может  быть  использован  для
              установки значения " по умолчанию ". Выбор REQUIRED
              используется для того, чтобы пользователю необходи-
              мо было   для дальнейшего выполнения скрипта ввести
              значение. Если  пользователь в ответ на ACCEPT вве-
              дет значение,    то  специальной  переменной retval
              присвоится значение "истинно".   Если  пользователь
              нажмет {Esc} в ответ на ACCEPT,  retval будет "лож-
              но". Если используется PICTURE, выражение <picture>
              должно содержать строковое значение, представленное
              правильной спецификацией picture.
              
Примеры       Предлагается пользователю ввести дату между  сегод-
              няшним днем   и  1 январем 1999г.  Сегодняшняя дата
              принимается как начальное значение.
              
              @10,10  ;позиция курсора
              ?? "Введите дату: "
              ACCEPT "D"
                 MIN today()
                 MAX 1/1/99
                 DEFAULT today()
              TO X
-----------------------------------------------------------------
                                      ADD
              
              Команда добавляет записи из одной таблицы в другую.
              
Синтаксис     ADD <исходная табл.> <добавляемая табл.>
              
Описание      Для того,  чтобы исполнить  ADD,   система  Paradox
              должна нахоыиться в состоянии MAIN.  Результирующая
              таблица остается в рабочем поле.  Для таблиц с клю-
              чом ADD автоматически использует опцию UPDATE(с об-
              новлением),поэтому добавляемые записи, имеющие клю-
              чи, совпадающие  с ключами записей в результирующей
              таблице, вытеснят последних. Если не определена ка-
              кая либо из таблиц, выдается сообщение об ошибке.
              
Примеры       ADD "TAN" "TAN1"
              Эта команда эквивалентна следующему выбору из меню:
              MENU {TOOLS}{MORE}{ADD}{TAN}{TAN1}
-----------------------------------------------------------------
                                     ARRAY
              
              Cоздает массив с данным именем и размерностью.
              
Синтаксис     ARRAY <имя массива> [размерность]
              
Описание      Размерность может быть от 1 до 15000,  а любые дру-
              гие значения не из этого интервала дадут ошибку.  В
              скрипте языка  PAL элементу массива можно присвоить
              значения любого типа.  Вы можете присвоить значение
              различных типов   разным элементам в одном и том же
              массиве.
              
Примеры       x=25
              ARRAY  A[x+3] ; обьявляет массив из 28 эле-
                            ;     ментов
              
              MESSAGE "Array a  has:",ARRAYSIZE(A),"elem"
-----------------------------------------------------------------
                                   BACKSPACE
              
              Аналогична использованию клавиши {BackSpase}.
              
Описание      Уничтожает символы слева от курсора.
-----------------------------------------------------------------
                                     BEEP
              
              Выдача звукового сигнала.
              
Примеры       CLEAR
                BEEP BEEP BEEP
                 TEXT
                  " Внимание!!! "
                 ENDTEXT
-----------------------------------------------------------------
                                  CANCELEDIT
              
              Команда сокращенного меню,  которая заканчивает се-
              анс редактирования без сохранения изменений.
              
Описание      Эта команда  эквивалентна последовательности,  выб-
              ранной из  меню:   MENU{CANCEL}{YES}  Если  система
              Paradox во  время выполнения этой команды находится
              в состоянии MAIN,  то все изменения,   сделанные  в
              таблицах, находящихся  в рабочем поле, анулируются.
              Если система находится не в состоянии  редактирова-
              ния, то регистрируется ошибка.
              
Примеры       IF STATUS ="emegency"
                 THEN CANCELEDIT
              ENDIF
-----------------------------------------------------------------
                                    CANVAS
              
              Управляет отображением на экране канвы языка PAL.
              
Синтаксис     CANVAS <ON|OFF>
              
Описание      Обычно все изменения на канве языка PAL  немедленно
              отображаются на  экране.  Канву можно отключить ко-
              мандой CANVAS OFF,чтобы скрыть эти измения от поль-
              зователя. Это  позволит вам сначала построить изоб-
              ражения, а  потом целиком выдать его на экран.  При
              включении канвы  CANVAS ON текущая канва немедленно
              отображается на экране, и все дальнейшие ее измене-
              ния будут также отображаться на экране.
              
Версия        Эта команда была добавлена в систему Paradox  начи-
              ная с версии 3.0.
-----------------------------------------------------------------
                                     CHECK
              
              Имитирует нажатие  {F6}Checkmark для размещения или
              удаления метки в выбранном поле формы запроса.
              
Синтаксис     CHECK
              
Описание      Метка, помещенная этой командой,определяет  включе-
              ние данного поля таблицы в результат запроса.  Зна-
              чения в выбранном поле сортируются  в  возрастающем
              порядке. Если  курсор не находится в форме запроса,
              команда игнорируется.
              
Примеры       На рабочее поле отображается форма запроса для таб-
              лицы orders.    Первый CHECK(в самом левом столбце)
              выбирает все поля,  второй CHECK - удаляет метку  в
              поле Date.
              
              MENU {Ask}{Orders}
              CHECK
              MOVETO FIELD "Date"
              CHECK
-----------------------------------------------------------------
                                CHECKDESCENDING
              
              Имитирует нажатие   {Ctrl}{F6}CheckDescending   для
              сортировки текущего поля запроса в убывающем поряд-
              ке.
              
Синтаксис     CHECKDESCENDING
              
Описание      Метка, помещенная  этой командой,определяет включе-
              ние данного поля таблицы в результат запроса.  Зна-
              чения в   выбранном  поле  сортируются  в убывающем
              порядке. Если  курсор не находится в форме запроса,
              команда игнорируется.
              
Примеры       На рабочее поле отображается форма запроса для таб-
              лицы orders.  На ней выбираются для включения в ре-
              зультат поля   Date и Emp#.  CHECKDESCENDING в поле
              Date означает,  что  самый  последний  ордер  будет
              отображен первым. Внутри каждой группы по дате,пос-
              тавщики будут выдаваться в возрастающем порядке.
              
              MENU {Ask}{Order}
              MOVETO FIELD "Date"
              CHECKDESCENDING
              TAB
              CHECK
-----------------------------------------------------------------
                                   CHECKPLUS
              
              Имитирует нажатие {Alt}{F6}Checkplus для размещения
              или удаления метки в выбранном поле формы  запроса.
              
Синтаксис     CHECKPLUS
              
Описание      Метка, помещенная этой командой,определяет  включе-
              ние данного   поля  таблицы  в  результат  запроса.
              Дублирующиеся записи будут помещаться в результиру-
              ющую таблицу. Включение CHECKPLUS также предохраня-
              ет записи в результирующей таблице  от  сортировки.
              Если курсор  не находится в форме запроса,  команда
              игнорируется.
              
Примеры       На рабочее поле отображается форма запроса для таб-
              лицы orders.    Первый  CHECK  помещается  в первом
              столбце таблицы,  CHECKPLUS - помещается в  столбце
              Cust Id.
              
              MENU {Ask}{Orders} TAB
              CHECK
              MOVETO FIELD "Cust Id"
              CHECKPLUS
              
              После этого все записи,  включая дублированные, бу-
              дут помещены в результат без сортировки.
-----------------------------------------------------------------
                                     CLEAR
              
              Очищает полностью  канву языка PAL,  или от курсора
              до конца строки или прямоугольный блок  от  курсора
              до нижнего правого угла экрана.
              
Синтаксис     CLEAR или CLEAR EOL или CLEAR EOS.
              
Описание      Ни одна из этих трех форм команды CLEAR не изменяет
              положение курсора на канве. Отметим, что с запуском
              скрипта экран не очищается автоматически.  Скрипты,
              которые производят экранный ввод/вывод ,обычно  ис-
              пользуют команду CLEAR для инициализации экрана.
         
См.также      CLEAR не  удаляет  образы  из рабочего поля системы
              Paradox. Специальные  команды CLEAR IMAGE {Alt}{F8}
              и CLEAR ALL {F8} производят эти действия.
              
Примеры       Пример ниже стирает канву, устанавливает курсор в 7
              ряд 19 колонку и высвечивает сообщение.
              
              CLEAR @7,19
              ?? "Нажмите любую клавишу для продолжения"
-----------------------------------------------------------------
                                   CLEARALL
              
              Команда моделирует нажатие клавиш {ALT}{F8}  (общая
              очистка), для  того, чтобы очистить все изображения
              в рабочем поле системы Paradox.
              
Синтаксис     CLEARALL
              
Описание      В Главном  режиме  (MAIN)  команда CLEARALL очищает
              все изображения,  включая формы запросов, в рабочем
              поле системы Paradox. Во всех других режимах коман-
              да не работает.  Использование:  Если вы не  хотите
              работать с изображениями,  которые уже существуют в
              рабочем поле системы Paradox, то эта команда обычно
              помещается в начало скрипта,  использующего рабочее
              поле системы Paradox.
              
Примеры       Этот пример  представляет  собой  короткий фрагмент
              начала большого приложения, где производится иници-
              ализация рабочего поля.
         
              CLEARALL ;очистить  рабочее  поле  системы Paradox
              CLEAR    ;очистить канву языка PAL
              @ 4,1    ;установить позицию курсора
              title=format("w80,ac","The XYZ Company  Accounting
               System")
              STYLE REVERSE
              ? title  ;высветить заголовок
              VIEW "orders" ;высветить таблицу "orders"
-----------------------------------------------------------------
                                  CLEARIMAGE
              
              Моделирует нажатие  клавши {F8} (очистить изображе-
              ние) для  того, чтобы удалить текущее изображение в
              рабочем поле системы Paradox.
              
Синтаксис     CLEARIMAGE
              
Описание      В Главном режиме команда CLEARIMAGE удаляет текущее
              изображение oбъекта (в котором находится курсор) из
              рабочего поля системы Paradox. Во всех других режи-
              мах команда CLEARIMAGE не работает.  При исполнении
              команды, все  объекты, расположенные ниже удаляемо-
              го, перемещаются вверх, заполняя собой освободивши-
              еся пространство, и верхний из них становится теку-
              щим.
              
Примеры       Данный пример помещает три объекта в  рабочее  поле
              системы Paradox и затем удаляет второй.
              
              VIEW "orders"   ;первый объект
              VIEW "parts"    ;второй объект
              VIEW "custs" ;третий объект(он  же  является
                           ;текущим)
              UPIMAGE      ;перевод курсора ко второму объ-
                           ;екту
              CLEARIMAGE   ;удаляет таблицу с именем "parts"
                           ;таблица "custs" стала текущей
-----------------------------------------------------------------
                                 CLOSE PRINTER
              
              Закрывает ранее  открытый канал текущего устройства
              печати.
              
Синтаксис     CLOSE PRINTER
              
Описание      Эта команда используется для того,   чтобы  закрыть
              канал устройства   печати,  ранее открытый командой
              OPEN PRINTER.
              
Использование Всякий раз, когда Вы завершаете вывод информации на
              устройство печати (ранее открытое с помощью команды
              OPEN PRINTER),   Вы должны быть уверены в том,  что
              закрыли его командой CLOSE PRINTER. Эти две команды
              обычно используются   при  работе в сети.  Смотрите
              описание команды OPEN PRINTER для того, чтобы полу-
              чить полную информацию об этих командах.
              
Версия        Команда CLOSE  PRINTER  была  введена   в   систему
              Paradox версии   2.0.  Использование этой команды в
              предыдущих версиях будет приводить к синтаксической
              ошибке.
              
Примеры       SETPRINTER LPT2
              VIEW "orders"
              OPEN PRINTER
              PRINT "Large Orders Through "+ STRVAL(TODAY())
              SCAN FOR {Quan}>1000
                 printline="Customer:"+ STRVAL({Cust ID}
                 PRINT printline + "\n"
              ENDSCAN
              CLOSE PRINTER
              CLEARALL
              
См.также      OPEN PRINTER, PRINT, PRINTER и SETPRINTER.
-----------------------------------------------------------------
                                    COEDIT
              
              Позволяет двум  или нескольким пользователям однов-
              ременно производить изменения в таблице.
              
Синтаксис     COEDIT <TableName>
              
Описание      Команда COEDIT является эквивалентом услуги Modify/
              CoEdit основного   меню системы Paradox и позволяет
              многим пользователям производить изменения в табли-
              це одновременно.  Для того,  чтобы использовать ко-
              манду, система  Paradox должна находиться в Главном
              режиме; в противном случае результатом будет ошибка
              скрипта. При выполнении команды система переходит в
              режим COEDIT  и все таблицы,  находящиеся в рабочем
              поле, можно  редактировать. Благодаря своей способ-
              ности работать со многими пользователями (автомати-
              чески блокировать записи, пока пользователь изменя-
              ет данные),    режим  COEDIT  дополняет  режим EDIT
              сетевыми возможностями.  Однако, что не так очевид-
              но, он    по  своим  возможностям превосходит режим
              EDIT, также   в  однопользовательских  приложениях.
              Например, в   режиме COEDIT изменения каждой записи
              посылаются непосредственно (не пакетом, как в режи-
              ме EDIT)    и все необходимые индексы при изменении
              настраиваются автоматически.   Кроме  того,   режим
              COEDIT предоставляет возможность поддержки ситуаций
              нарушений управления клавишами,  чего в режиме EDIT
              сделать невозможно.  Только в одном проигрывает ре-
              жим COEDIT:  он не поддерживает услугу Undo  (отказ
              от последних изменений),  однако ее можно легко ор-
              ганизовать в приложении.
              
Использование Для того,  чтобы редактировать в  приложении  более
              двух таблиц одновременно, существует общая практика
              использовать команду VIEW для размещения всех  таб-
              лиц, за  исключением последней,  в рабочем поле,  а
              затем использовать  команду  COEDIT  для  последней
              таблицы, как   это показано в примере,  приведенном
              ниже. (Вы также можете высветить все таблицы коман-
              дой VIEW,    а затем использовать команду COEDITKEY
              для того,  чтобы войти в режим COEDIT.)  Совместное
              редактирование таблицы  автоматически предотвращает
              полную блокировку.Если таблица,  которую Вы  хотите
              совместно редактировать, полностью заблокирована из
              приложения другого пользователя,  команда будет ав-
              томатически приостановлена   до  повторного  сеанса
              связи. Для  того,  чтобы  предотвратить  прерывание
              скрипта, Вы    можете использовать команду LOCK для
              ручного предотвращения полной блокировки перед  ис-
              пользованием команды COEDIT.
              
Версия        Команда COEDIT  была введена в систему Paradox вер-
              сии 2.0.  Использовании этой команды в более ранних
              версиях систем  Paradox будет приводить к синтакси-
              ческой ошибке.
         
Примеры       VIEW "orders" ;первая таблица в рабочем прост-
                            ;ранстве
              VIEW "stock"  ;вторая таблица
              COEDIT  "customer";все три таблицы находятся в
                         ;режиме совместного редактирования.
              
См.также      COEDITKEY, EDIT, EDITKEY и KEYLOOKUP.
-----------------------------------------------------------------
                                   COEDITKEY
              
              Моделирует нажатие клавиш {Alt}{F9} включения режи-
              ма COEDIT (совместного редактирования).
              
Синтаксис     COEDITKEY
              
Описание      Действие команды  COEDITKEY в Главном режиме анало-
              гично одновременному нажатию клавиш {Alt}{F9} (сов-
              местное редактирование)    и заключается в переводе
              всех таблиц,  находящихся в  рабочем  поле  системы
              Paradox в режим COEDIT.  Во всех других режимах ко-
              манда не работает.
         
         
Версия        Команда COEDITKEY  была  введена  в систему Paradox
              версии 2.0. Использование этой команды в более ран-
              них версиях  системы Paradox будет приводить к син-
              таксической ошибке.
         
Примеры       В этом примере три таблицы помещаются в рабочее по-
              ле и       затем   включается   режим   совместного
              редактирования. Функционально это эквивалентно при-
              меру, приведенному для команды COEDIT.
         
              VIEW "orders" ;первая таблица в рабочем прост-
                            ;ранстве
              VIEW "stock"  ;вторая таблица
              VIEW "customer"
              COEDITKEY     ;все три таблицы находятся в
                         ;режиме совместного редактирования.
         
См.также      COEDIT, EDIT, EDITKEY и KEYLOOKUP.
-----------------------------------------------------------------
                                     COPY
              
              Копирование из существующей таблицы в новую.
              
Синтаксис     COPY <существующая таблица> <новая таблица>
              
Описание      Для использования  этой  команды  система   Paradox
              должна быть     в  состоянии  MAIN.   Как  и  выбор
              MENU/TOOLS/COPY, команда СOPY воспроизводит семейс-
              тво (формы,  таблицы,  индексы и т.д.)  связанное с
              копируемой таблицей.
              
Примеры       COPY  "Tan"  "Tan1"
              Этот пример эквивалентен последовательности  выбора
              из меню:
              MENU {TOOLS} {COPY} {Tan} {Tan1}
              Если Таn1 уже существует,  то:
              MENU {TOOLS} {COPY} {Tan} {Tan1} {REPLACE}
-----------------------------------------------------------------
                                   COPYFORM
              
              Копирование формы из одной таблицы в другую.
              
Синтаксис     COPY <таблица1><форма1><таблица2><форма2>,
              где таблица1 и форма1 - имена исходных таблицы и ее
              формы,
              таблица2 и форма2 - имена результирующих таблицы  и
              ее формы.
              
Описание      Как и выбор MENU/TOOLS/COPY/FORM,  команда COPYFORM
              копирует форму. Форма1 и форма2 должны быть строка-
              ми "F",от   "1"до  "14"  или числом от 1 до 14 (оно
              конвертируется автоматически).Если   результирующая
              форма уже  существует,  она заменяется без дополни-
              тельного запроса.Указанные   таблицы  должны  иметь
              одинаковую структуру.
              
Примеры       Текущей таблицей  является  Answer.Форма  2 таблицы
              Sales88 копируется в форму F(стандартную)   таблицы
              Answer и затем включается просмотр по этой форме.
              
              COPYFORM "Sales88" 2 "answer" "F" ; таблицы должны
                                                ; иметь одинако-
                                                ; вую структуру
              FORMKEY
-----------------------------------------------------------------
                                COPYFROMARRAY
              
              Команда копирует элемент массива в поля текущей за-
              писи текущего образа.
         
Синтаксис     COPYFROMARRAY <имя массива>
              
Описание      Текущий образ предполагается тот, который изображен
              на дисплее,  как в режиме просмотра таблиц, так и в
              режиме просмотра форм.  Система Paradox должна быть
              в состоянии редактирования во время исполнения этой
              команды. Предполагается,  что массив был создан ко-
              мандой COPYTOARRAY или имеет форму  такого  массива
              (см. COPYTOARRAY).   Действие начинается со второго
              элемента массива,  который копируется в первое поле
              текущей записи,   третий элемент массива копируется
              во второе поле и т.д.  до тех пор, пока или массив,
              или запись не исчерпаются. Заметим, что чередование
              столбцов не оказывает никакого действия на порядок,
              в котором   полям  присваивается  значение командой
              COPYFROMARRAY. Присваивание  всегда производится  в
              поле по номерам. Ошибка появляется, если мы пытаем-
              ся копировать неопределенный элемент массива.
        
Примеры       Последовательность команд  присоединяет десятую за-
              пись таблицы "Tan" в конец таблицы "Tan1"
              
              VIEW "Tan1"         ; вызов в раб. поле "Tan1"
              VIEW "Tan"          ; вызов в раб. поле "Tan"
              MOVETO RECORD 10    ; перемещение к 10 записи
              COPYTOARRAY rec     ; выбрать и хранить в rec
              UPIMAGE             ; перемещение к "Tan1"
              END                 ; к последней записи
              EDITKEY             ; режим редактирования
              DOWN                ; открыть пустую запись
              COPYFROMARRAY rec   ; копировать значения из rec
              DO_IT!              ; конец редактирования
-----------------------------------------------------------------
                                  COPYREPORT
              
              Копирование отчета из одной таблицы в другую.
              
Синтаксис     COPY <таблица1> <отчет1> <таблица2> <отчет2>,
              где таблица1 и отчет1 - имена исходных таблицы и ее
              отчета,
              таблица2 и  отчет2 - имена результирующих таблицы и
              ее отчета.
              
Описание      Как и   выбор   MENU/TOOLS/COPY/REPORT,     команда
              COPYREPORT копирует   отчет.Отчет1  и отчет2 должны
              быть строками "F",от "1"до "14"  или  числом  от  1
              до14 (оно   конвертируется  автоматически).Если ре-
              зультирующий отчет уже существует,   он  заменяется
              без дополнительного запроса.Указанные таблицы долж-
              ны иметь одинаковую структуру.
              
Примеры       Текущей таблицей  является Answer.  Отчет 2 таблицы
              Sales88 копируется в отчет F(стандартный)   таблицы
              Answer и затем включается печать этого отчета.
              
              COPYREPORT "Sales88" 2 "answer" "F" ;таблицы должны
                                                 ; иметь одинако-
                                                 ; вую структуру
              INSTANTREPORT
-----------------------------------------------------------------
                                  COPYTOARRAY
              
              Копирует поля текущей записи в массив.
              
Синтаксис     COPYTOARRAY <имя массива>
              
Описание      Эта команда создает новый массив с именем, заданным
              в поле <имя массива> и копирует поля текущей записи
              или текущего образа. Текущий образ должен быть выс-
              вечен на дисплее.  Новый массив создается с размер-
              ностью на один больше,  чем число полей  в  текущей
              записи. Заметим,     что поле номера записи и любые
              только просматриваемые (display-only) или вычисляе-
              мые поля,   которые могут появляться во время прос-
              мотра форм таблиц,  не копируются в массив. Первому
              элементу массива присваивается значение строки, ко-
              торой дается имя текущей таблицы.  Оставшимся  эле-
              ментам присваиваются  значения полей текущей табли-
              цы; второму элементу массива присваивается значение
              первого поля, третьему - значение второго поля и т.
              д. Порядок  полей определяется  текущей  структурой
              таблицы, записи    которой копируются.  Имя таблицы
              присваивается первому элементу массива для облегче-
              ния доступа.   Например,  используя COPYTOARRAY для
              запоминания записей таблицы "ORDER" в массиве A, Вы
              можете снова найти поле PART NO, заполненное в мас-
              сиве использованием следующего обращения к массиву:
              A{"PART NO"}   Индекс интерпретируется как имя поля
              таблицы, имя которой является первым элементом мас-
              сива.
              
Примеры       Следующие команды копируют  первую  запись  таблицы
              "order" вниз на вторую запись, меняя orders date на
              сегодняшнюю дату:
              
              EDIT     "orders"  ;режим редактир.табл."orders"
              COPYTOARRAY  A     ;считывание первой  записи
              DOWN               ;перемещение ко второй записи
              A{"order date"} = today();изменение
              COPYFROMARRAY A    ;копирование во вторую  запись
              DO_IT!             ;завершение редактирования
-----------------------------------------------------------------
                                    CREATE
              
              Команда создает новую таблицу. Если таблица с таким
              именем уже существует, то существующая таблица и ее
              имя уничтожается.  Подтверждения для этого удаления
              не требуется.
         
Синтаксис     CREATE <имя таблицы> LIKE <имя таблицы>
              или
              CREATE <имя  табл.><имя  поля 1>:<тип поля 1>, ...,
                     <имя поля N>:<тип поля N>
              
Описание      Если вы используете LIKE,  тогда команда заимствует
              структуру для новой  таблицы  из  уже  существующей
              таблицы, которую вы назвали. Если названная таблица
              не существует, появляется сообщение об ошибке. Если
              вы не   используете  LIKE,  за именем новой таблицы
              должны следовать одна или несколько строковых конс-
              тант, представляющих  собой имя и тип поля,  разде-
              ленных двоеточием.  Имена полей и типы полей должны
              соответствовать условиям системы Paradox.  Заметим,
              что ключевые поля помечаются добавлением  звездочки
              к указателю типа поля.
              
Примеры       Команда создает новую таблицу с такой  же  структу-
              рой, как существующая:CREATE "Newtan" LIKE "oldtan"
                                    
              CREATE "checks" "check No.":"S*","date":"D*"
              
              Если Вы записывали скрипт в системе Paradox с целью
              получения того же самого эффекта,  то это выглядело
              бы следующим образом:
              MENU  {CREATE}  {CHECKS}  "Check  No."  ENTER "S*"
              ENTER "date" ENTER "D"
-----------------------------------------------------------------
                                   CREATELIB
              
              Эта команда создает новую библиотеку,  в которой вы
              можете хранить описанные процедуры.
              
Синтаксис     CREATELIB <имя библиотеки> <<SIZE <число> >>,
              где число  определяет  размер библиотеки в процеду-
              рах, от 50 до 300.
              
Использование Имя библиотеки  должно  начинаться  с  буквы и быть
              длиной от 1 до 8 символов.  Библиотеки хранятся  на
              диске с расширением "LIB".  Все библиотеки процедур
              должны быть   созданы   только   с   использованием
              CREATLIB, затем    вы  можете  использовать команду
              WRITELIB для записи в них любых процедур.  Если имя
              библиотеки, которую вы определяете, уже существует,
              то язык PAL поместит новую на место существующей, и
              все описанные  процедуры в ней будут уничтожены без
              просьбы о подтверждении. Команда INFOLIB может быть
              использована для просмотра названий хранимых проце-
              дур в данной библиотеке.
-----------------------------------------------------------------
                                  CROSSTABKEY
              
              Имитирует нажатие клавиши {Alt}{X}Crosstab,  кросс-
              табулирующей текущую таблицу.
              
Синтаксис     CROSSTABKEY
              
              CROSSTABKEY преобразует  текущую  таблицу  к  виду,
              подходящему для анализа и графического  представле-
              ния.При этом предпринимаются следующее:
              - данные в текущем поле и всех полях левее текущего
              становятся метками   строк  и ключом результирующей
              таблицы crosstab;
              - данные  в  следующем  за текущим полем становятся
              метками столбцов;
              - данные самого правого столбца становятся значени-
              ями, суммируемыми для каждых столбца и строки.
              Чтобы поменять местами столбцы, используйте ROTATE.
              
Примеры       Вы только что сгенерировали таблицу answer,содержа-
              щую информацию о ордерах.Теперь вы кросстабулируете
              ее и выведете график.
         
              MOVETO FIELD  "Quantity" ; переводит Quantity в ко-
                                       ; нец таблицы
              ROTATE                   ;
              MOVETO FIELD "Book"      ;эти значения будут метками
                                       ;столбцов
              CROSSTABKEY              ;курсор в первом числовом
                                       ;поле
              GRAPHKEY                 ;выод графика
-----------------------------------------------------------------
                                 CTRLBACKSPACE
              
              Команда моделирует  одновременное  нажатие   клавиш
              {Ctrl}{Backspace} для того,  чтобы стереть содержи-
              мое текущего поля.
              
Синтаксис     CTRLBACKSPACE
              
Описание      В режиме  редактирования и совместного редактирова-
              ния стирает содержимое текущего поля.В Главном  ре-
              жиме команда     производит   те   же   действия  в
              изображении запроса. Во время редактирования высве-
              ченного поля, команда CTRLBACKSPACE стирает величи-
              ну в текущем поле  и  завершает  просмотр  поля.Она
              также уничтожает  текущую величину при вводе ответа
              на запрос меню.
              Если система Paradox находится в контекстах, отлич-
              ных от упомянутых выше, то команда игнорируется.
         
См.также      BACKSPACE.
-----------------------------------------------------------------
                                   CTRLBREAK
              
              Команда моделирует нажатие клавиш {Ctrl}{Break} для
              прерывания текущей задачи.
         
Синтаксис     CTRLBREAK
              
Описание      Команда CTRLBREAK,    как    и    нажатие    клавиш
              {Ctrl}{Break},останавливает текущую  задачу и возв-
              ращает к предыдущей команде.  Если нет других прер-
              ванных задач, то эта команда будет прерывать работу
              скрипта. Заметим,   что до сих пор  нажатие  клавиш
              {Ctrl}{Break} использовалось интерактивно,  для то-
              го, чтобы  прервать работу запросов, сортировки или
              отчетов, однако эта команда не может быть использо-
              вана аналогичным образом во время  работы  скрипта.
              Поэтому, при  начавшейся работе запроса, сортировки
              или отчета,  управление не может быть  передано  до
              окончания процесса скрипту.
              
Использование Команда CTRLBREAK  может быть использована для пре-
              рывания работы скрипта и перевода Вас в  режим  ре-
              дактирования. Действие команды по выходу из подсис-
              тем системы  Paradox  может  быть  запрещено  через
              услугу More/BreakDisable из меню программы конфигу-
              рации системы Paradox.
-----------------------------------------------------------------
                                    CTRLEND
              
              Моделирует нажатие клавиш {Ctrl}{End}.
              
Синтаксис     CTRLEND
              
Описание      Действие команды CTRLEND  аналогично  действию  при
              одновременном нажатии  клавиш {Ctrl}{End} и зависит
              от текущего контекста.  Если система Paradox  нахо-
              дится не в подходящем режиме, команда игнорируется.
              Следующая таблица   показывает   действие   команды
              CTRLEND в различных режимах системы Paradox:
         
              Режим ------------------  Действие
        
              Главный, Редактирование,    Делает текущей запись
              Совместное редактирование   в последнем поле
       
              Любой режим/Просмотр поля   Переводит курсор к пос-
              леднему символу в поле
               
              Формы                       Переводит курсор в конец
                                          строки
              Редактор отчетов            Переводит курсор к после-
                                          днему символу строки
              Редактор скриптов           Переводит курсор к после-
                                          днему символу строки
-----------------------------------------------------------------
                                   CTRLHOME
         
              Моделирует нажатие клавиш {Ctrl}{Home}.
              
Синтаксис     CTRLHOME
              
Описание      Действие команды CTRLHOME аналогично  действию  при
              одновременном нажатии клавиш {Ctrl}{Home} и зависит
              от текущего контекста.  Если система Paradox  нахо-
              дится не в подходящем режиме, команда игнорируется.
              Следующая таблица   показывает   действие   команды
              CTRLHOME в различных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Делает текущей запись
       Совместное редактирование    в первом поле
       Любой режим/Просмотр поля    Переводит курсор к пер-
                                    вому символу в поле
       Формы                        Переводит курсор в начало
                                    строки
       Редактор отчетов             Переводит курсор к перво-
                                    му символу строки
       Редактор скриптов            Переводит курсор к перво-
                                    му символу строки
-----------------------------------------------------------------
                                   CTRLLEFT
              
              Моделирует нажатие клавиш {Ctrl}{<--}.
              
Синтаксис     CTRLLEFT
              
Описание      Действие команды CTRLLEFT аналогично  действию  при
              одновременном нажатии  клавиш {Ctrl}{<--} и зависит
              от текущего контекста.  Если система Paradox  нахо-
              дится не в подходящем режиме, команда игнорируется.
              Следующая таблица   показывает   действие   команды
              CTRLLEFT в различных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Cдвигает курсор на один
       Совместное редактирова-      экран вправо
       ние/ПросмотрТаблиц
         
       Главный, Редактирование,     Нет действия
       Совместное редактирова-
       ние/Просмотр Формы
         
       Любой режим/Просмотр поля    Переводит курсор на одно
                                    слово вправо
         
       Формы                        Нет действия
       
       Редактор отчетов             Сдвигает курсор на один
                                    экран вправо
       Редактор скриптов            Сдвигает курсор на полэк-
                                    рана вправо
                                               
              Заметим, что  нажатие  клавиш {Ctrl}{Left} сдвигает
              на один полный  экран  влево  услуги  меню  системы
              Paradox,но такое  действие невозможно с помощью ко-
              манды CTRLLEFT из скрипта.
-----------------------------------------------------------------
                                   CTRLPGDN
              
              Моделирует нажатие клавиш {Ctrl}{PgDn}.
              
Синтаксис     CTRLPGDN
              
Описание      Действие команды  CTRLPGDN  аналогично действию при
              одновременном нажатии клавиш {Ctrl}{PgDn}.  Команда
              переводит курсор к следующей записи в том же поле в
              режиме просмотра формы. В других контекстах команда
              игнорируется.
-----------------------------------------------------------------
                                   CTRLPGUP
              
              Моделирует нажатие клавиш {Ctrl}{PgUp}.
              
Синтаксис     CTRLPGUP
              
Описание      Действие команды  CTRLPGUP  аналогично действию при
              одновременном нажатии клавиш {Ctrl}{PgUp}.  Команда
              переводит курсор  к предыдущей записи в том же поле
              в режиме просмотра формы.  В других контекстах  ко-
              манда игнорируется.
-----------------------------------------------------------------
                                   CTRLRIGHT
              
              Моделирует нажатие клавиш {Ctrl}{-->}.
              
Синтаксис     CTRLRIGHT
              
Описание      Действие команды CTRLRIGHT аналогично действию  при
              одновременном нажатии  клавиш {Ctrl}{-->} и зависит
              от текущего контекста.  Если система Paradox  нахо-
              дится не в подходящем режиме, команда игнорируется.
              Следующая таблица   показывает   действие   команды
              CTRLRIGHT в различных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Cдвигает курсор на один
       Совместное редактирова-      экран влево
       ние/ПросмотрТаблиц
       Главный, Редактирование,     Нет действия
       Совместное редактирова-
       ние/Просмотр Формы
       Любой режим/Просмотр поля    Переводит курсор на одно
                                    слово влево
       Формы                        Нет действия
       Редактор отчетов             Сдвигает курсор на один
                                    экран влево
       Редактор скриптов            Сдвигает курсор на полэк-
                                    рана влево
                                               
              Заметим, что  нажатие клавиш {Ctrl}{Right} сдвигает
              на один полный  экран  влево  услуги  меню  системы
              Paradox, но такое действие невозможно с помощью ко-
              манды CTRLRIGHT из скрипта.
-----------------------------------------------------------------
                                    CURSOR
              
              Команда выключает или включает изображение курсора,
              а также   выбирает  его вид на экране в канве языка
              PAL.
              
Синтаксис     CURSOR < BAR | BOX | NORMAL | OFF >
              
Описание      Команда CURSOR используется для изменения изображе-
              ния курсора в канве языка PAL. Заметим, что команда
              не оказывает никакого действия на вид курсора в ра-
              бочем поле   системы  Paradox.  Самая простая форма
              курсора -NORMAL- воспроизводится,  пока не появится
              команда CURSOR   OFF.   Команда  CURSOR BAR создает
              "толстый" курсор,  а команда CURSOR BOX приводит  к
              появлению реверсивного изображения курсора.
              
Версия        Команда CURSOR  была введена в систему Paradox вер-
              сии 2.0.  Использование этой команды в более ранних
              версиях системы Paradox будет приводить к синтакси-
              ческой ошибке.
              
См.также      SYNCCURSOR
-----------------------------------------------------------------
                                     DEBUG
              
              Команда прекращает выполнение  скрипта  и  передает
              управление отладчику.
              
Синтаксис     DEBUG
              
Описание      DEBUG временно  приостанавливает  работу  скрипта и
              передает управление отладчику с первого  оператора,
              следующего за DEBUG. Вы можете продолжить автомати-
              ческую работу скрипта путем выбора GO из  меню  или
              нажатием {Ctrl}{G}.  DEBUG не работает, если он яв-
              ляется последней командой в скрипте.
-----------------------------------------------------------------
                                      DEL
              
              Команда моделирует работу клавиши {Del}.
              
Синтаксис     DEL
              
              Действие команды DEL,  как и нажатие клавиши {Del},
              зависит от текущего контекста. Если система Paradox
              находится не в подходящем режиме, команда игнориру-
              ется. Следующая таблица показывает действие команды
              DEL в различных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный/форма запроса      Уничтожает текущую строку
         
       Совместное редактирова-    Уничтожает текущую запись
       ние, редактирование
       Редактирование,            Уничтожает символ над кур-
       Совместное редактирова-             сором
       ние/Просмотр Формы
       
       Форма                      Уничтожает символ над кур-
                                           сором
         
       Редактор отчетов           Уничтожает символ над кур-
                                           сором
       Редактор скриптов          Уничтожает символ над кур-
                                           сором
       
            
Примеры       В этом  примере команда DEL уничтожает запись поль-
              зователя, причем пользователь сам выбирает запись и
              подтверждает ее уничтожение.
             
              EDIT "customer"
              WHILE True
                WAIT TABLE
                PROMPT "Переместите курсор к записи, которую"+
                   "Вы хотите удалить, и затем нажмите DEL",
                   "Чтобы отменить, нажмите Esq"
                 UNTIL "Del","Esc"
              IF retval="Del"
               THEN
                  MESSAGE "Вы действительно хотите?(Y/N)"
                  ACCEPT A1 TO response
                  IF ((responce=Y) or (responce=y))
                     THEN
                       DEL   ;запись уничтожена
                     ELSE
                       MESSAGE "Запись не уничтожена"
                  ENDIF
               ELSE
                  QUITLOOP
              ENDIF
              ENDWHILE
              DO_IT!              ;Конец редактирования
-----------------------------------------------------------------
                                    DELETE
              
              Команда сокращенного меню,  которая удаляет таблицу
              и ее семейство из системы Paradox.
              
Синтаксис     DELETE <имя таблицы>
              
Описание      При удалении  таблицы  Вы  также удаляете семейство
              обьектов, таких как индексы, формы, отчеты. Для ис-
              пользования этой   команды  необходимо находиться в
              состоянии MAIN. Когда Вы используете команду DELETE
              в языке PAL,  то сообщение об удалении не выдается.
              Если таблицы с данным именем нет, то выдается сооб-
              щение об ошибке.
              
Примеры       DELETE "checks"
              
              Эта команда эквивалентна
              MENU {TOOLS} {DELETE} {TABLE} {Сhecks} {ok}
-----------------------------------------------------------------
                                  DELETELINE
              
              Команда моделирует действие клавиш {Ctrl}{Y} (унич-
              тожить строку отчета) и стирает информацию от пози-
              ции курсора до конца текущей строки.
              
Синтаксис     DELETELINE
              
Описание      Команда, как и нажатие клавиш {Ctrl}{Y} (уничтожить
              строку отчета),  стирает информацию от позиции кур-
              сора до конца текущей строки в  Генераторе  отчетов
              или Редакторе  скриптов.  Если Парадокс находится в
              контекстах, отличных от упомянутых выше, то команда
              игнорируется. Команда    не  работает в канве языка
              PAL.
-----------------------------------------------------------------
                                     DITTO
              
              Команда моделирует нажатие клавиш  {Ctrl}{D}.   Она
              копирует поле из предыдущей записи.
              
Синтаксис     DITTO
              
Описание      Команда DITTO,  как и {Ctrl}{D}, копирует в текущее
              поле предыдущую запись того же поля.  Команда может
              использоватся только в режиме РЕДАКТИРОВАНИЯ и СОВ-
              МЕСТНОГО РЕДАКТИРОВАНИЯ.  В других режимах  команда
              игнорируется.
         
Примеры       EDIT "orders"
              MOVETO {DATE}
              {DATE}=today()  ; заполняет поле даты те-
                               ; кущей датой
              SCAN
                DITTO ; делает тоже самое с каждой
                      ; записью
              ENDSCAN
-----------------------------------------------------------------
                                    DO_IT!
              
              Команда моделирует клавишу DO_IT! {F2}.
              
Синтаксис     DO_IT!
              
Описание      Команда DO_IT! заканчивает текущую операцию или вы-
              полнение действия.   Если система Paradox находится
              не в подходящем режиме,  команда игнорируется. Сле-
              дующая таблица показывает действие команды DO_IT! в
              различных режимах системы Paradox:
            
             Режим ------------------  Действие
       Главный/запрос в рабочем   Выполняет запрос
            поле
         
       Редактирование             Заканчивает редактирова-
                                  ние, записывает все из-
                                  менения на диск, возвра-
                                  щает в Главный режим.
        
       Совместное редактирова-    Заканчивает совместное
       ние                        редактирование, запи-
                                  сывает все изменения
                                  на диск, возвращает в
                                  Главный режим.
       
       Ввод данных                Заканчивает ввод данных
                                  записывает все изменения
                                  в таблицу(ы), возвращает
                                  в Главный режим.
                                  
       Различные режи-            Заканчивает просмотр
       мы/Просмотр поля                поля
              
       Сортировка                 Выполняет сортировку и
                                  возвращает в Главный
                                       режим
       
       Создать                    Создает таблицу и возвра-
                                   щает в Главный режим
         
       Изменить струк-            Изменяет структуру таб-
       туру                       лицы и возвращает в
                                   Главный режим.
       
       Форма                      Сохраняет форму, возвра-
                                  щает в Главный режим
         
       Редактор отчетов           Сохраняет отчет, возвра-
                                  щает в  Главный режим.
              
       Редактор скриптов          Сохраняет скрипт, возвра-
                                  щает в  Главный режим.
         
              Заметим, что символ подчеркивания (_)  используется
              вместо тире (-)  в имени команды.  Если вы случайно
              наберете команду   DO-IT!   в  скрипте,  то система
              Paradox будет думать, что Вы хотите отнять из пере-
              менной DO переменную IT, а символ ! приведет к син-
              таксической ошибке.
              
Использование Команда DO_IT!  должна использоватся в конце циклов
              редактирования и совместного редактирования в  при-
              ложениях и   выполнения  предварительно сохраненных
              предложений запроса,  которые помещаются в  рабочее
              поле при помощи команды QUERY.
              
Примеры       В примере пользователь вводит новую запись в табли-
              цу "assign" и, затем завершает редактирование.
              
              EDIT "Assign"    ;редактирование таблицы
              END          ;переход к последней записи
              DOWN         ;незаполненная строка таблицы
              PICFORM 1    ;выбор формы для ввода данных
              WAIT RECORD UNTIL "F2";ввод пользователем
                                       ;данных
              DO_IT!       ;завершение редактирования
         
              В следующем  примере в рабочее поле выводится зара-
              нее записанный запрос и затем он выполняется.
              
              PLAY "Proquery" ;запустить скрипт, содержащий
                              ;запрос
              DO_IT!          ;выполнить запрос
-----------------------------------------------------------------
                                      DOS
              
              Запуск команды DOS без выхода из системы Paradox.
              
Синтаксис     DOS
              
Описание      Это команда сокращенного меню,   которая  позволяет
              вам запустить   команду  DOS  без выхода из системы
              Paradox. Например,   вы можете запустить  текстовый
              редактор или  выполнить любые функции с файлами DOS
              в процессе сеанса системы Paradox. Когда DOS выпол-
              няется, она    сохраняет  текущее состояние системы
              Paradox и предоставляет пользователю подсказки DOS.
              Для возврата в систему Paradox в ответ на подсказку
              DOS необходимо набрать EXIT, управление возвращает-
              ся в  ту точку,  из которой был сделан выход в DOS.
              Если выход  был  сделан  из  скрипта,   то  система
              Paradox вернется   в  точку выхода в DOS и выполнит
              следующую команду после команды  DOS.   Резидентные
              программы не  могут загружаться,  пока используется
              команда DOS.  В частности,  команды DOS PRINT и ко-
              манда MODE не могут быть использованы,  если они не
              были вызваны предварительно перед входом в  систему
              Paradox.
              
Примеры       DOS эквивалентна  следующей  записанной  последова-
              тельности:
              
              MENU {TOOLS} {MORE} {ToDOS}
-----------------------------------------------------------------
                                    DOSBIG
              
              Команда приостанавливает  систему Paradox ,осущест-
              вляет выход в ДОС и позволяет  запускать  программы
              требующие максимального  количества имеющейся памя-
              ти.
              
Синтаксис      DOSBIG
              
Описание      Как и  нажатие  клавиш {Alt}{O} (DOS Big),  команда
              DOSBIG используется    для   приостановки   системы
              Paradox, и позволяет пользователю выйти в DOS, имея
              максимальное количество памяти. Команда DOSBIG сох-
              раняет текущее  состояние системы Paradox и предос-
              тавляет пользователю возможность  работать  в  DOS,
              где он  может набирать команды операционной системы
              или запускать другие программы.  Если Вы  наберете,
              работая в DOS, команду EXIT, то управление вернется
              в систему Paradox, и будет продолжена работа скрип-
              та с команды,  следующей за командой DOS.  В компь-
              ютере или в рабочей станции с  объемом  оперативной
              памяти 640 к. и работающей под управлением DOS вер-
              сии 3.1 команда DOSBIG освобождает для работы  при-
              мерно 500   к.   оперативной памяти,  когда система
              Paradox приостанавливается.
              
Использование Если сравнивать  команду DOSBIG с командой DOS,  то
              единственным недостатком первой является время, ко-
              торое она   тратит  на сохранение состояния системы
              Paradox, когда  происходит выход в DOS и на возврат
              обратно в   систему  Paradox.  Эта недостаток может
              быть эффективно устранен  путем  введения  дополни-
              тельного адаптера  расширения памяти.  В отличие от
              команды RUN BIG,  которая используется для выполне-
              ния последовательности  команд DOSа под управлением
              скрипта, команда  DOSBIG позволяет пользователю на-
              бирать произвольные команды после приглашения DOSа.
              Не загружайте память резидентными программами после
              использования команды   DOSBIG.   Не пользуйтесть в
              этом режиме командами DOSа такими как print и mode,
              если они  уже не были загружены перед запуском сис-
              темы Paradox.
              
Версия        Команда введена в систему Paradox версии 2.0.
              
См.также      DOS, RUN и RUN BIG.
-----------------------------------------------------------------
                                     DOWN
              
              Моделирует нажатие клавиши "стрелка вниз".
              
Синтаксис     DOWN
              
              Действие команды DOWN аналогично действию при нажа-
              тии клавиши "стрелка вниз" и  зависит  от  текущего
              контекста. Если система Paradox находится не в под-
              ходящем режиме,  команда  игнорируется.   Следующая
              таблица показывает  действие команды DOWN в различ-
              ных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Cдвигает курсор на одну
       Совместное редактирова-      запись вниз
       ние/ПросмотрТаблиц
         
       Главный, Редактирование,     Сдвигает курсор на одно
       Совместное редактирова-      поле вниз
       ние/Просмотр Формы
         
       Редактирование,Совмест-      Сдвигает курсор на стро-
       ное редактирование/Про-      ку в переносимом поле
       смотр поля
         
       Формы                        Сдвигает курсор на одну
                                    строку вниз
         
       Редактор отчетов             Сдвигает курсор на одну
                                    строку вниз
              
       Редактор скриптов            Сдвигает курсор на одну
                                    строку вниз

Примеры       Данный пример  использует  команду  DOWN  для того,
              чтобы создать новую пустую запись  в  редактируемой
              таблице:
              
              EDIT "Assign"    ;редактирование таблицы
              END          ;переход к последней записи
              DOWN         ;незаполненная строка таблицы
              PICFORM 1    ;выбор формы для ввода данных
              WAIT RECORD UNTIL "F2";ввод пользователем
                                    ;данных
              DO_IT!       ;завершение редактирования
-----------------------------------------------------------------
                                   DOWNIMAGE
              
              Команда моделирует нажатие клавиши {F4} и перемеща-
              ет курсор вниз к следующему образу в рабочем  поле.
              
Синтаксис     DOWNIMAGE
              
Описание      Когда в рабочем поле  находятся  несколько  образов
              объектов, команда  DOWNIMAGE переносит курсор с те-
              кущего образа к образу,  находящемуся ниже текущего
              в рабочем поле. Команда DOWNIMAGE работает только в
              Главном режиме,  режиме Редактирования  или  режиме
              Совместного редактирования. В других контекстах ко-
              манда игнорируется. Она также не работает, если те-
              кущий образ  является самым нижним или единственным
              в рабочем поле.  Если текущий образ находится в ре-
              жиме просмотра формы, команда DOWNIMAGE имеет дейс-
              твие выхода из просмотра формы в  просмотр  таблицы
              для следующего образа.
         
Примеры       Данный пример  использует команду DOWNIMAGE для то-
              го, чтобы  переходить от  одной  таблице  к  другой
              внутри цикла SCAN:
              
              VIEW "orders"
              EDIT "bigord"    ;редактирование таблицы
              END          ;переход к последней записи
              UPIMAGE      ;перейти к таблице orders
              SCAN FOR {Quan}>1000 ;выделить большие за-
                 COPYTOARRAY trans ;казы и скопировать их
                 DOWNIMAGE ;возвратиться к таблице bigord
                 COPYFROMARRAY trans
                 DOWN         ;перейти к следующей записи
                 UPIMAGE      ;вернуться к табл. orders
              ENDSCAN
              DO_IT!
-----------------------------------------------------------------
                                     ECHO
              
              Команда открывает или блокирует  вывод  на  дисплей
              внутренней работы скрипта.
              
Синтаксис     ECHO < FAST | SLOW | OFF | NORMAL>
              
Описание      Команда ECHO используется для показа внутренней ра-
              боты скрипта в процессе отладки или для  демонстра-
              ции. Естественно,     когда скрипт начинает работу,
              канва языка PAL инициализируется,  скрывая все, что
              происходит в рабочем поле. Таким образом, для поль-
              зователя экран является замороженным  до  тех  пор,
              пока скрипт не завершит свою работу.  В этом случае
              мы говорим,  что ECHO выключено.  Команда ECHO дает
              возможность включить   эхо,  показывая каждое дейс-
              твие, которое  происходит в рабочем  поле.   Эффект
              этой команды  такой же как и при выборе SHOWPLAY из
              SCRIPT MENU. Эхо включается также с помощью исполь-
              зования ECHO SLOW и ECHO FAST. Обе формы вводят ис-
              куственную задержку в процессе выполнения  скрипта,
              чтобы действия   скрипта не мелькали перед глазами.
              ECHO SLOW сильнее замедляет,  чем ECHO FAST.   ECHO
              NORMAL будет   выполнять,  показывая его внутреннюю
              работу без искуственных задержек. ECHO OFF выключа-
              ет действие   ECHO,   опять замораживая канву языка
              PAL.
-----------------------------------------------------------------
                                     EDIT
              
              Команда сокращенного меню,которая позволяет вам ре-
              дактировать таблицы.
              
Синтаксис     EDIT <имя таблицы>
              
Описание      Команда вызывается, когда система Paradox находится
              в состоянии MAIN. Когда команда выполняется, систе-
              ма переходит в состояние редактирования,  т.к.  для
              внесения изменений в таблицу система Paradox должна
              находиться в состоянии редактирования.
              
Примеры       EDIT "TANN"
              Эта команда эквивалентна  следующей  последователь-
              ности:
              MENU {MODIFY} {EDIT} {TANN}
-----------------------------------------------------------------
                                    EDITKEY
              
              Моделирует нажатие клавиши  {F9}  включения  режима
              EDIT (редактирование).
              
Синтаксис     EDITKEY
              
Описание      Действие команды EDITKEY в Главном режиме аналогич-
              но нажатию клавиши {F9}(редактирование)  и заключа-
              ется в переводе всех таблиц,  находящихся в рабочем
              поле системы Paradox,  в режим EDIT. Во всех других
              режимах команда не работает.
         
Использование Команда EDITKEY  используется в тех случаях,  когда
              Вам необходимо включить режим EDIT для того,  чтобы
              сделать изменения в таблицах, высвеченных в рабочем
              поле системы Paradox.
         
Примеры       Настоящий пример  использует  команды   EDITKEY   и
              DO_IT! для включения режима редактирования в цикле,
              что позволяет пользователю просматривать и изменять
              выбранные заказы:
         
              VIEW "orders"
              MOVETO FIELD "Order #"
              @0,0 ? "Введите номер заказа ({Enter}-Выход)
              ACCEPT "N" TO ordnum
              IF ISBLANC(ordnum)
                THEN QUITLOOP
              ENDIF
              LOCATE ordnum
              IF retval
               THEN
                  PICKFORM 1
                  WAIT RECORD
                  PROMPT "Нажмите {F9}, если хотите изменить"+
                        "{F2} - показать следующую запись",
                        "{Esc}, завершить"
                 UNTIL "F2","F9","Esc"
                 SWITCH
                   CASE retval="F9"
                     EDITKEY  ;включение режима редактирования
                     WAIT RECORD
                     PROMT "Нажмите F2,если изменения сделаны"
                            UNTIL "F2"
                            DO_IT!
                    CASE retval="F2"
                      LOOP
                    CASE retval="Esc"
                      QUITLOOP
                  ENDSWITCH
               ELSE
                  MESSAGE "Номер заказа не найден"
                   LOOP
              ENDIF
              ENDWHILE
-----------------------------------------------------------------
                                    EDITLOG
              
              Закрепляет или  отменяет  изменения в таблице,  ис-
              пользуя журнал транзакций.
              
Синтаксис     EDITLOG <MARK | REVERT | INDEX | PERMANENT>
         
Описание      Эта команда позволяет вам использовать журнал тран-
              закций системы   Paradox для закрепления или отмены
              изменений в одной или нескольких  таблицах.Эта  ко-
              манда полезна  в базирующихся на транзакциях прило-
              жениях, потому  что каждая  группа  взаимосвязанных
              изменений трактуется   как  единое целое.  Во время
              внесения изменений в таблицы система Paradox  авто-
              матически заносит   все изменения в журнал транзак-
              ций.EDITLOG MARK устанавливает маркер в журнале для
              дальнейшего использования.Можно  использовать неог-
              раниченное количество маркеров.  EDITLOG REVERT от-
              меняет все изменения, сделанные после внесения пос-
              леднего маркера.Если маркеры  не  установлены,   то
              отменяются все изменения, сделанные с начала сессии
              редактирования.Если установлено несколько маркеров,
              можно откатывать  транзакции последовательно.  Если
              редактируемая таблица индексирована,  EDITLOG INDEX
              переиндексирует первичные   и вторичные индексы.Это
              будет ускорять дальнейшие запросы и выполнение  ко-
              манд LOCATE и ZOOM. EDITLOG PERMANENT также переин-
              дексирует таблицу, но еще и очищает журнал транзак-
              ций до   текущего  пункта,   так  что все изменения
              закрепляются и отменить их невозможно.  Использова-
              ние EDITLOG дает вам возможности режима COEDIT (та-
              кие, как  постоянная поддержка индексов  в  течении
              сессии редактирования) и возможность отмены измене-
              ний, которой  нет в COEDIT.  Когда на рабочем  поле
              находится несколько  таблиц,  система Paradox ведет
              отдельный журнал транзакций для каждой  из  них.Ко-
              манда EDITLOG   дает  доступ  к журналу для текущей
              таблицы. Заметим,  что EDITLOG не работает для свя-
              занных таблиц   в  многотабличных  формах.Для таких
              таблиц вы можете воспользоваться услугой UNDO(отме-
              нить) {Ctrl}{U}.
              
Использование EDITLOG может  быть  использована  в режимах Edit и
              Data Entry,  во всех остальных режимах дает ошибку.
              
Примеры       Команда используется для того,  чтобы во время  ре-
              дактирования постоянно   обновлялся  файл индексов,
              вследствие чего записи будут отображаться в порядке
              следования ключей.
         
              EDIT "customer"
              MarkCount = 0
              WHILE (TRUE)
                 WAIT TABLE
                 PROMPT "Нажмите Alt-I для  переиндексирования
                  таблицы, Alt-U - для отказа от изменений",
                      "F2 - для окончания редактирования"
               UNTIL -23,-22,"F2"
              SWITCH
                 CASE RETVAL = -23:      ;Alt-I
                    MESSAGE "Переиндексируем таблицу..."
                    EDITLOG INDEX        ;переиндексируем таблицу
                    EDITLOG MARK         ;установим метку
                 MarkCount=MarkCount+1
              CASE RETVAL = "F2":
                 QUITLOOP
              CASE RETVAL = -22 :     ;Alt-U
                 IF (MarkCount < 1)
                  THEN
                     BEEP
                     MESSAGE "Не от чего отказываться"
                     SLEEP 2000
                  ELSE
                     MESSAGE "Возврат к последнему состоянию"
                     EDITLOG REVERT
                     MarkCount=MarkCount-1
                 ENDIF
               ENDSWITCH
               ENDWHILE
               DO_IT!
         
Версия        Команда EDITLOG была добавлена с версией 3.0
-----------------------------------------------------------------
                                     EMPTY
              
              Команда сокращенного меню,  которая позволяет очис-
              тить таблицы от всех записей.
              
Синтаксис     EMPTY <имя таблицы>
              
Описание      Для того,  чтобы использовать эту команду,  система
              Paradox должен находиться в состоянии MAIN.   После
              выполнения данной   команды  все  записи из таблицы
              уничтожаются без предупреждения.
              
Примеры       EMPTY "TANN"
              Эта команда  эквивалентна  следующей последователь-
              ности:
              MENU {TOOLS} {MORE} {EMPTY} {TANN} {OK}
-----------------------------------------------------------------
                                      END
              
              Команда моделирует нажатие клавиши {End}.
              
Синтаксис     END
              
Описание      Действие команды END зависит от текущего контекста.
              Обычно команда используется для того, чтобы сделать
              текущей последнюю запись или образ запроса.Она име-
              ет это действие  в  режиме  просмотра  таблицы  или
              просмотра формы. Команда HOME имеет противоположный
              эффект. Если система Paradox находится в неподходя-
              щем режиме, команда игнорируется. Следующая таблица
              описывает действие команды END в различных  режимах
              Парадокса.
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Переносит курсор к после-
       Совместное редактирование    дней записи таблицы
       
       Любой режим/Просмотр поля    Переносит курсор к пос-
                                    леднему символу в поле
         
       Формы                        Переводит курсор к пос-
                                    ледней строке формы
         
       Редактор отчетов             Переводит курсор к пос-
                                    ледней строке отчета
              
       Редактор скриптов            Переводит курсор к пос-
                                    ледней строке скрипта
             
Примеры       Следующий пример размещает таблицу в рабочем  поле,
              переводит ее в режим просмотра формы и делает теку-
              щей последнюю запись.
         
              VIEW "ORDERS"
              FORMKEY
              END
-----------------------------------------------------------------
                                     ENTER
              
              Моделирует нажатие клавиши {Enter}.
              
Синтаксис     ENTER
              
Описание      Действие команды ENTER аналогично действию при  на-
              жатии клавиши   {ENTER}  и зависит от текущего кон-
              текста. Если  система Paradox находится не в подхо-
              дящем режиме,    команда  игнорируется.   Следующая
              таблица показывает действие команды ENTER в различ-
              ных режимах системы Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,     Переход к следующему
       Совместное редактирова-      полю
       ние
         
       Любой режим/Просмотр         Завершает просмотр
       поля                         поля
       
       Форма                        Переводит курсор к
                                    следующей строке или
                                    ломает строку(см. ниже)
         
       Редактор отчетов             Переводит курсор к
                                    следующей строке или
                                    ломает строку(см. ниже)
         
       Редактор скриптов            Переводит курсор к
                                    следующей строке или
                                    ломает строку(см. ниже)
         
              В режиме создания формы и отчета,  а также в Редак-
              торе скриптов,    действие команды ENTER зависит от
              того находится ли система Paradox в режиме  "встав-
              ки"(insert) или  нет.  Если включен режим вставки в
              упомянутых выше режимах,  то команда ломает текущую
              строку в том месте,  где находится курсор; если ре-
              жим вставки выключен,  то команда просто  переносит
              курсор к первому символу следующей строки.
-----------------------------------------------------------------
                                      ESC
              
              Моделирует нажатие  клавиши  {Esc}  и  возвращает к
              предыдущему меню или в рабочее поле.
              
Синтаксис     ESC
              
Описание      Действие команды ESC аналогично действию при  нажа-
              тии клавиши  {ESC}.  Команда выходит из меню в меню
              предыдущего уровня или в рабочее поле.   Если  меню
              системы Paradox нет на экране,  команда игнорирует-
              ся.
-----------------------------------------------------------------
                                    EXAMPLE
              
              Моделирует нажатие клавиши {F5} и вводит  пример  в
              текущее поле запроса.
              
Синтаксис     EXAMPLE
              
Описание      Действие команды  EXAMPLE  аналогично  действию при
              нажатии клавиши {F5}. Команда вводит пример в теку-
              щее поле   формы  запроса,   находящуюся  в рабочем
              пространстве. Пример может быть использован для со-
              единения таблиц,  величин,  выполнения вычислений и
              заполнения новых записей.  Если курсор не находится
              в изображении запроса, то команда игнорируется.
              
См.также      CHECK и CHECKPLUS
-----------------------------------------------------------------
                                    EXECUTE
              
              Команда выполняет последовательность команд,  запи-
              санных в строке.
Синтаксис     EXECUTE <строковое выражение>
              
Описание      Аргумент является списком команд языка PAL.  Коман-
              ды, представленные в списке, выполняются последова-
              тельно. Длина    списка  не  должна  превышать  132
              символа. EXECUTE работает путем образования времен-
              ного скрипта (называемого EXECUTE), составленной из
              команд списка.  Этот временный  скрипт  выполняется
              так, как  если бы он был вызван командой PLAY. Этот
              скрипт не сохраняется как файл. Заметим, что опера-
              тор RETURN,  выполненный внутри EXECUTE скрипта,  и
              завершает команду EXECUTE и не приводит к возвраще-
              нию к скрипту или процедуре,  в которой эта команда
              была вызвана.
              
Примеры       Следующие команды выводят таблицу на экран.  Курсор
              устанавливается в   поле,  имя которого храниться в
              переменной TTT.
              
              VIEW "orders"
              TTT="Stock #"
              EXECUTE "MOVETO {"+TTT+"}"
              
              Eсли, например,  значение ТТТ - "Part No", аргумент
              команды превратиться в строку:
              
              "MOVETO {Part No}"
-----------------------------------------------------------------
                                   EXECPROC
              
              Команда вызывает процедуру,  не имеющую аргументов.
              
Синтаксис     EXECPROC <ProcName>
              
Описание      ProcName-имя вызываемой процедуры. Процедура должна
              не иметь аргументов. Это эквивалентно команде:
              
                EXECUTE ProcName+"()"
              
Использование Команда EXECPROC может быть использована для вызова
              произвольных процедур   из скрипта.  Принципиальным
              приемуществм этой команды  перед  командой  EXECUTE
              является быстродействие.       Недостаток   команды
              EXECPROC состоит в том,  что она не может быть  ис-
              пользована для вызова процедур, которые имеют аргу-
              менты.
              
Примеры       Данный пример использует команду EXECPROC для  соз-
              дания механизма,        который    может   вызывать
              последовательность процедур, названных в произволь-
              ном массиве.
         
              procarray=procarray1    ;массив, содержащий имена
                                      ;вызываемых процедур
              FOR i FROM 1 to ARRAYSIZE(procarray)
                    EXECPROC procarray{i}
              ENDFOR
         
Версия        Команда EXECPROC  была  введена  в  систему Paradox
              версии 2.0. Использование этой команды в более ран-
              них версиях  системы Paradox будет приводить к син-
              таксической ошибке.
             
См.также      EXECUTE
-----------------------------------------------------------------
                                     EXIT
              
               Команда сокращенного меню, которая выводит в DOS.
              
Синтаксис      EXIT
              
Описание      Эта команда может быть использована,  когда система
              Paradox находится в Главном режиме.Действие команды
              эквивалентно последовательности из меню:
              {Menu}{Exit}{Yes}
-----------------------------------------------------------------
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
