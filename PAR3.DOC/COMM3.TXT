                                  REVERSETAB
              
         
              Команда моделирует нажатие клавиш {Shift}{Tab}. Она
              перемещает курсор к предыдущему полю образа.
              
Синтаксис     REVERSETAB
              
Описание      Команда перемещает курсор к предыдущему полю табли-
              цы или образа запроса.  Если курсор находится не  в
              образе, то  команда игнорируется. Следующая таблица
              описывает действие команды REVERSETAB  в  различных
              режимах системы Paradox:
         

             Режим ------------------  Действие
       Главный, Редактирование,     Перемещает курсор к пре-
       Совместное редактирова-      дыдущему полю в изобра-
       ние                          жении (запроса или таб-
                                    лицы, или формы)
         
       Любой режим/Просмотр         Нет действия
       поля

       Форма                        Нет действия
         
       Редактор отчетов             Перемещает к предыдущему
                                    полю в границах таблицы
         
       Редактор скриптов            Нет действия
         
См.также      TAB
-----------------------------------------------------------------
                                     RIGHT
              
              Команда моделирует  нажатие  клавиши {-->} (стрелка
              вправо).
              
Синтаксис     RIGHT
              
Описание      Действие команды RIGHT,   как  и  действие  клавиши
              {стрелка вправо} зависит от текущего контекста.Если
              система Paradox находится не в  подходящем  режиме,
              команда игнорируется.  Следующая таблица показывает
              действие команды RIGHT в различных режимах  системы
              Paradox:
         
             Режим ------------------  Действие
        
       Главный, Редактирование,    Перемещает курсор на  одно
       Совместное редактирова-     поле вправо внутри изобра-
       ние                         жения
              
       Любой режим/Просмотр        Перемещает  курсор  вправо
       поля                        на один символ.
              
       Форма                       Перемещает  курсор  вправо
                                   на один символ.
              
       Редактор отчетов            Перемещает  курсор  вправо
                                   на один символ.
              
       Скрипт                      Перемещает  курсор  вправо
                                   на один символ.
                                               
              Когда курсор  находится  в  последнем поле записи в
              изображении в рабочем пространстве,  команда  RIGHT
              переносит курсор к первому полю следующей записи.
              
См.также      LEFT.
-----------------------------------------------------------------
                                    ROTATE
              
              Моделирует нажатие  клавиш {Ctrl} {R}.  Она вращает
              поля вправо.
              
Синтаксис     ROTATE
              
Описание      Команда ROTATE перемещает текущее поле  изображения
              в режиме просмотра таблицы или запроса вправо. Поле
              или колонка ,являющиеся крайним правым, перемещает-
              ся на   место первого.  В других контекстах команда
              игнорируется.
              
Использование Аналогично команде FIRSTSHOW, ROTATE размещает таб-
              лицу в форме, удобной для Вашего приложения.
              
См.также      FIRSTSHOW
-----------------------------------------------------------------
                                      RUN
              
              Выполняет команды DOS из системы Paradox.
              
Синтаксис     RUN <<BIG>> << SLEEP <число> >>
                  <<NOREFRESH>><<NORESTORE>> <команда DOS>
              
Описание      Эта команда приостанавливает систему Paradox и  вы-
              полняет <команду DOS>, как если бы она была введена
              из командной строки DOS.Команда RUN запоминает  те-
              кушее состояние  системы Paradox и после завершения
              команды DOS продолжает выполнение скрипта со следу-
              ющей команды.Экран и рабочая область не будут изме-
              нены. При выполнении команды RUN для выполнения ко-
              манды DOS     остается   около  200К  памяти.   При
              необходимости использования большего объема  памяти
              можно применять ключевое слово BIG.  При этом теку-
              щее состояние системы Paradox  будет  сохранено  на
              диске (или в расширенной памяти)  и для команды DOS
              освободится около 500К памяти.   При  использовании
              опции NOREFRESH канва языка PAL остается неизменной
              на время выполнения команды DOS.  Это  полезно  при
              запуске программ,    не имеющих вывода на экран.  В
              случае экранного вывода из программы он будет  осу-
              ществляться поверх  изображения на канве языка PAL.
              При использовании опции NORESTORE канва  языка  PAL
              не восстанавливается  после выполнения команды DOS.
              Все, что  вывела программа,  останется на экране до
              вывода на экран чего-либо другого.  При использова-
              нии опции SLEEP можно задать задержку до 30  секунд
              между окончанием выполнения программы и продолжени-
              ем работы скрипта. Это дает возможность пользовате-
              лю просмотреть  результаты работы программы.  Пара-
              метр <число> должен быть целым от 0 до  30000,   он
              задает размер задержки в миллисекундах.  В системах
              с гибкими дисками, если файл COMMAND.COM не имеется
              на диске   A:  во время выполнения команды RUN,  то
              пользователю будет предложено вставить диск с таким
              файлом. В системах в диском-винчестером для опреде-
              ления местонахождения этого файла используется  па-
              раметр COMSPEC.    Вы можете запустить произвольную
              команду DOS, такую как DIR, RENAME и MKDIR. Вы так-
              же можете  запустить любые правильные .COM,  .EXE и
              BAT файлы.
-----------------------------------------------------------------
                                   SAVEVARS
              Команда сохраняет состояние определенных переменных
              и массивов таким образом, что их можно восстановить
              при последующих запусках скрипта.
              
Синтаксис     SAVEVARS <имя перем.1>...<имя перем.n>
              или
              SAVEVARS ALL
               
Описание      Эта команда полезна для сохранения текущих значений
              переменных и   массивов   в   скрипт,    называемый
              savevars. Текущие   значения переменных и массивов,
              перечисленных в команде, храняться в форме операто-
              ра присваивания, так что при последующем выполнени-
              ие скрипта savevars вызывает значения  для  восста-
              новления. Операторы       присваивания   записывают
              значения только для тех переменных и элементов мас-
              сивов которые  определены в команде.  Заметим,  что
              SAVEVARS может быть использован для сохранения  те-
              кущих значений частных переменных, включая формаль-
              ные параметры процедур и массивов. Если эта команда
              вызывается из  той части контекста,  где определены
              частные переменные или  массивы,   то  записываются
              частные значения,   в противном случае используются
              глобальные значения.   Команда  SAVEVARS  сохраняет
              значения системной    переменной  retval.   Команда
              SAVEVARS полезна для отладки.
              
Примеры       Если x имеет значение 3,  y=4, z="Hi there", то ко-
              манда:
              SAVEVARS x,y,z
              создаст скрипт savevars следующего вида:
              x=3
              y=4
              z="Hi there".
-----------------------------------------------------------------
                                     SCAN
              
              Команда просматривает таблицу  запись  за  записью,
              выполняя последовательность команд для каждой запи-
              си.
              
Синтаксис     SCAN <<FOR><логическое выражение>
              <последовательность команд> ENDSCAN
              
Описание      Эта команда сканирует таблицу текущего образа,  вы-
              полняя последовательность команд,  представленных в
              поле <последовательность команд> для каждой записи.
              Если вы используете последовательность FOR, то пос-
              ледовательность команд   выполняется только для тех
              записей, которые удовлетворяют условиям в поле <ло-
              гическое выражение>. Если таблица пустая, то скани-
              рование не происходит.  Сканирование всегда начина-
              ется с   первой  записи  таблицы вне зависимости от
              того, какая  текущая запись вызывается. Если скани-
              рование не заканчивается преждевременно, то послед-
              няя запись таблицы будет текущей в  конце  процесса
              сканирования. Команды    LOOP и QUITLOOP могут быть
              использованы в теле команды SCAN.  Команда LOOP вы-
              зовет пропуск  тех команд,  которые находятся между
              ней и ENDSCAN (так,  что  контроль  возвращается  к
              вершине цикла SCAN), в то время как QUITLOOP закан-
              чивает SCAN в целом, оставляя последнюю сканируемую
              запись в канве текущей записью образа.
              
Примеры       В следующем  примере сканируется таблица и высвечи-
              вается каждое не пустое значение в окне  сообщений:
              
              SCAN FOR NOT
              ISBLANK ([])
                MESSAGE [] ;высветить текущее значение поля
                SLEEP 500  ;задержать изображение для просмотра
              ENDSCAN
-----------------------------------------------------------------
                                    SELECT
              
              Команда моделирует выбор из меню системы Paradox.
              
Синтаксис     SELECT <выражение>
              
Описание      Эта команда позволяет вам  сделать  выбор  из  меню
              системы Paradox, описанный в поле <выражение>. Этот
              выбор аналогичен выбору из меню,  записанному в фи-
              гурных скобках.
              
Примеры       MENU
              SELECT "VIEW"
              SELECT "orders"
              
              Производит такое же действие, как:
              MENU{VIEW}{orders}
              
              Если Вы хотите получить перечень всех файлов  опре-
              деленного директория,    такого как \KEN,  Вы могли
              сделать выбор:
              
              MENU {TOOLS}{INFO}{INVENTORY}{FILES}{\\KEN\\*.*}
              
              Однако, если  вы хотели сделать это для директория,
              чье имя храниться в переменной dir,  вам необходимо
              будет набрать:
              
              MENU {TOOLS}{INFO}{INVENTOR}{FILES}
              SELECT dir + "*.*"
              
См.также      KEYPRESS, TYPEIN
-----------------------------------------------------------------
                                    SETDIR
              
              Команда сокращенного  меню,   которая позволяет Вам
              сменить рабочий дисковод,  директорий или  и  то  и
              другое.
              
Синтаксис     SETDIR <path>
              
Описание      Поле <path> - строковое выражение,  которое опреде-
              ляет путь доступа DOS.  Команда позволяет  изменить
              рабочий дисковод и директорий,  используемый систе-
              мой Paradox.  Перед использованием  команды  SETDIR
              система Paradox должна находиться в состоянии MAIN.
              Команда SETDIR очищает рабочую область,  уничтожает
              все временные таблицы системы Paradox из памяти,  а
              затем меняет директорий,  дисковод или и то и  дру-
              гое. Заметим, что если строка <path> в кавычках, то
              символ "\", появляющийся внутри строки, должен быть
              двойным!
              
Примеры       SETDIR  "A:\\DEMO"
              
              Эквивалентна следующему записанному скрипту:
              
              MENU{TOOLS}{MORE}{DIRECTORY}{A:\\DEMO\\}{OK}
-----------------------------------------------------------------
                                    SETKEY
              
              Команда определяет макрос клавиатуры, то есть прис-
              ваивает последовательности команд  клавише.   Также
              уничтожает и заново переопределяет макросы.
              
Синтаксис     SETKEY <keycode><команды>
              
Описание      Поле <keycode>  является  выражением кода клавиши в
              языке PAL, которой присваивается макрозначение. По-
              ле <команды>   содержит  последовательность команд,
              которая присваивается клавише.   Последовательность
              команд называется   "макрос клавиатуры".  Выражения
              клавишных кодов включает ASCII коды, строчки, кото-
              рые представляют собой названия функциональных кла-
              виш (такие как "F1"),  специальные  клавиши  (такие
              как "MENU")   или печатные символы (такие как "Q").
              Последовательность команд,  текст которых находится
              на одной строке,  составляет тело макроса.  Если Вы
              захотите определить макрос, который не помещается в
              одну строку, запишите их в файл-скрипт, и тогда те-
              ло макро будет состоять  из  единственной  команды,
              которая вызывает этот скрипт. Если макрос уже опре-
              делен, то старый заменяется новым. Макрос клавиату-
              ры вызывается только тогда,  когда пользователь ра-
              ботает непосредственно в системе Paradox. Ее нельзя
              вызывать командами,  находящимися в скрипте.  Вызов
              макроса невозможен также ,когда активно меню  языка
              PAL.
              
Примеры       SETKEY "F5" MENU VIEW "orders";высветить
                  ;таблицу "orders" при нажатии клавиши "F5"
        
              SETKEY  "F5"  ;  возвратить старое  название
                            ;  клавиши "F5"
              
              SETKEY "Т" MENU ; сделать Т вызовом меню
-----------------------------------------------------------------
                                   SETMARGIN
              
              Устанавливает левую границу отображаемого на экране
              текста.
              
Синтаксис     SETMARGIN OFF
              или
              SETMARGIN <число>
              
Описание      Команда SETMARGIN позволяет установить левую грани-
              цу текста, который будет выводиться на экран коман-
              дами ?  или TEXT.  При этом <число> задает смещение
              от левой границы экрана. После задания команды весь
              выводимый в последующем текст  будет  начинаться  с
              заданного в команде смещения. Команда SETMARGIN OFF
              выключает смещение, так что весь в дальнейшем выво-
              димый текст будет начинаться с левого края дисплея.
-----------------------------------------------------------------
                                  SETMAXSIZE
              
              Команда устанавливает  максимальный размер таблицы.
              
Синтаксис     SETMAXSIZE <Число>,
              
              где <Число> - это 64, 128, 192, или 256 мегабайт.
              
Описание      Команда SETMAXSIZE  позволяет установить максималь-
              ный размер таблицы,  который будет использоваться в
              текущем сеансе системы Paradox.  По умолчанию, мак-
              симальный размер равен 64 мегабайт.  Размер таблицы
              нужно устанавливать     осторожно,   т.к.   команда
              SETMAXSIZE меняет размер внутреннего блока  системы
              Paradox, использующегося    при работе с таблицами.
              Запись в таблицу с другим размером блока (чем опре-
              деленный при создании)  может привести к потере ин-
              формации. Таким  образом,  если Вы будете использо-
              вать таблицы   больше 64 мегабайт,  нужно выполнить
              команду SETMAXSIZE в программе init,  чтобы устано-
              вить новый размер блока. Вам нужно также убедиться,
              что другие пользователи  таблицы  включили  команду
              SETMAXSIZE в свои программы init.
-----------------------------------------------------------------
                                  SETNEGCOLOR
              
              Определяет, будет  ли использоваться цвет для выде-
              ления в таблицах отрицательных значений.
              
Синтаксис     SETNEGCOLOR <<CURRENCY|NUMERIC|BOTH>>
                          <<ON|OFF>>
              
Описание      Команда SETNEGCOLOR определяет,  будет ли использо-
              ваться цвет для выделения в таблицах  отрицательных
              значений в     денежных  (CURRENCY)   или  числовых
              (NUMERIC) полях,   или и в  тех  и  других  (BOTH).
              По-умолчанию используется красный цвет, но он может
              быть изменен при выполнении скрипта custom. Исполь-
              зование ON   включает  отметку цветом отрицательных
              значений, OFF - выключает.
              
Версия        Команда SETNEGCOLOR  была введена в систему Paradox
              версии 3.0.
-----------------------------------------------------------------
                                  SETPRINTER
              
              Команда устанавливает порт для принтера.
              
Синтаксис     SETPRINTER <имя принтера>,
              
              где <имя принтера> - строка,   содержащая  названия
              LPT1, LPT2, LPT3, COM1 или COM2.
              
Описание      Команда SETPRINTER,   как  и  эквивалентная  услуга
              REPORT/SetPrinter/Override позволяет   Вам указать,
              какой порт нужно закрепить за принтером. По умолча-
              нию за   принтером  закреплен  порт  LPT1.  команда
              SETPRINTER изменяет назначение порта выдачи на  пе-
              чать для команд REPORT,  PRINT и PRINTER; она также
              управляет устройствами, к которым обращаются коман-
              ды OPEN PRINTER и CLOSE PRINTER.
         
Версия        Команда SETPRINTER добавлена в систему Paradox вер-
              сии 2.0.
              
Примеры       SETPRINTER "Com1".
              
См.также      PRINT, PRINTER, OPEN PRINTER, CLOSE PRINTER
-----------------------------------------------------------------
                                  SETPRIVDIR
              
              Команда устанавливает личный директорий для текуще-
              го сеанса.
              
Синтаксис     SETPRIVDIR <имя  директория>
              
Описание      Команда SETPRIVDIR,   как  и  эквивалентная команда
              Tools/Net/SetPrivate, устанавливает личный директо-
              рий пользователя для текущего сеанса.  При работе в
              сетевом режиме,  личный директорий используется для
              хранения временных   таблиц  системы  Paradox и тех
              таблиц, которые  назначаются  командой  PRIVTABLES.
              Частный директорий обычно прозрачен для пользовате-
              ля, который считает, что временные таблицы находят-
              ся в рабочем директории,  команда SETPRIVDIR не из-
              меняет текущий     директорий   системы    Paradox.
              Директорий, указанный  в команде SETPRIVDIR,переоп-
              ределяет личный директорий,  указанный через  прог-
              рамму установки параметров системы Paradox. При вы-
              зове SETPRIVDIR,  система Paradox должна находиться
              в режиме MAIN.
              
Использование Если Имя директория описано,  как путь доступа, об-
              ратные косые черточки должны быть парными.
              
Примеры       SETPRIVDIR "C:\\paradox3\\"
              эквивалентно
              Menu {Tools}{Net}{SetPrivate}{C:\\paradox3\\}
              
См.также      - PRIVDIR
              - Описание услуги Tools/Net/SetPrivate в "Руководс-
              тве пользователя по системе Paradox".
-----------------------------------------------------------------
                                 SETQUERYORDER
              
              Устанавливает порядок  полей   в   таблице   answer
              по-умолчанию.
              
Синтаксис     SETQUERYORDER <<TABLEORDER|IMAGEORDER>>
              
Описание      Использование TABLEORDER означает,  что поля сорти-
              руются и отображаются в том порядке,  в котором они
              находятся в структуре таблицы.  Для запросов, вклю-
              чающих много таблиц,  поля в answer  включаются  по
              порядку, начиная с верхнего образа запроса. Исполь-
              зование IMAGEORDER означает, что поля сортируются и
              отображаются в  том порядке,  в котором они находи-
              лись в форме запроса.  Это  делает  таблицу  answer
              чувствительной к  использованию ROTATE для переста-
              новки полей в форме запроса.
              
Версия        Команда SETQUERYORDER  была  добавлена  в   систему
              Paradox версии 3.0.
-----------------------------------------------------------------
                               SETRECORDPOSITION
              
              Перемещает по  многотабличной  форме к определенной
              позиции экрана.
              
Синтаксис     SETRECORDPOSITION <номер> <строка>
              
Описание      Команда SETRECORDPOSITION позволяет вам  точно  уп-
              равлять просмотром записей в текущей многотабличной
              форме. <Номер>  задает номер записи в таблице (от 1
              до NIMAGERECORDS),  а <строка> - строка в форме (от
              0 до количества строк в форме).  Команда перемещает
              заданную запись к заданной строкке формы.
              
Примеры       В таблице  customer  позиционируется запись,  соот-
              ветствующая Connors,  она отображается в  многотаб-
              личной форме, затем осуществляется переход к подчи-
              ненной таблице bookord, после чего находится первый
              ордер в  1990 году и устанавливается на верх подчи-
              ненной формы (строка 0 ).
              
              VIEW "Customer"
              PICKFORM 3
              MOVETO FIELD "Last Name"
              LOCATE "Connors"
              DOWNIMAGE
              MOVETO FIELD "Date"
              LOCATE PATTERN "../../90"
              SETRECORDPOSITION RECNO() 0
         
Версия        Данная команда  была  добавлена  в  систему Paradox
              версии 3.0.
-----------------------------------------------------------------
                                SETRESTARTCOUNT
              
              Устанавливает ограничение на рестарт запроса, отче-
              та или кросстабулирования по разделяемой таблице.
              
Синтаксис     SETRESTARTCOUNT OFF
              или
              SETRESTARTCOUNT < номер >,
              
              где <номер>  - неотрицательное число,  определяющее
              число рестартов.
              
Описание      При выполнении запроса, отчета или кросстабулирова-
              ния по разделяемой таблице, система Paradox базиру-
              ется на кратковременном отслеживании состояния таб-
              лицы. Если     за  это  время  другой  пользователь
              модифицирует, то  отслеживание сбрасывается и начи-
              нается снова.    Данная команда устанавливает коли-
              чество таких попыток, после выполнения которых опе-
              рация будет  завершена.  Можно использовать функцию
              ERRORCODE для опреджеления,  успешно ли выполнилась
              операция. При   ошибке выдается код ошибки 36.  При
              установке OFF (по умолчанию в системе Paradox)  по-
              пытки будут  делаться беспрерывно до достижения ус-
              пеха. Заметим, что интерактивные пользователи могут
              прервать эти попытки нажатием {Ctrl}{Break}.
-----------------------------------------------------------------
                                SETRETRYPERIOD
              
              Команда устанавливает период автоматического повто-
              ра.
              
Синтаксис     SETRETRYPERIOD <число>,
              
              где <число> - целое между 0 и 30.000, которое обоз-
              начает длительность периода повтора в секундах.
              
Описание      При работе в сетевом режиме, если приложение не мо-
              жет получить     доступ   к   некоторому   ресурсу,
              блокированному другим     пользователем,    система
              Paradox автоматически   делает  попытки  повторного
              доступа через  промежутки времени,  установленные в
              периоде повторения.  По умолчанию,  период  повтора
              равен 0.  Команда SETRETRYPERIOD позволяет изменить
              этот временной интервал.  Период повтора может быть
              установлен от   0  до  30.000  секунд (что составит
              приблизительно 8 часов 20 минут).  Если период пов-
              тора равен 0, повторные попытки не делаются.
              
Использование В режиме автоматического повтора управление переда-
              ется системе Paradox. Управление передается пользо-
              вателю в  конце периода,  или если требуемый ресурс
              стал доступен.  Если Вы изменяете период повтора  в
              приложении, Вам нужно узнать текущее значение пери-
              ода повтора с помощью функций RETRYPERIOD и  сохра-
              нить это значение в переменной.  В этом случае пер-
              воначальное значение  периода  повтора  может  быть
              восстановлено в конце приложения. Если для приложе-
              ния некритично время  ожидания  ресурса  (например,
              при пакетном режиме в сети ночью),  Вы можете уста-
              новить период повтора очень большим.
              
Версия        SETRETRYPERIOD добавлен в  систему  Paradox  версии
              2.0.
              
Примеры       rtp = RETRYPERIOD ; сохранить текущее зна-
                                ; чение в переменной
              SETRETRYPERIOD 60 ; если ресурс недоступен, попыта-
                                ; емся еще раз через минуту
               ; здесь находятся остальные строки приложения
       
              SETRETRYPERIOD rtp ; восстановление прежнего режима
                                 ; повтора
              
См.также      RETRYPERIOD
-----------------------------------------------------------------
                                    SETSWAP
              
              Команда устанавливает минимальный объем памяти, ис-
              пользуемый для   своппинга  процедур из оперативной
              памяти.
              
              SETSWAP <число>,
              
              где <число> - число,  обозначающее объем  памяти  в
              байтах.
              
Описание      Команда SETSWAP  используется  для  изменения мини-
              мального объема оперативной памяти, который система
              Paradox использует   для  автоматического своппинга
              процедур из памяти. Обычно система Paradox не начи-
              нает операций   своппинга,  пока функция MEMLEFT не
              выдает значения,  равного 0.  С помощью SETSWAP  Вы
              можете иметь  гарантированный минимальный объем па-
              мяти для образов приложения (приблизительно 2 кило-
              байта на образ)  и переменных. Параметр команды оп-
              ределяет количество оперативной  памяти  в  байтах,
              которое Вы  хотите запустить для своппинга.  Напри-
              мер, SETSWAP  10000,  приводит к  своппингу,   если
              MEMLEFT возвращает   объем  свободной  памяти 10000
              байтов.
              
Использование Поскольку система Paradox  автоматически  управляет
              ресурсами памяти,   в большинстве приложений,Вам не
              нужно использовать SETSWAP.
              
Версия        SETSWAP добавлена в систему Paradox версии 2.0.
              
Примеры       SETSWAP 12000.
-----------------------------------------------------------------
                                  SETUSERNAME
              
              Команда устанавливает текущее имя пользователя.
              
Синтаксис     SETUSERNAME <имя>,
              
              где <имя> - любая строка до 15 символов длиной.
              
Описание      Команда SETUSERNAME, как и эквивалентная услуга ме-
              ню Tools/Net/UserName   назначает пользователю имя.
              Это имя система Paradox  использует  для  извещения
              других пользователей, устанавливающих блокировки на
              сетевых объектах.  Команда SETUSERNAME переписывает
              любое имя пользователя,  установленное сетевой опе-
              рационной системой или программой определения пара-
              метров системы Paradox.
              
Версия        SETUSERNAME введена в систему Paradox версии 2.0.
-----------------------------------------------------------------
                                   SHOWARRAY
              
              Команда создает  меню  в  системе Paradox на основе
              двух массивов.
              
Синтаксис     SHOWARRAY <Массив1 Массив2>
               <<DEFAULT Выбор>>
                     TO <Переменная>,
              
              где Массив1 состоит из строк выбора, которые высве-
              чиваются в первой строке экрана,  и Массив2 состоит
              из строк пояснений, выдаваемых во второй строке эк-
              рана.
              
Описание      Команда SHOWARRAY  генерирует  меню в стиле системы
              Paradox в первой строке экрана, используя значения,
              хранящиеся в двух массивах.  Затем она передает уп-
              равление пользователю,  который  выбирает  из  меню
              нужную услугу. Выбранная услуга заносится в строко-
              вую переменную VarName, после чего управление пере-
              дается программе.   Массив1 состоит из имен выборов
              меню, выдаваемых в первой строке, а Массив2 состоит
              из пояснительных строк, выдаваемых во второй строке
              при выборе услуги.  Кроме того, Вы можете использо-
              вать опцию DEFAULT, чтобы определить текущую услугу
              при выдаче меню. Для того,чтобы выбрать эту услугу,
              нажмите {Enter}.  Если пользователь нажимает {Esc},
              управление передается системе Paradox, в переменную
              VarName заносится код клавиши {Esc}, а в переменную
              RETVAL заносится значение "FALSE".
              
Использование С помощью команды SHOWARRAY можно создавать  произ-
              вольное меню. Поскольку значения массивов легко из-
              менить в программах, можно создавать гибкие меню из
              программ. Например,    с помощью команд SHOWARRAY и
              COPYTOARRAY, можно создать меню, состоящее из теку-
              щих строк   таблицы.   С  помощью команд SHOWARRAY,
              ACCEPT и SWITCH можно создать систему меню в  стиле
              системы Paradox с любым числом уровней.  Более под-
              робно о меню в стиле ПАРАДОКСа можно  познакомиться
              в описании   команды  SHOWMENU.  Обратите внимание,
              чтто команда SHOWARRAY чуствительна к шрифтам, т.е.
              значение, присвоенное переменной VarName, начинает-
              ся с заглавной буквы.  Поэтому,  будте  внимательны
              при вводе приложений CASE,  чтобы в них использова-
              лись те   же  строки  выбора,   что  и  в   команде
              SHOWARRAY.
              
Версия        Команда SHOWARRAY  добавлена в систему Paradox вер-
              сии 2.0.
              
Примеры       В этом примере заданы два массива,   которые  затем
              используются для создания меню:
              
              Array Item[3]
              Array Expl[3]
              Item[1] = "Первая услуга"
              Item[2] = "Вторая услуга"
              Item[3] = "Третья услуга"
              Expl[1] = "Пояснения к первой услуге"
              Expl[2] = "Пояснения ко второй услуге"
              Expl[3] = "Пояснения к третьей услуге"
              SHOWARRAY
                  Item Expl
                  DEFAULT Item[1]
              To x
              
              В следующем примере описана процедура, которая поз-
              воляет передать  имена двух произвольных процедур в
              команду SHOWARRAY:
              
              PROC Newmenu(arr1, arr2)
              SHOWARRAY
                  arr1 arr2
                  TO choice
              RETURN choice
              ENDPROC
-----------------------------------------------------------------
                                   SHOWFILES
              
              Команда показывает имена файлов в виде меню системы
              Paradox.
              
Синтаксис     SHOWFILES <<NOEXT>>
              <Путь доступа><Приглашение>
              ТО <Имя переменной>.
              
Описание      Команда SHOWFILES генерирует меню в  стиле  системы
              Paradox из  имен файлов заданного директория.  Меню
              выдается в том же формате,  что и описание директо-
              рия, которое получается, когда пользователь нажима-
              ет {Enter} в услуге Tools/Info/Files.  Подробнее  о
              меню системы   Paradox  смотрите  описание  команды
              SHOWMENU. Путь  доступа содержит имя  директория  и
              файла и  может включать макроопределения,  например
              "*.*". Приглашение  появится над именами  файлов  в
              верхней части экрана.  Имя файла, выбираемого поль-
              зователем, записывается в переменную VarName. Опция
              NOEXT может быть использована, чтобы отделить имена
              файлов от расширений имен файлов.  Это  удобно  при
              выборе, например,   скриптов.  Если ни один файл не
              удовлетворяет указанному пути доступа,   переменной
              VarName присваивается значение "None". Если пользо-
              ватель нажимает {Esc} вместо выбора файла, управле-
              ние передается системе Paradox,  переменной VarName
              присваивается значение "Esc"  и  переменной  retval
              присваивается значение "False".
              
Использование Если путь доступа задается в кавычках, все обратные
              косые черточки должны быть парными.
              
              С помощью команд ACCEPT и SHOWFILES создаются меню,
              из которого пользователь может выбрать нужный файл:
              
              SHOWMENU
                  "Play" : "Выполнить программу"
                  "Exit" : "Выйти из меню"
              TO Choice
              SWITCH
                  CASE Choise = "Play":
              ; если пользователь выбрал "Выполнить", используйте
              ; ?? и ACCEPT, чтобы ввести имя программы
                                                                                                                                                                                                                                                               
              @0,0 ?? "Программа: "
              @1,0 ?? "Введите имя программы, которую  нужно  вы-
              полнить,  или нажмите {Enter}, чтобы высветить спи-
              сок программ"
              @0,8 ACCEPT "A8" TO scrname ; присвоить 8 символов
              IF scrname = "" ; если введено Enter
                  THEN SHOWFILES NOEXT ; пользователю нужен  спи-
                                       ;  сок файлов
                  "C:\\paradox2\*.sc"  ; из директория Paradox2
                  "Выберите имя программы и нажмите {Enter}"
                  TO scrname
              ENDIF
              Play scrname
              Case Choise = "Exit" : QUIT
              ENDSWITCH
              
См.также      SWITCH, ACCEPT, SHOWARRAY, SHOWMENU, SHOWTABLES.
-----------------------------------------------------------------
                                   SHOWMENU
              
              Команда создает меню в верхней части экрана и  дает
              пользователю возможность сделать выбор из меню.
              
Синтаксис     SHOWMENU <выбор 1>:<подсказка 1>...
                       <выбор N>:<подсказка N>
                      <<DEFAULT<выбор>>> TO <имя переменной>
              
Описание      При выполнении  этой команды система Paradox высве-
              чивает заданное меню в верхней части экрана.  Затем
              управление передается   пользователю,  который осу-
              ществляет взаимодействие с  меню  и  делает  выбор.
              Этот выбор присваивается строковой переменной, наз-
              вание которой определяется полем <имя  переменной>.
              После выбора   управление передается опять скрипту.
              Высвеченное меню представляется значениями  выраже-
              ний, представленных  в полях <выбор 1>...<выбор N>,
              во второй строке высвечивается подсказка, представ-
              ленная в полях <подсказка 1><подсказка N>. Вы може-
              те использовать опцию по "умолчанию" (DEFAULT).   В
              этой опции  в поле <выбор> содержится та услуга ме-
              ню, которая  будет отмечена повышенной яркостью при
              появлении меню  и вам останется только поддтвердить
              ее нажатием клавиши {Enter}.  Если пользователь на-
              жимает клавишу {Esc} раньше,  чем сделает выбор, то
              интерактивный режим завершается,   и  значение  Esc
              присваивается переменной  с именем,  обозначенным в
              поле <имя переменной>.   В  комбинации  с  командой
              ACCEPT, вы  можете использовать SHOWMENU для созда-
              ния многоуровневых меню.(Заметим, что опция DEFAULT
              позволяет Вам   видеть  выбор  в предыдущей услуге,
              когда вы нажимаете Esc.
              
                   SHOWMENU
                   "PAR" : "Ввoд пароля",
                   "MAR" : "Ввод марки",
                   "TAB" : "Ввод таблицы"
                 DEFAULT "TAB" TO TT
              SWITCH
                   CASE TT= "PAR": PLAY "PAR"
                   CASE TT= "MAR": PLAY "MAR"
                   CASE TT= "ESC": QUIT
              ENDSWITCH
-----------------------------------------------------------------
                                  SHOWTABLES
              
              Команда показывает имена таблиц в виде меню системы
              Paradox.
              
Синтаксис     SHOWTABLES <Путь доступа><Приглашение>
                         ТО <Имя переменной>
              
Описание      Команда SHOWTABLES  генерирует меню в стиле системы
              Paradox из имен таблиц заданного директория.   Меню
              выдается в том же формате,  что и при запросе имени
              таблицы из системы Paradox. Подробнее о меню систе-
              мы Paradox смотрите описание команды SHOWMENU. Путь
              доступа содержит имя директория. Все файлы с расши-
              рением .DB   включаются в меню,расширения автомати-
              чески исключаются из отображаемых значений. Пригла-
              шение появится   над именами файлов в верхней части
              экрана. Имя  таблицы, выбираемой пользователем, за-
              писывается в переменную VarName.  Если ни один файл
              не удовлетворяет указанному пути доступа,  перемен-
              ной VarName   присваивается  значение "None".  Если
              пользователь нажимает {Esc}  вместо  выбора  файла,
              управление передается  системе Paradox,  переменной
              VarName присваивается значение "Esc"  и  переменной
              retval присваивается значение "False".
              
Использование Если путь доступа задается в кавычках, все обратные
              косые черточки должны быть парными.
              
              Строится меню для выбора одной из таблиц, хранящих-
              ся в директории \paradox3 на диске C:
              
              SHOWTABLES
                "C:\\PARADOX3"
                "Выберите нужную таблицу и нажмите ВВОД"
                TO tabname
              
См.также      SWITCH, ACCEPT, SHOWARRAY, SHOWMENU, SHOWFILES
-----------------------------------------------------------------
                                     SKIP
              
              Перемещает курсор вперед или назад на заданное чис-
              ло записей в образе на рабочей области или в много-
              табличной форме.
              
Синтаксис     SKIP <число>,
              
              где число является целой величиной.
              
Описание      Данная команда  перемещает   курсор   на   заданное
              количество записей от текущей записи. Если значение
              <число> пропущено, то осуществляется перемещение на
              1 запись вперед. Если <число> отрицательно, то кур-
              сор перемещается назад.  Любые попытки использовать
              команду, находясь   в начале или конце таблицы,  не
              перемещают курсор и  вызывают  установку  признаков
              "начала таблицы" и "конца таблицы" (BOT и EOT).
-----------------------------------------------------------------
                                     SLEEP
              
              Команда выполняет задержку на указанный  промежуток
              времени.
              
Синтаксис     SLEEP <миллисекунды>
              
Описание      Команда вызывает паузу в выполнении скрипта на ука-
              занное число миллисекунд в поле <милисекунды>. Зна-
              чение миллисекунд должно быть целым числом и  нахо-
              диться в   интервале от 0 до 30000.  Следовательно,
              можно получить задержку от 0 до 30 секунд.  Команда
              SLEEP полезна   для  введения искуственной задержки
              высвеченного изображения на экране, чтобы пользова-
              тель успел просмотреть сообщения.
              
Примеры       MESSAGE "Ошибка"
              SLEEP 1000
-----------------------------------------------------------------
                                     SORT
              
              Команда сокращенного меню,  которая производит сор-
              тировку в таблице.
              
Синтаксис     SORT <имя таблицы>
                  <<ON><имя поля 1><<D>>...<имя поля n><<D>>
                  <<TO <имя новой таблицы> >
              
              где: <имя таблицы>,<имя поля 1>,<имя поля n> и <имя
              новой таблицы> - строковые выражения, и n>=1.
              
Описание      Команда сокращенного меню  выбирает  SORT  из  меню
              системы Paradox, заполняет сортируемую форму, отоб-
              ражая ее на экране,  и производит сортировку.  Если
              присутствует опция ON,  то таблица сортируется сна-
              чала по полю <имя поля 1>,  затем по полю <имя поля
              2> и  т.д.  Опция <D>,следующая за выражением имени
              поля, обозначает  убывающий порядок.  Если опция ON
              не определена,  записи сортируются по значениям по-
              лей слева направо в порядке возрастания.  Oпция  TO
              записывает результат   сортировки в новую таблицу с
              именем, представленным  в поле <имя новой таблицы>.
              Если таблица с таким именем уже существует,  то все
              ее семейство и все данные  автоматически  теряются.
              Если опция TO отсутствует,  то результат сортировки
              записывается в исходную таблицу, имя которой предс-
              тавлено в поле <имя таблицы>.
              
                                                                                                                                                                                                                                                               
Примеры       SORT "TANN" ; сортировка TANN по всем полям
-----------------------------------------------------------------
                                     STYLE
              
              Команда устанавливает атрибуты для вывода  в  канву
              языка PAL командами TEXT,? и ??.
              
Синтаксис     STYLE <опции стиля>
              или
              STYLE  ATTRIBUTE <код атрибута>
              или
              STYLE
              
Описание      Команда STYLE  приводит  к  использованию командами
              TEXT,? и ?? указанных атрибутов экрана. Первая фор-
              ма этой команды в поле <опция стиля>, содержит спи-
              сок одного или более ключевых слов (REVERSE (обрат-
              ная видимость),  BLINK (мерцание) и INTENSE(высокая
              интенсивность)). На  цветных мониторах обратная ви-
              димость отображается как голубой фон, а высокая ин-
              тенсивность - ярко зеленым цветом  текста.   Вторая
              форма позволяет   вам установить любой 8-ми битовый
              признак, поддерживаемый вашей видеокартой и монито-
              ром. Признак задается значением в поле <код атрибу-
              та>, который  должен быть целым числом от 0 до 255.
              Третья форма  команды STYLE возвращает стиль к нор-
              мальному отображению.  После  установки  атрибутов,
              они остаются таковыми до тех пор, пока канва не бу-
              дет переинициализирована,  или пока другая  команда
              STYLE не начнет исполняться.
              
Примеры       STYLE REVERSE, BLINK
              ? "Это сообщение высвечивается в обратном мерцании"
-----------------------------------------------------------------
                                   SUBTRACT
              
              Команда сокращенного меню, которая удаляет одинако-
              вые записи в двух таблицах.
              
Синтаксис     SUBTRACT <исходная таблица><конечная таблица>
              
              где:<исходная таблица><конечная  таблица>-строковые
              выражения.
              
Описание      Любая запись исходной таблицы,  которая есть в  ко-
              нечной таблице,  из конечной таблицы удаляется. Эта
              команда исполняется, когда систем Paradox находится
              в состоянии MAIN.
-----------------------------------------------------------------
                                    SWITCH
              
              Команда выполняет  одну из ряда альтернативных пос-
              ледовательностей команд,  в зависимости от значений
              некоторых условий.
              
Синтаксис     SWITCH
                       CASE <условие 1>:<команды 1>...
                       CASE <условие n>:<команды n>
                       <<OTHERWISE>>:<команды>/
              ENDSWITH
              
Описание      Условия последовательно  проверяются.  Если найдено
              истинное условие, то выполняется последовательность
              команд, записанная  в поле <команды>. Если истинное
              условие не    найдено,    то   используется   опция
              OTHERWISE, и    выполняются команды,  записанные за
              ней. Если  нет истинного значения и не используется
              OTHERWISE, то    SWITCH не имеет никакого значения.
              Отметим, что в случае выполнения одного из условий,
              остальные условия не проверяютя.
-----------------------------------------------------------------
                                  SYNCCURSOR
         
              Команда устанавливает  курсор  на канву языка PAL в
              то же место, что и на рабочей области.
              
Синтаксис     SYNCCURSOR
              
Описание      Команда SYNCCURSOR позволяет Вам установить  курсор
              в канве языка PAL в то же место, в котором он был в
              рабочем поле.  Она полезна при переходе из рабочего
              поля в канву языка PAL.
         
Версия        Команда SYNCCURSOR добавлена в систему Paradox вер-
              сии 2.0.
-----------------------------------------------------------------
                                      TAB
              
              Команда моделирует нажатие клавиши {Tab}, для пере-
              хода в следующее поле образа.
              
Синтаксис     TAB
              
Описание      TAB, как  и  клавиша  {TAB}  служит для перемещения
              курсора в следующее поле образа.   В  любом  другом
              контексте, команда  игнорируется. Таблица ниже опи-
              сывает результаты   TAB  в  каждом  режиме  системы
              Paradox:
         
             Режим ------------------  Действие
                                                                                                                                                                                                                                                               
       Главный, Редактирование,     передвигает курсор к
       Совместное редактирова-      следующему полю образа
       ние
                                                                                                                                                                                                                                                               
       Любой режим/Просмотр         игнорируется
       поля
       
       Формы                        игнорируется
         
       Редактор отчетов             Передвигает курсор в
                                    табличном диапазоне
                                                                                                                                                                                                                                                               
       Редактор скриптов            игнорируется
         
См.также      REVERSETAB
-----------------------------------------------------------------
                                     TEXT
              
              Команда выводит одну или более строк текста на кан-
              ву языка PAL.
         
Синтаксис     TEXT
                <текст>
              ENDTEXT
              
Описание      Поле <текст> содержит одну или более строк символь-
              ного текста. Текст выводится, начиная с текущей по-
              зиции курсора в канве языка  PAL.   Ключевые  слова
              TEXT и   ENDTEXT  должны быть на отдельных строках,
              вне комментариев. Отметим, что текст выбирается по-
              символьно, начиная  с линии, следующей после ключе-
              вого слова TEXT,  и заканчивается линией перед клю-
              чевым словом  ENDTEXT.  Пустые строки внутри текста
              так и отображаются.  Аттрибуты отображения,   такие
              как цвет, видеореверс, могут быть установлены с по-
              мощью команды STYLE.  Текст может быть  выведен  на
              принтер с помощью команды PRINTER.
              
См.также      ?, ??, @, STYLE
-----------------------------------------------------------------
                                    TYPEIN
              
              Команда воспроизводит  эффект ввода строки символов
              в систему Paradox.
              
Синтаксис     TYPEIN  <строка>
              
              Команда позволяет Вам моделировать набор одного или
              более символов  клавиатуры системы Paradox.  По эф-
              фекту она подобна символьным  строкам  в  кавычках,
              генерируемых во время записи сценария, но позволяет
              вычислять строку символов как  значение  выражения,
              заданные в  <строка>.  Выражение аргумента <cтрока>
              автоматически преобразуется в строку,  если это не-
              обходимо.
              
Примеры       Предположим, что   ZipCode-алфавитно-цифровое  поле
              текущей записи и переменная z хранит  число  94025.
              Тогда следующие  команды присваивают полю ZipCode в
              текущей записи значение 94025:
              
              EDITKEY
                MOVETO [ZipCode]
                TYPEIN z
                DO_IT!
-----------------------------------------------------------------
                                    UNLOCK
              
              Команда снимает  блокировку  с одной или нескольких
              таблиц.
              
Синтаксис     UNLOCK <Locklist>|<ALL>,
              
              где Locklist - список,  содержащий одну  или  более
              пар записей,  которые определяют таблицу и тип бло-
              кировки. Тип   блокировки  обозначается  следующими
              ключами: FL (полная блокировка), WL (блокировка за-
              писи), PWL  (предотвращает блокировку записи),  PFL
              (предотвращает полную блокировку).
              
Описание      Команда UNLOCK  используется  для удаления блокиро-
              вок, размещенных  в таблицах  пользователем,   либо
              приложением при   помощи команды LOCK.  Если Вы ис-
              пользуете ключевое слово ALL вместо LOCKLIST,   все
              таблицы, которые   были заблокированы из приложения
              или пользователем разблокируются. Команда UNLOCK не
              снимает блокировку с таблиц, заблокированных систе-
              мой Paradox. Системная переменная retval устанавли-
              вается в значение "Ложь", если Вы пытаетесь разбло-
              кировать какие-либо   таблицы,   которые  не   были
              заблокированы.
              
Использование Всякий раз,   когда Вы блокируете определенный объ-
              ект, будте  уверены,  что Вы разблокируете его, как
              только необходимость в блокировке отпадет. Это при-
              ведет к максимальной доступности объектов.
              
Версия        Команда UNLOCK  была  введена  в   версию   системы
              Paradox 2.0.
              
Примеры       Следующая команда  удаляет  предыдущие блокировки и
              полную блокировку из таблицы orders и полную блоки-
              ровку из таблицы stock.
         
              UNLOCK "orders" PWL, "orders" PFL, "stock" FL
              
См.также      LOCK, UNLOCKRECORD.
-----------------------------------------------------------------
                                 UNLOCKRECORD
              
              Команда снимает блокировку с текущей записи.
              
Синтаксис     UNLOCKRECORD
              
Описание      Команда UNLOCKRECORD  разблокирует  текущую запись,
              если она были предварительно заблокированы.  Тот же
              эффект имеет  одновременное нажатие клавиш {Alt}{L}
              над заблокированной записью.  Для того,  чтобы  ис-
              пользовать команду   UNLOCKRECORD,  система Paradox
              должна находиться в режиме совместного редактирова-
              ния. Если Вы пытаетесь разблокировать запись, кото-
              рая не была заблокирована,  то системная переменная
              retval будет установлена в значение "Ложь" .
              
Версия        Команда UNLOCKRECORD введена в систему Paradox вер-
              сии 2.0.
              
См.также      KEYLOOKUP, LOCKKEY, LOCKRECORD и UNLOCK.
-----------------------------------------------------------------
                                  UNPASSWORD
              
              Команда позволяет скрипту "снять" пароль т.о.,  что
              он может  передать управление пользователю не поки-
              дая таблиц, защищенных паролем.
              
Синтаксис     UNPASSWORD <пароль1>...<пароль  n>
              
Описание      В общем,  следует иметь скрипт, начинающийся коман-
              дой PASSWORD,  которая представляет пароли всех за-
              щищенных таблиц,    используемых  во  время  работы
              скрипта. Затем, перед завершением скрипта необходи-
              мо выполнить команду UNPASSWORD для отмены  доступа
              к этим таблицам. Обычно, скрипт сам должен быть за-
              щищен для предотвращения несанкционированного прос-
              мотра текста скрипта через редактор и, следователь-
              но, просмотра  паролей в сценарии.   Заметим,   что
              команда UNPASSWORD  не открывает таблицы и скрипты,
              защита и открытие которых должны делаться  посредс-
              твом выбора PROTECT из TOOLS меню.
              
Примеры       PASSWORD "TTTTT"   ; пароль
              EDIT "orders"      ; редактирование
              UNPASSWORD "TTTTT" ; перезащита
-----------------------------------------------------------------
                                      UP
              
              Моделирует нажатие клавиши {стрелка вверх}.
              
Синтаксис     UP
              
Описание      Действие команды UP аналогично действию при нажатии
              клавиши {стрелка вверх}, и зависит от текущего кон-
              текста. Если  система Paradox находится не в подхо-
              дящем режиме,  команда игнорируется. Следующая таб-
              лица показывает   действие  команды  UP в различных
              режимах системы Paradox:
                                                                                                                                                                                                                                                               
             Режим ------------------  Действие
                                                                                                                                                                                                                                                               
       Главный, Редактирование,     Cдвигает курсор на одну
       Совместное редактирова-      запись вверх
       ние/ПросмотрТаблиц
                                                                                                                                                                                                                                                               
       Главный, Редактирование,     Сдвигает курсор на одно
       Совместное редактирова-      поле вверх
       ние/Просмотр Формы
                                                                                                                                                                                                                                                               
       Редактирование,Совмест-      Сдвигает курсор на стро-
       ное редактирование/Про-      ку вверх в разделенном
                                    поле
       
       Формы                        Сдвигает курсор на одну
                                    строку вверх
                                                                                                                                                                                                                                                               
       Редактор отчетов             Сдвигает курсор на одну
                                    строку вверх
                                                                                                                                                                                                                                                               
       Редактор скриптов            Сдвигает курсор на одну
                                    строку вверх
                                                                                                                                                                                                                                                               
См.также      DOWN
-----------------------------------------------------------------
                                    UPIMAGE
              
              Команда моделирует нажатие клавиши {F3} и перемеща-
              ет курсор вверх к предыдущему образу в рабочей  об-
              ласти.
              
Синтаксис     UPIMAGE
              
Описание      Когда в рабочей области находятся несколько образов
              объектов, команда  UPIMAGE переносит курсор с теку-
              щего образа к образу,  находящемуся выше текущего в
              рабочем пространстве.    Команда  UPIMAGE  работает
              только в Главном режиме,  режиме редактирования или
              режиме Совместного редактирования.  В  других  кон-
              текстах команда игнорируется.  Она также не работа-
              ет, если  текущий образ является самым верхним  или
              единственным в  рабочем пространстве.  Если текущий
              образ находится в режиме просмотра формы,   команда
              UPIMAGE имеет  действие выхода из просмотра формы в
              просмотр таблицы для изображения,  находящегося вы-
              ше.
-----------------------------------------------------------------
                                   VERTRULER
              
              Команда моделирует  нажатие  клавиш {Ctrl}{V},  для
              включения/выключения на экран счетчика строк в  ре-
              дакторе отчетов или программ.
              
Синтаксис     VERTRULER
              
Описание      Команда VERTRULER, как и клавиши {Ctrl}{V} включают
              /выключают счетчик строк в  редакторе  отчетов  или
              программ. В других контекстах команда игнорируется.
-----------------------------------------------------------------
                                     VIEW
              
              Команда сокращенного меню, которая помещает таблицу
              в рабочую область
              
              VIEW <имя таблицы>
              
Описание      Команда используется ,когда система  Paradox  нахо-
              дится в   состоянии  MAIN.  Новый образ отображения
              указанной таблицы помещается в рабочую область сис-
              темы Paradox.  Этот образ становиться текущим обра-
              зом, а  его первая запись (если такая имеется) ста-
              новиться текущей    записью.   Поле  номера  записи
              становиться текущим полем. Если таблицы с указанным
              именем не существует, выдается сообщение об ошибке.
              
Примеры       Переменная х содержит строку значений "orders".
              
              VIEW х
              
              эквивалентна последовательности выбора из меню:
              
              MENU{VIEW}{orders}
-----------------------------------------------------------------
                                     WAIT
              
              Команда позволяет  пользователю  осуществлять прос-
              мотр или редактирование в поле, записи или таблице.
              
Синтаксис     WAIT  FIELD << PROMT<prompt1><<,<prompt2> >> >>
                          << MESSAGE<message> >> UNTIL<keycodes>
              или
              WAIT  RECORD<< PROMT<prompt1><<,<prompt2> >> >>
                          << MESSAGE<message> >> UNTIL<keycodes>
              или
              WAIT  TABLE << PROMT<prompt1><<,<prompt2> >> >>
                          << MESSAGE<message> >> UNTIL<keycodes>
         
              где <prompt1>,<prompt2> и <message> - любые строко-
              вые выражения, а <keycodes>-список одного или более
              выражений кодов клавиш языка PAL, разделенных запя-
              тыми.
              
Описание      Эта мощная команда позволяет Вам  дать  возможность
              пользователю работы в интерактивном режиме с табли-
              цами, которые  помещены в рабочую  область  системы
              Paradox. Управление  возвращается к скрипту,  когда
              пользователь нажмет одну из определенных клавиш.  В
              типичном приложении вы можете сначала выполнить ко-
              манду VIEW, для того, чтобы поместить таблицу в ра-
              бочую область,  продвинуться к определенной записи,
              выбрать форму,  войти в состояние режима редактиро-
              вания и ввести команды:
          
              WAIT RECORD
                 PROMT "Pедактируется запись N"+STRVAL(RECNO()),
                  "Нажмите {F2}, когда кончите редактирование"
                 UNTIL "F2"
         
              Подсказка: "Редактируется запись N" и номер  записи
              высвечивается пользователю  в верхней части экрана.
              Подсказка: "Нажмите {F2},  когда кончите редактиро-
              вание", высвечивается на второй строке экрана.
              Пользователь теперь может интерактивно  работать  с
              высвеченной записью     обычным   способом  системы
              Paradox. Пользователь может двигаться от поля к по-
              лю и  модифицировать одно или более значений полей.
              Если Вы не вошли в режим редактирования до  появле-
              ния команды WAIT, пользователь не сможет редактиро-
              вать и будет ограничен только  просмотром  записей.
              RECORD в  WAIT RECORD ограничивает пользователя пе-
              редвижением по полям в текущей записи.  Форма  WAIT
              FIELD может быть использована для продвижения поль-
              зователя в текущем поле. Форма WAIT TABLE позволяет
              пользователю передвигаться  по всей таблице.  Заме-
              тим, что, используя свойства полей Display Only при
              создании форм,    Вы можете ограничить пользователя
              отдельными полями.  Например,  Вы  можете  защитить
              ключевые поля, позволяя пользователю корректировать
              только неключевые. Во всех этих трех формах команды
              пользователь лишен возможности вызывать меню систе-
              мы Paradox и даже переключатель форм  {F7}.   Опция
              PROMPT дает  возможность использования двух верхних
              строк экрана для вывода сообщений в течение  режима
              WAIT. Эти сообщения не должны превышать 80 символов
              каждое. Опция  MESSAGE позволяет Вам вывести на эк-
              ран сообщение в окно сообщений системы Paradox,  но
              как только пользователь нажмет любую клавишу,   это
              сообщение исчезает. В отличие от этого, сообщения в
              двух верхних строках остаются  до  тех  пор,   пока
              пользователь не нажмет определенную клавишу в конце
              команды WAIT. В качестве побочного эффекта команды,
              переменной "retval"   присваивается  значение  кода
              клавиши, которую  пользователь нажимает в конце ко-
              манды WAIT.
              
Примеры       WAIT TABLE UNTIL "Help","DO_IT!"
              
              В данном примере заканчивается взаимодействие, ког-
              да нажата клавиша помощи {F1} или клавиша  выполне-
              ния {F2}.  Если для окончания взаимодействия нажата
              клавиша {F1},   то  строковой  переменной  "retval"
              присваивается строковое значение "Help". Скрипт мо-
              жет проанализировать  эту  переменную  и  выполнить
              действие присваивания этого значения.  В комбинации
              с командой WAIT может  быть  осуществлен  контроль,
              например попадание в интервал,  отсутствие значений
              и т.п. и пока все виды контроля не будут проведены,
              пользователь не сможет выйти из режима WAIT.
              
              Следующий цикл  ввода  данных присоединяет записи к
              концу таблицы orders.
              
              EDIT "orders"  ;  редактирование таблицы
              END            ; переход к последней записи
              PICKFORM 2     ; вывод формы F2
              WHILE (TRUE)       ; цикл
               PgDn              ; открыть пустую запись
               WAIT RECORD
               PROMPT "Нажмите {F2} на нужной записи. Esc-выход"
               UNTIL "F2","ESC"
               IF retval="ESC" THEN QUITLOOP ENDIF
              ENDWHILE
             DO_IT!              ; конец редактирования
-----------------------------------------------------------------
                                     WHILE
              
              Команда выполняет последовательность команд в  цик-
              ле, пока указанное условие истинно.
              
Синтаксис     WHILE <условие>
                     <команды>
              ENDWHILE
              
Описание      Поле <условие>  -  логическое  выражение.  Если его
              значение истинно,  то выполняются команды,  которые
              представлены в поле <команды>. Затем управление пе-
              редается в вершину цикла,   и  условие  проверяется
              снова. Эти  шаги будут повторяться до тех пор, пока
              логическое выражение не будет ложным. В этом случае
              цикл заверщается   и управление передается команде,
              следующей за ENDWHILE.  Вы можете использовать  ко-
              манду LOOP в теле WHILE, чтобы была возможность пе-
              рескакивать через команды, находящиеся между LOOP и
              ENDWHILE. Команда  QUITLOOP может быть использована
              для обхода всех команд цикла.  Команды WHILE  могут
              быть вложены одна в другую произвольным образом.
              
Примеры       Следующие команды  вычисляют  n!,   где  n вводится
              пользователем:
              
              CLEAR @10,10 ??  "Введите номер: "
              ACCEPT "S" MIN 0 MAX 1000 TO N
              product = 1
              WHILE n>0
               product = product * n
               n=n-1
              ENDWHILE
              MESSAGE "Результат: ", product
-----------------------------------------------------------------
                                   WRITELIB
              
              Команда осуществляет   предварительную   трансляцию
              процедур и сохраняет их в в библиотеке.
              
Синтаксис     WRITELIB <имя  библиотеки><имя  процедуры 1>,...,
                       <имя процедуры N>
              
Описание      Как только процедуры загружаются в библиотеку,  они
              могут быть считаны из скрипта с использованием  ко-
              манды READLIB.  Эти процедуры уже готовы для выпол-
              нения, и нет необходимости их переопределять. Преж-
              де, чем    записать  процедуры  в  библиотеку,   ее
              необходимо создать с помощью команды CREATLIB, про-
              цедуры, которые  необходимо записать,  должны нахо-
              диться в памяти. Вы можете хранить до 50 процедур в
              каждой библиотеке.  Поскольку имя каждой библиотеки
              занимает некоторую память,  лучше иметь меньшее ко-
              личество библиотек  с большим количеством процедур.
              Вы можете записать процедуры в  библиотеку  столько
              раз, сколько  Вам это необходимо. При повторной за-
              писи процедуры она замещает существующую в  библио-
              теке с таким именем.  Возможности удалить процедуру
              из библиотеки нет.  Когда процедура записывается  в
              библиотеку, ее  имя храниться вместе с ней. Для от-
              ладки хранящейся в библиотеке  процедуры  ее  текст
              должен находиться на диске и в директории,  в кото-
              ром он был расположен до записи в библиотеку.
              
Примеры       Следующий скрипт записывает  процедуру,   названную
              CHECKPRINT, в  библиотеку, названную UTILITY. Пред-
              полагается, что  библиотека уже создана  с  помощью
              CREATLIB.
         
              PROC CHECKPRINT()
                   IF PRINTSTATUS() = FALSE
                     THEN
                      MESSAGE " Принтер не готов "
                      RETURN FALSE
                     ELSE
                      RETURN TRUE
                   ENDIF
              ENDPROC
              WRITELIB "UTILITY" CHECKPRINT
-----------------------------------------------------------------
                                     ZOOM
              
              Команда моделирует действие клавиш {Ctrl}{Z},   пе-
              редвигая курсор  к первой записи с указанными вели-
              чинами в образе.
              
Синтаксис     ZOOM
              
Описание      Команда ZOOM является сокращением опции меню систе-
              мы Paradox       Image/Zoom/Value.    Ее   действие
              заключается в высвечивании следующего сообщения:
              Value:
              Enter a value or pattern to search for
              (введите величину или образец для поиска)
              
              В этом месте Вы должны  ввести  величину  и  нажать
              {Enter} для  начала поиска.  Аналогично,  Вы можете
              применить команду SELECT; в обоих случаях  вводится
              величина и нажимается {Enter}. Если курсор находит-
              ся вне изображения,  в режиме просмотра таблиц  или
              форм, ZOOM  игнорируется. Если величина, заданная в
              качестве образца для поиска не найдена,  то в рабо-
              чем пространстве  системы Paradox высвечивается со-
              общение: "No  match found"; заметим,  что системная
              переменная retval не устанавливается в этом случае.
              
Использование Из-за того,  что системы Paradox поддерживает  один
              ключ поиска   на  образ,  при использовании команды
              ZOOM повторно для поиска другой величины в  том  же
              образе, Вы должны быть уверены, что Вы очистили те-
              кущий ключ поиска. Использование команды SELECT для
              ввода величины   и начала поиска приведет к очистке
              величины из меню.  Благодаря  высокоуровневой  под-
              держке управления  поиском в большинстве приложений
              команда LOCATE   обычно  предпочтительнее   команды
              ZOOM.
              
Версия        Команда ZOOM  введена в систему Paradox версии 2.0.
              
Примеры       Следующий пример  переводит  курсор к первой записи
              таблицы orders,  содержащей указанную  дату  заказа
              (июнь 1988г):
         
              VIEW "orders"
              MOVETO FIELD "Date"
              ZOOM SELECT "6/../88" ;  переместить  курсор  к
               ; первой записи с датой заказа "Июнь 1988г"
              
См.также      LOCATE, QUERY, SCAN, ZOOMNEXT.
-----------------------------------------------------------------
                                   ZOOMNEXT
              
              Команда моделирует нажатие клавиш {Alt}{Z}. Перено-
              сит курсор  к следующему полю с указанной величиной
              в образе на экране.
              
Синтаксис     ZOOMNEXT
              
Описание      Команда ZOOMNEXT используется после того,  как  ис-
              пользовалась команда ZOOM,  которая установила ключ
              поиска или   после  выполнения  услуги  Image/Goto/
              Value. Команда  ZOOMNEXT переносит курсор к следую-
              щей записи текущего образа,  которая  удовлетворяет
              заданному ключу поиска.  Если такой записи нет, со-
              общение "No match found"  высвечивается  в  рабочем
              простанстве системы Paradox. Заметим, что системная
              переменная retval не устанавливается в этом случае.
              Если курсор не находится в образе, то команда игно-
              рируется.
              
Использование Благодаря более высокоуровневой поддержке  управле-
              ния поиском в большинстве приложений команды LOCATE
              и LOCATE NEXT обычно предпочтительнее команд ZOOM и
              ZOOMNEXT.
              
Версия        Команда ZOOMNEXT  была  введена  в  систему Paradox
              версии 2.0.
