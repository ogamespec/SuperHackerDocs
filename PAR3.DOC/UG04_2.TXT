      ГЛАВА 4.
      --------
      ASK.
      ----
      Постpоение пpедложений запpосов.
      --------------------------------
      " Для включения знаков пунктуации и дpугих заpезеpвиpованных сим-
 волов, таких как "*" в шаблон , заключаете их в двойные кавычки. Напpи-
 меp, для захвата текущего значения $S(+ любое количество центов), вве-
 дите S "."..  Пеpвый поpядок ( в кавычках) является десятичной точкой,
 а последние два задают опеpатоp повтоpа. Более подpобно, см. "Исполь-
 зование кавычек" ниже в этом pазделе.
                                                                                                                                                                                                                                                               
     Даты.
     -----
     Для получения значений дат по точному шаблону Вы можете использо-
 вать любую из тpех экpанных фоpматов пpедставления даты -mm/dd/yy,
 dd=Mon-yy, или dd.mm.yy- в фоpме запpоса. Однако, когда Вы используе-
 те шаблон с датой, шаблон должен отобpажать текущий экpанный фоpмат
 дат (См. главу 2 для инфоpмации о тpех возможных экpанных фоpматов
 дат).	   Если текущий фоpмат дат - dd-Mon-yy, ввод шаблона 3.. pабо-
 тать не будет. Обpатите внимание, что Вы должны стpоить шаблон сог -
 ласно текущему фоpмату даты, хотя Вы можете использовать Image/Format
 для изменения фоpмата даты, отобpажаемой в обpазе таблицы.
                                                                                                                                                                                                                                                               
     Числа.
     ------
     Когда Вы вводите числа в фоpму запpоса, не используйте отделение
 целых частей. Это пpименяется, когда Вы пpедставляете числа по между-
 наpодному или национальному соглашению CША.
 То есть, для пpосмотpа заказов на более чем миллион единиц, Вы должны
 всегда использовать pазделитель, такой как "." в фоpмате США.
    Для включения десятичного pазделителя как части шаблона, Вы можете
 выделить pазделитель кавычками. Напpимеp, для поиска всех Заказчиков,
 котоpые заказали некотоpое количество, котоpое включает около четыpех
 десятков единиц, используйте запpос.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
    Неточные совпадения: опеpатоp  like.
    ------------------------------------
    Уникальной особенностью Paradox-а является опеpатоp like, котоpый
 позволяет Вам получать инфоpмацию, даже когда Вы не знаете точно, что
 Вы ищете. Опеpатоp like высвечивает записи, котоpые похожи, но не выг-
 лядят точно также как вводимое значение.
    Like специально пpименим для обнаpужения несовпадения написанного в
 таблицах. Напpимеp, сотpудница Вашего отдела использет Paradox для pу-
 ководства подписчиками жуpнала. Один конкpетный запpос высвечивает все
 жуpналы, за исключением одного - Readers Digest.
    После часов, потpаченных на выявление нестыковки она догадывается,
 что входом в таблицу является Readers Digest. Из-за пpопуска апостpофа
 запpос не находит по точному совпадению и поэтому не высвечивает за-
 пись.
    Условие like Readers Digest, с дpугой стоpоны, найдет эту запись.
 Моpаль: если запpос не дает ожидаемого pезультата, попытайтесь исполь-
 зовать like, чтобы посмотpеть, не  заключается ли пpоблема в  пpостом
 несовпадении написания.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
   Отpицание обpазца:опеpатоp Not.
   -------------------------------
   Если Вас интеpесуют записи не отвечающие некотоpым условиям, ис -
      пользуйте кpитеpий выбоpа с опеpатоpом Not (НЕ).  Вы можете использо-
      вать опеpатоp Not для точного выбоpа диапазонов, обpазцов, подобного
      или любого дpугого вида кpитеpия выбоpа.
   Пpимеp 4-11 показывает заказы в котоpых запас (Stock#)  не  pавен
      519. Тепеpь пpедположим, что Вы хотите посмотpеть всех клиентов, кото-
      pые не заказывали данный пpодукт. Вы можете модифициpовать запpос пpо-
      стой пpовеpкой поля Cust ID. Но это не даст Вам пpавильный ответ, так
      как опеpатоp Not не пpовеpяет индивидуально каждую запись. Итак, кли-
      ент котоpый заказал как #519 так и #556 будет ошибочно включен в ответ
      (т.к. #558 действительно НЕ #519).
   Существует способ получения ответа на подобные запpосы пpи котоpых
      пpосматривается за один раз несколько записей: используйте оператор Nо
      (нет) вместо Not. Оператор No и остальное множество операторов сравне-
      ния Paradox-а описаны в " Работа с множеством записей" ниже  в   этой
      главе.
                                                                                                                                                                                                                                                               
  4-10. Неточный выбор.
  ---------------------
  Предположим, что Вы хотите получить информацию о клиентах которые
     живут в столице Саудовской Аравии. Вы знаете ее произношение "Ree-ahd",
     но не помните как оно пишется. Критерий выбора like поможет найти соот-
     ветствующие записи.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
     Условие Like riad найдет запись с городом который Вы хотите, Riyadh.
     Заметьте, что Вы не можете использовать образец R..d чтобы найти Riy-
     adh, поскольку d	не является последней буквой.(Между прочим, Riyadh,
     Riyad и Riad альтернативные написания названия этого города. Если Вы
     не уверены, что все записи в таблице используют одинаковое написание,
     то неплохо использовать Like в запросах связанных с этим городом).
  Когда Вы используете Like, вариант (строчные	или прописные) букв
     которые Вы вводите не имеет значение. Однако, Вы должны выбирать пер-
     вую букву точно.Другими словами Like Triad не выберет Riyadh).
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
  4-11. Выбор записей, которые не сравнимы с величиной.
  -----------------------------------------------------
  Предположим, что Вы хотите узнать о заказах на все прродукты, кро-
     ме домашних роботов (заказ #519)(Stock #519).
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
  4-12. Выбор записей, которые не сравнимы с образцом.
  ----------------------------------------------------
  Пусть Вам нужна информация о заказах сделанных в любом месяце, кро-
     ме декабря. Поскольку Вым интересны преимущественно большие заказы,
     внутри каждого продукта записи сортируются в убывающем порядке по коли-
     честву (Quant).
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
  Пустое значение: пустой оператор.
  --------------------------------
  Вы можете иногда захотеть найти записи без значений в одном или
     нескольких полях. Возможно пустое значение означает, что поле непри-
     метно (например, пустой штат для неамериканских клиентов, или пустые
     комиссионные для непроданных	говоров). Или, возможно, Вы не мог-
     ли заполнить значение в некоторых записях когда вводили их, а теперь
     готовы сделать это.
  Вы можете отобразить эти записи в таблице которая содержит пустые
      значения в отдельных полях напечатав слово BLANK	в поле в форме зап-
      роса. Результирующая таблица с ответом будет содержать только записи
      с пустыми значениями в этом поле.

  4-14. Выбор записей с пустыми значениями.
  -----------------------------------------
  В таблице Customer (клиент), записи  для американских клиентов все
      имеют пустое значение в поле Country (страна). Предположим, Вы хотите
      отобразить эти записи, отсортировав их по штатам. Для сортировки таким
      образом, преобразуйте таблицу так, чтобы поле Country (страна) и Stats
      (штат) предшествовали длругим выбираемым полям.





 Рис.




   Для преобразования формы запроса Customer для данного запроса, пе-
       реместите  курсор на  State  и нажмите Rotate (Ctrl F1). Затем переме-
       стить его на Cust ID и нажмите Rotate (Ctrl H) дважды.
   Примечание: Чтобы получить таблицу Answer (ответ) чувствительную к
       преобразованию формы запроса Вы должны выбрать Defaulte/Query Order/
       Image Order в программе конфигурации Custom. См. часть 14 ( Дополни-
       тельный раздел) для детализации и пояснений.
       Так как все записи в таблице Answer имеют одинаковые значения (пустые)
       в первом поле, Conntry (страна), они сортируются по второму полю,Sta-
       te (Штат). Внутри каждого штата, записи отсортированы по третьему по-
       лю (Сust ID).


   Сегодняшняя дата: оператор Today.
   --------------------------------
   В полях типа дата, оператор Today определяет сегодняшнюю дату.
       Для того, чтобы оператор Today работал правильно необходимо, чтобы
       календарь Вашего компьютера был верно установлен. Оператор Today осо-
       бенно полезен для определения подлежащих уплате и получению в сочета-
       нии с Paradox -ким арифметическим оператором.(См. следующий раздел
       "Арифметические выражения").

   Арифметические выражения.
   -------------------------
   В плановых полях и полях типа дата Вы можете использовать ариф-
       метические выражения в формах запросов. Для этого Вы можете констру-
       ировать выражения с арифметическим оператором приведенным ниже:

   _____________________________________________________
  :    Оператор    :	   Значение			:
  : ----------------------------------------------------:
  :	  +	   :	   сложение			:
  :	  -	   :	   вычитание			:
  :	  *	   :	   умножение			:
  :	  /	   :	   деление			:
  :	  ( )	   :	   группирование выражений	:
   -----------------------------------------------------

   Арифметические операторы особенно полезны совместно с оператором
      Today, а также с элементами образцов, которые обсуждаются в "Запросы
      из более чем одной таблиц" ниже в этой части.
   Вы можете использовать запрос аналогично запросу в этом примере с
      таблицами подлежащих уплате и получению для нахождения счетов, кото-
      рые просрочены более, чем на 30 дней.
                                                                                                                                                                                                                                                               
   Арифметические операции  с датой.
   ---------------------------------
   Даты могут использоваться в арифметических выражениях.
   Вы можете:
   - добавить число (дней) к дате;
   - вынести число (дней) из даты;
   - вынести дату из даты (результат  - число дней).
                                                                                                                                                                                                                                                               
   Коннатенация значений.
   ----------------------
   В дополнение к его арифметическим функциям оператор + может быть
      использован для комбинации (коннатенации)
      алфавитно-цифровых значений. См. пример 4-39 далее в этой части.
                                                                                                                                                                                                                                                               
   4-15. Выбор записей по сегодняшней дате.
   ----------------------------------------
   Предположим, сегодня 24 июня 1988г. и Вы хотите отобразить все
      заказы сделанные до сего дня.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
		 Рис.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
   4-16. Выбор записей, используя арифметические выражения.
   --------------------------------------------------------
   Допустим, сегодня 24 июня 1988г. и Вы хотите отобразить все зака-
      зы сделанные более чем 90 дней тому назад.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
		    Рис.
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                               


	 Использование кавычек.
	 ----------------------
	 Если Вы хотите ввести алфавитно-цифровое значение содержащее зна-
     ки пунктуации или зарезервированные слова, набирайте их в двойных ка-
     вычках ("). Paradox  распознает символы кавычек как значения и не при-
     дает им их специального значения.
	 Аналогично, предположим, Вы хотите отобразить информацию о клиен-
     тах у которых вместо фамилии стоит пробел.
	 Если Вы просто напечатаете пробел в форме запроса,то Paradox ото-
     бразит эти записи со значением "пробел" (тогда как это отсутствие зна-
     чения) в поле Last Name (фамилия). Вместо этого, напечатайте "Blank"
     и Paradox	отобразит информацию которая Вам нужна.
	 Кавычки не нужны для ограничения пробелов внутри значений. Однако,
     они необходимы для ограничения всех других символов, которые имеют спе-
     циальное значение в Paradox-e включая точки, периоды, звездочки и т.д.
	 Если значение само имеет двойные кавычки, экранируйте двойные ка-
     вычки наклонной чертой (\), как в следующем примере:
	  "Margaret\"Hot lips\"Houlihan".
	 Аналогично, если значение содержит наклонную черту (\), экранируй-
     те ее другой наклонной чертой.
	 Два условия в одном поле.
	 ------------------------
	 Если Вы хотите ввести более чем одно условие выбора в поле, и тре-
     буете, чтобы они все выполнялись, разделяйте их запятыми, как показано
     в примере 4-18.

	 4-17. Использование двойных кавычек.
	 -----------------------------------
	 Предположим Вам необходима информация о клиенте по имени R.Elspeth,
     111. Если Вы просто введете Elspeth,111  в поле Last Name формы запроса
     Customer, Paradox использует Elspeth и 111  как два отдельных значения
     для совпадения, и ни одна запись не будет найдена. Вы можете использо-
     вать двойные кавычки для отображения необходимой Вам записи.



			      Рис.





	 4-18. Два условия в одном поле.
	 -------------------------------
	 Предположим, Вы хотите знать, какой клиент заказал более чем один
     robot-valet между 31 мая и 31 октября 1988г.


			      Рис.



	 Использование в запросах логического ИЛИ.
	 -----------------------------------------
	 Вы уже знаете ( см.пример 4-6 и др.) как вводить более чем одно
     условие запроса без поиска записей. Когда Вы вводите более одного кри-
     терия выбора в одной строке формы запроса, то выбираемые записи должны
     отвечать всем критериям. Формально, этот тип требования называется ло-
     гическим "и", так как записи должны  удовлетворять первому и второму
     критериям одновременно ( и другим критериям, если их больше).
	 Но иногда Вы хотите выбрать записи, которые удовлетворяют либо пер-
     вому критерию, либо второму( либо обоим). Например, Вам необходима ин-
     формация о покупателях, которые живут  в Калифорнии или в Нью-Йорке.Или
     возможно Вам нужно знать какие клиенты заказали robot-valet иди носовые
     платки (или и то и другое).Этот вид условий иногда называют логическое
     ИЛИ.
	 Если необходимо получить записи в запросе удовлетворяющие какому-
     нибудь одному ( или более) из нескольких условий в одном поле запроса,
     то Вы можете использовать оператор Paradox-а ИЛИ (OR). Просто напеча -
     тайте все условия для поля на одной строке формы запроса, а каждое ус-
     ловие  разделяйте оператором OR (ИЛИ), как показано в примере 4-19.
     Paradox отобразит все записи удовлетворяющие любому условию для данно-
     го поля.
	 Могут быть условия ИЛИ, которые не помещаются в одной строке. Если
     условия относятся к различным полям, или существует несколько множест
     условий, то Вы можете ввести их на отдельных строках, как показано в
     примере 4-20. Когда запрос содержит несколько строк условий, Paradox
     отобразит все записи удовлетворяющие любой строке. Вы можете также ис-
     пользовать оператор OR(ИЛИ) для обьединения условий внутри каждого по-
     ля.
	 Вы можете ввести до 22 строк на одну форму запроса. Вообще все ст-
     роки должны иметь соответствующие поля проверяемые при исполнении зап-
     роса.
	 Обычно, когда Вы используете оператор OR (ИЛИ) или устанавливаете
     условия в отдельных строках, дубликаты записей  удаляются из таблицы
     ответа (Answer).
	 Вы можете использовать оператор OR (ИЛИ) с альтернативными услови-
     ями в более чем одном поле на соответствующей строке. Пусть Вам необ -
     ходимо просмотреть всех клиектов которые живут в Нью-Йорке, Калифорнии
     или Флориде и которые имеют ограничения кредита более чем $1.000 000
     или менее чем $500 000. Вы можете использовать оператор OR в обоих по-
     лях State (штат) и Credit (кредит), и ввести запрос на одной строке.
	 Вы можете использовать оператор OR для точного выбора, диапазонов,
     образцов, подобных или любых других видов критерия выбора, но нельзя
     его использовать с элементами образцов используемых для связывания таб-
     лиц.
	 Вы можете смешивать операторы OR и AND  в одном запросе как показа-
     но в примере 4-21.

	 4-19. Условие "ИЛИ" в одном поле.
	 ---------------------------------
	 Предположим Вам необходимо узнать какие клиенты заказали либо ro-
     bot-valet (Stock# 519), либо норковый воротник (Stock# 244), либо оба.



			    Рис.


	  Заметим, что клиент #9004, который удовлетворяет обоим условиям
      дважды включен в ответ.

	  4-20. Условие "ИЛИ" в разных полях и разных  строках.
	  -----------------------------------------------------
	  Предположим нам необходимо получить информацию о клиентах, кото-
	  рые:
	  - живут в Калифорнии, Нью-Йорке или Флориде;
	  - имеют ограничения кредита более чем $ 1000 000.



			     Рис.


	  Различные условия для различных полей могут быть введены на раз-
      личных строках. В этом запросе соответствующие поля могут проверяться
      в  каждой строке.

	  4-21. Условие "И" и "ИЛИ" в одном запросе.
	  ------------------------------------------
	  Предположим нам необходимо узнать кто из клиентов:
	  - живет в Калифорнии и имеет ограничения кредита более $ 1000 000;
	  - живет в Нью-Йорке или во Флориде и имеет ограничения кредита
	    более $ 500 000.


			     Рис.



	  Поскольку условия кредита являются одинаковыми  для Нью-Йорка и
      Флориды, Вы можете комбинировать условия для двух штатов на одной сто-
      роке используя оператор OR (ИЛИ). Поскольку условия кредита (Credit)
      для Калифорнии отличаются, оно должно быть введено в отдельной строке.






	  ЧАСТЬ 4.
	  ---------
	  Запросы более, чем из одной таблицы.
	  ------------------------------------
	  Запрос из нескольких таблиц аналогичен запросу из одной таблицы
      за исключением:
	  - Вы запрашиваете данные из каждой таблицы;
	  - Вы должны использовать элементы образцов без сообщения Paradox-у
	    какая информация в таблицах должна быть взаимосвязана.

	  Элементы примеров.
	  -----------------
	  Таблицы в множественном запросе связываются общими полями, которые
      должны содержать аналогичные виды информации. Например, образец таблиц
      заказы (Orders) и клиенты (Сustomer)имеет общие поля содержащие номер
      клиента  (названный Cust ID  в  обоих таблицах). Поля не должны  иметь
      идентичные имена, но типы этих полей должны быть совместимы. Для ука-
      зания общих полей в Paradox-е, вводятся элементы образцов в эти поля в
      формах запросов.
	  Элементы образцов являются расширением общего Парадоксовского под-
      хода запросов по образцу. Кроме соединения таблиц, элементы образцов
      позволяют Вам обьединить значения вместе в одной таблице,выполнить вы-
      числения над значениями, вставить новую запись основанную на старых и
      выдавать множество интересующих Вас  запросов о Ваших данных.
		      F5  Пример (Example)
	  В форме запроса, элементы образйа выглядят точно также, как значе-
      ние введенное как критерий выбора, но оно выделено или появляется в
      контрастирующем цвете. Для того, чтобы ввести элементы образца, нажми-
      те Example (F5) и наберите значение. Выделение появится во время набо-
      ра.

	  4-22. Связывание таблиц.
	  -----------------------
	  Предположим Вы хотите получить описание товаров закупленгных каж-
      дым клиентом после 1 июня 1982г. Таблица orders cодержит информацию о
      покупках каждого клиента, но информация о покупках ограничена только
      полем Stock #. Таблица products содержит описание каждого товара, но
      не содержит информацию о заказах. Для того, чтобы ответить на вопрос,
      Вам необходимо скомбинировать информацию из обоих таблиц.


			    Рис.







	  Поскольку поле Stock # (Запас) является общим полем через которое
      обе таблицы обьединяются, оно содержит элемент образца. По существу,
      Paradox выбирает запись из таблицы "Заказы"(Orders) и проверяет дан-
      ные на предмет включения в запрос. Затем он просматривает поле с эле-
      ментами образца (Stock#), то проверяет был ли товар заказан. Далее он
      идет в таблицу Products (продукты) просматривает поля с аналогичнымми
      элементами образца (Stock#) и находит запись с аналогичным значением.
      В конце концов он получает описание из таблицы "Продукты"(Products)
      и обьединяет две записи вместе в таблице "Ответ"(Answer). Элемент об-
      разца здесь - xyz - может быть просто 12 или b000.
	  В "Ответе" (Answer), проверяемые поля из каждой таблицы отобража-
      ются в порядке в котором их формы запросов появились на рабочем прост-
      ранстве. Каждое поле таблиц появляется по умолчанию в порядке в кото-
      ром они появились в таблице. Однако, Вы можете сделать порядок полей
      чувствительным к следованию полей в формах запросов выбором Defanlte/
      Query Order/Imase Order  в программе Custom Configuration. См. часть
      14 для более подробной информации.
	  Элементы " примера":
	  -------------------
	  - должны состоять из букв алфавита (А-Z, больших  или матеньких)
	    или цифр (0-9). Другие символы не могут быть использованы;
	  - не должны содержать пробелы.
	  Внутри этих ограничений, сами значения могут быть любыми  на ваш
      вкус - Mary  или 999, или xyz, или data - но необходимо использование
      одинаковых элементов "примера" в соединяемых полях.
	  Элемент примера устанавливается для конкретного значения выбирае-
      мого из таблицы. С целью соединения таблиц вместе, элемент "примера"
      есть "place markers" (маркер поля), который означает: если запись выб-
      ранная из таблицы имеет значение в определенном поле, она должна быть
      связана со всеми записями из другой таблицы, которые имеют такое же
      значение в соответствующем поле.
	   Вы можете использовать "пример" для связывания сколько угодно
      таблиц, число которых ограничивается только размером памяти Вашего
      компьютера.

	   4-23. Связывание дополнительных таблиц.
	   ---------------------------------------
	   Предположим, вместо номера идентификатора клиента (Customer ID)
       в примере 4-22, Вы хотите получить список имен клиентов. Поскольку
       эта информация не содержится ни в таблице Orders (заказы), ни в Pro-
       ducts (продукты), Вы должны добавить в запрос таблицу Customer (кли-
       ент).




			    Рис.


	   Пример показывает как использовать несколько множеств элементов
       образцов в одном запросе: xyz - вязывает поля Stock #  в таблицах
       Orders (заказы) и Produkts (продукты) как и раньше, тогда как 999
       связывает поля Cust ID в таблицах Orders и Customer.
	   Заметьте, что Вы не можете контролировать (отображать) поля ко-
       торые содержат элементы образцов (подобно Cust ID) если Вы не включи-
       ли их в таблицу Answer (ответ).

	   4-24. Связывание еще больше числа таблиц.
	   -----------------------------------------
	   Предположим, что в дополнение к информации в примере 4-23, Вы хо-
       тите также получить список имен поставщиков (Salesperson) которые взя-
       ли заказ. Эта информация содержится в таблице Employee, которая долж-
       на быть связана с таблицей Orders  через поле Emp #.



			     Рис.





	   Элемент образца Salesrep  присоединяет поле Emp # в таблице Orders
       с полем ID# в таблице Employee. Как показывает этот пример связываемые
       поля не имеют и не должны иметь одинаковые имена.
	   Отметим, что Paradox просто различает два поля Last	Name,  одно
       для таблицы Customer  и другое для таблицы Employee. Вы можете ис-
       пользовать оператор AS для присвоения (уникального) имени  каждому
       полю, как показано в примере 4-25.

	   Использование элементов "пример" с условиями выбора.
	   ----------------------------------------------------
	   Когда Вы используете "пример" для связывания таблиц, Вы можете до-
       бавить столько сколько хотите критериев выбора. Вы можете расположить
       условия в любой форме запроса, в то же время эта форма может быть свя-
       зана "примером" с остальными операторами запроса.
	   Как иллюстрирует пример 4-25, установка множественных критериев в
       форме запроса с нескольктми таблицами подобна работе с одной таблицей.
	   Запрос "или-или" к многим таблицам также подобен запросу к одной
       таблице. Вы можете использовать оператор OR, когда Вы хотите устано-
       вить альтернативные условия в одном поле, как показано в примере 4-26.
       "ИЛИ" в различных полях или более чем одно множество условий OR долж-
       ны вводиться на раздельных строках (Пример 4-27).
	   При вводе элементов "пример" убедитесь, что Вы связываете точные
       правильные) строки. Оператор "ИЛИ" (OR)  не может быть использован с
       "примером".

	   4-25. "И" условие в связанных таблицах.
	   ---------------------------------------
	   Предположим Вы хотите получить список имен покупателей, описание
       продуктов ии цены (представленные) для всех заказов поступивших:
	   - c июня 1, 1988г.;
	   - от покупателей с Западного побережья ( ip code>=90 000);
	   - количеством менее чем 5 единиц;
	   - которые стоят менее чем 300 000$.



			    Рис.


	   Форма запроса Emplyee  содержит оператор AS для того чтобы отли-
       чить имя поля этой таблицы Last Name  от поля Last Name	таблицы
       Customer. В противном случае второе появление будет помечено "Last
       Name-1" для того, чтобы избежать дублирования имен в таблице,см.при-
       мер 4-24.

	   4-26. Условие "ИЛИ" в одном поле со связанными таблицами.
	   ---------------------------------------------------------
	   Предположим Вам нужен список покупателей которые заказали либо
       robot-valet (Stock # 519), либо цифровые дедушкины часы (Stock # 558)
       либо и то и другое.



			     Рис.





	   Запрос Order связан с формой запроса Customer "примером"........
       Любая запись удовлетворяющая одному из условий, либо обоим появтся
       в таблице Answer.

	   4-27. Условие "ИЛИ" в разных полях со связанными таблицами.
	   ----------------------------------------------------------
	   Предположим Вы хотите в дополнение к списку покупателей, которые
       заказали robot-valet или часы, любого покупателя сделавшего заказ до
       1 мая 1987г.





			       Рис.


	   Первая строка формы запроса "Orders",которая выбирает покупате-
       лей,которые заказали либо robot-valet, либо цифровые дедушкины часы,
       либо и то и другое, связаны с Customer "примером" .........  Вторая
       строка, которая выбирает покупателя заказавшего до 5/1/87г., связана
       с Customer "примером" graccie. Обратите внимание что знак V (check
       mark) должен присутствовать на каждой строке.



	   4-28. Использование "примера" для связывания условий.
	   -----------------------------------------------------
	   В примере 4-26 приведены покупатели, которые заказали либо robot-
       valet, либо часы, либо и то и другое. Предположим Вы хотите напеча -
       тать только покупателей, которые заказали и robot-valet и часы.







			Рис.



	   В запросе Order  первая строка выбирает заказы на robot-valet,
       а вторая строка выбирает заказы на часы. Но обратите внимание, что
       один "пример", george, использован для соединения двух строк вместе.
       Элемент "пример" говорит, что один и тот же покупатель должен был
       заказать оба товара.  Использование  одного "примера"  на различных
       строках формы запроса преобразует запрос "ИЛИ" в запрос "И".Обычно
       один "пример" используется для связывания  результирующих рядов из
       Orders с соответствующими рядами в Customer. Обратите внимание, что
       когда Вы используете один пример на различных строках формы запроса,
       Вам необходимо пометить (cheek) только одну из них для отображения
       поля.
	   Это единственный случай, когда checkmerka (V) на различных стро-
       ках формы запроса могут быть различны. Вы не должны дублировать	V
       (checkmerk) в связывающих строках формы	запроса, если  Вы  сделаете
       это, Вы получите дополнительное поле в таблицу Answer.

	   Использование "примера" в условиях выбора.
	   ------------------------------------------
	   "Пример" имеет много других приложений,кроме связывания таблиц и
       строк в запросе. Вы можете также использовать элемент в критерии вы-
       бора, когда значение, которое Вы хотите использовать, отсортировано в
       таблице. "Пример" устанавливается для того, чтобы определить для Para-
       dox  значение для извлечения.
	   Вы можете использовать "пример" в операторе диапазона, шаблона,
       арифметическом выражении и в любом другом критерии выбора.



	   4-20. Использование "примера" для установки значения.
	   -----------------------------------------------------
	   Предположим Вы хотите напечатать всех служащих, которые имеют та-
       кую же работу как Christiansen. Вы могли бы просмотреть работу Chri-
       stiansena в таблицу Employee - или использовать "пример" и позволить
       Paradox-у сделать это для Вас. Первая строка в этом запросе извлекает
       запись Christiansen  из	Employee. Поле	 Position   соответствующее
       "Christiansen" (Seles Rep) представлено "примером" sob. Затем этот же
       "пример" используется в первой строке для извлечения всех записей  с
       этой работой.


	   4-30. Использование "примера" в операторе диапазона.
	   ---------------------------------------------------
	   Предположим Вам необходим список всех служащих, чья заработная
       плата выше чем у Christiansena. Вы можете использовать "пример"  с
       оператором >(больше чем).




			      Рис.



	   Как в "примере" 4-29  первая строка запроса извлекает запись
       Christiansen из Employee. Заработная плата Christiansena (20 000$)
       представлена "примером" money. Затем этот же "пример" используется
       на второй строке для извлечения всех записей со значением заработ-
       ной платы больше 20 000$.




	   4-31. Использование "примера" в выражениях с датой.
	   --------------------------------------------------
	   Предположим Вам необходим список всех служащих, нанятых за 90
       дней до найма Christiansena. Вы можете использовать "пример" для
       представления даты, когда Christiansen был принят на работу, ариф-
       метическое выражение для вычисления даты за 90 дней, и оператор
       < (меньше чем) для выбора необходимых Вам записей.





			    Рис.



	   Cнова первая строка запроса извлекает запись Christiansen
       из Employee. Дата найма Christiansena на работу (1/25/83) пред-
       ставлена примером hired. Затем тот же "пример" используется в ариф-
       метическом выражении (hired-90) для вычисления даты за 90 дней, и
       первая строка выбирает все записи с датой найма до этой даты.

	   4-32. Использование "примера" с оператором NOT.
	   -----------------------------------------------
	   Предположим, Вам нужен список всех покупателей, которые заказа-
       заказаали два или более различных продукта. Вам нужно будет исполь-
       зовать два "примера" в этом запросе к таблице Orders, один для пред-
       ставления единицы заказа и один для представления покупателя его за-
       казавшего.







			  Рис.


	  Первая строка формы Orders представляет запись заказа "пример"
      items установлен для заказанного продукта, в то время как "пример"
      george используется снова длоя выбора имени покупателя из таблицы
      Customer.

	  Соединение всех записей в таблице (внешние соединения).
	  ------------------------------------------------------
	  Ранее Вы уже видели несколько запросов, которые использовали
      "пример" для связывания таблиц вместе. Эти запросы применяются для
      извлечения всех записей из одной таблицы, которые соответствуют за-
      писям другой таблицы. Так запрос в примере 4-33, показывает все за-
      казы вместе с покупателями, сделавшими их. Благодаря сущности "при-
      мера", таблица Answer для этого запроса включает данные только тех
      покупателей которые уже сделали заказы. Это так потому, что "пример"
      говорит Paradox-у искать совпадающие значения в Orders и Customer
      для включения их в Answer.

	  4-33. Соединение Заказчика и заказов с помощью "примера".
	  --------------------------------------------------------
	  Предположим, Вам необходим список всех заказов и Заказчиков кото-
      рые их сделали."Пример" в общем поле Cust ID,который соединяет Custo-
      mer с Orders, говорит  Paradox-у, что  необходимо  найти совпадающие
      значения в двух таблицах. Так как существуют покупатели, которые ни-
      чего не заказывали, то соответствующих им записей нет в таблице Orders
      и их имена не включаются в Answer. Этот вид запроса называется исклю-
      чающее соединение, так как оно исключает несовпадающие записи.

	  Оператор включения.
	  ------------------
	  Если Вам нужна таблица Answer, которая включает даже тех Заказчи-
      ков которые ничего не заказали,Вы можете использовать "оператор вклю-
      чения" Paradox-а, чтобы установить включающую связь между двумя таб-
      лицами. В примере 4-33 включающая связь для Customer будет говорить
      Paradox-у о включении всех записей из Customer в Answer, независимо
      от того есть ли совпадения в таблицу Orders.
	  Чтобы включить все записи покупателей в Answer, просто прибавьте
      оператор включения ! (восклицательный знак) справа от "примера" 1234
      в примере 4-34. Оператор включенеия всегда следует за "примером", без
      пробела между ними.
	   "!"  в форме запроса для Customer превращает ее в "master"(хо -
      зяин) таблицу. Это означает, что Paradox извлекаетт все записи в поле
      Cust ID до связывания любой из них, чтобы записать в Answer. Orders,
      тем временем, служит ссылочной таблицуй из которой извлекаются только
      совпадающие записи.
	  При выполнении включающего соединения Paradox извлекает полное мно-
      жество записей из "master"(хозяин) таблицы до сбора других записей, оп-
      ределенных связью. В этом случае Вы можете быть уверены, что все запи-
      си таблицы "master" включаются в таблицу Answer.
	  Запрос с включающей связью иногда называется внешней связью специа-
      листами по базам данных. См. "Дополнительная расширенная информация  о
      запросах" ниже в этой главе для получения дополнительной информации о
      включающих связях в запросах.
	  Условия выбора с включающими связями.
	  -------------------------------------
	  Вы можете установить условия выбора для таблиц в запросе, которые
      определяют включающие связи, точно также как для любого другого зап -
      роса. Это позволяет Вам выделить либо множество "master" записей,либо
      группу необходимых записей соответствующих условиям выбора.
	  Когда Paradox обрабатывает включающие записи, он сначала выбирает
      "master" записи по условиям выбора до того как связать их с ссылочной
      таблицей или выполнить другие операции запроса. Этот один из несколь-
      ких случаев в Paradox-е, когда Вам необходимо знать порядок выполне -
      ния запроса. Примеры 4-35 и 4-36 иллюстрируют как порядок выполнения
      влияет на результат.

	  4-34. Извлечение всех записей в связанной таблице.
	  -------------------------------------------------
	  Предположим, что Вам необходим список всех покупателей, каждый из
      которых что-нибудь заказал.






			     Рис.

	  Этот запрос идентичен примеру 4-33 кроме включающего оператора в
      поле Cust ID таблицы Customer. Оператор "!" позволяет Вам включить ин-
      формацию пропущенную в первом запросе: покупателей, которые ничего не
      заказали.
	  Другой способ осмысления оператора включения это утверждение, что
      он заставляет Paradox "предполагать" что каждая запись в его таблице
      ( в данном случае Customer) имеет соответствующие записи в другой (or-
      ders). Если оказывается, что в действительности нет совпадения в табли-







	ВЫЧИСЛЕНИЯ.
	----------
	Вы можете не ограничиваться вопросами о значениях в Ваших таб-
    лицах, но также использовать ключевое слово Calc, чтобы выполнить вы-
    числения, основанные на этих значениях.
	Вы можете использовать Calc  в :
	- создании и вычислении математических выражений;
	- комбинировании значений из 2-х и более полей и комбинировании
	  значений с константами.
	 Для примера, с Calc Вы можете вычислить общую сумму для каждого
     заказа в Вашей таблице "заказы" (Orders). Подобно маркеру пометка
     Сalc образует поля в таблице Answer. Их значения вычисляются по зна-
     чениям в таблицах, включенных в запрос. По умолчанию, имена вычисляе-
     мых полей основываются на выполняемых вычислениях.
	 Вы можете использовать оператор AS чтобы переименовать их.
     Обычно каждое вычисленное табличное поле располагается в конце регу-
     лярных полей в таблице Answer.
	 В дополнение к вычислению новых полей ля отдельных записей, Вы мо-
     жете также использовать Calc, чтобы подсчитать количество записей и вы-
     числить суммы, средние, минимумы и максимумы групп записей. Для приме-
     ра, Вы можете вычислить среднее ограничение кредита Заказчиков из каж-
     дого штата в Вашей таблице Customer (Заказчик). Для большей информиро-
     ванности об этих статистических  вычислениях смотрите  "Вычисления на
     группах записей" ниже в этой главе.

	 Вычисления на отдельных записях.
	 -------------------------------
	 Предположим Вы хотите знать величину каждого заказа в таблице Or-
    ders (заказы) примера. Так как таблица Orders (заказы) не содержит этой
    информации, Вы можете соблазниться добавить новое поле для нее. Вы може-
    те тогда ввести величину по каждому заказу путем умножения заказанного
    количества на цену каждого вида продукции из таблицы Products (продукты).
	Paradox может сохранить рузельтаты всех этих вычислений. Когда Вы
    используете Calc  с отдельными записями, Paradox  добавляет вычисленные
    или производные поля в таблицу Answer и вычисляет соответствующее значе-
    ние для каждой записи.
	Вы можете также использовать Calc, чтобы составить цену, увеличенную
    для всех видов продуктов в таблице Products (прродукты), увеличивая теку-
    щую цену на 10%. Или, при включении критерия выбора в Вашем запросе, Вы
    можете отобразить увеличенную цену только для продуктов, которые имеют те-
    кущую цену ниже 100 000$.

	4.37.Вычисление значений.
	------------------------
	Этот запрос показывает Вам как найти такой список цен всех продуктов
    в таблицу Products (продукты), если текущая цена была увеличена на 7%.

    Products -----Stock#-----Description----Quant----Price---------   Оператор
	       :	  :		 :	  :Money,Сalc money : умножения
	       :	  :		 :	  :		    :*
				 Множество,определяемое  Calc выражение.Элемент
				 элементом примера.		       примера
								  в выражении.

    ---------------------------------------  Имя поля, определенное
    :	       :	   :		  :  Paradox.
    :	       :	   :		  :

			      Вычисленное поле.


	Укажем, что элемент примера money (деньги) является множеством в поле.
    Цена, которая представляет список цен всех видов продукции.Затем он исполь-
    зуется в формуле money * 1.07. Как обычно, два входа в одном поле разде -
    ляются запятой. Для каждой записи, формула умножает исходный список цен на
    1.07. Так как Calc всегда образует новое поле в Answer, здесь не требуется
    помечать для выдачи его; вычисленное поле отобразится автоматически. Кроме
    того, Вам не требуется размещать Calc выражение с поле Price (цена); оно
    может быть где угодно.




	 4.39. Комбинированные буквенно-цифровые значения.
	 -------------------------------------------------
	 Предположим, вы хотите собрать вместе три адресных поля в табл.
     Заказчик - Город, Штат и Код - в одно новое адресное поле для
     более легких ссылок.
     --------------------------------------------------------------------







			      Рис.





     --------------------------------------------------------------------

     В этой формуле С,S и Z - элементы примера представляющие город,
     штат и код соответственно. Выражение включает  запятые и пробелы
     которые  разделяют  части	адреса	в  вычисленном поле. Необходимо
     помнить что эти знаки заключены в двойные кавычки, так как они со-
     держат пробелы и запятые которые в других случаях интерпритируются
     по другому.
			       -78-



	ОПЕРАЦИИ
	--------

     insert   - ввести новые записи с заданными значениями полей;
     delete   - удалить выбранные записи из таблицы;
     changeto - изменить значения в выбранных записях;
     find     - выделить выбранные записи в таблице.

	 Слова insert,delete и find джолжны быть размещены в крайнем
     левом поле запросной формы. Слово	changeto  может быть размещено
     в любом поле, но не в крайнем левом.
	 Вы можете комбинировать различные операции в одном предложении
     запроса при желании. Если Вы сделаете это, то все операции delete
     выполняются первыми, следующими - changeto и, наконец, - все insert.

			 INSERT
	 Слово	insert позволяет Вам добавлять новые записи в таблицу на
     основе запроса. Предположим, Вы приобрели новый почтовый список  и
     использовали Tools/Export-Import чтобы  передать в Парадокс.
     Теперь Вы можете добавить имена и адреса в Вашу таблицу Customer (За-
     казчик), но Вы не можете использовать Tools/More/Add,так  как  новая
     таблица имеет структуру, отличную от структуры таблицы Customer (За-
     казчик). Вы, конечно, не захотите изменять структуру новой таблицы !
     Вместо этого Вы можете использовать оператор insert , чтобы ввести
     новую информацию в соответствующие поля таблицы Customer (Заказчик).
     Insert запрос обычно выполняется с использованием элементов примера.
     Чтобы задать  insert запрос  Вы заполняете запросную форму для :
			  > одной или более таблиц-источников, из которых
			    будет взята информация;
			  > таблицы - цели, в которую будут добавляться
			    записи;
	 В запросных  формах  для  таблиц-источников  используются
      элементы	примера,  чтобы  указать вводимую информацию. Вы можете
      также  ввести  критерии  выбора,	если  хотите   выбрать	 только
      некоторые из записей для ввода.
	  В запросной форме для таблицы-цели, наберите insert  в крайнем
      левом  поле.  В  других  полях  наберите	выражения, представляющие
      значения, которые Вы хотите ввести. Эти выражения будут обычно содер-
      жать элементы примера, которые использовались в таблицах-источниках,
      но они могут также содержать константы. Напомним также, что в отличии
      от  других видов запросов, Вы набираете в запросной форме ввода вы-
      ражения, определяющие новые значения; они не выбирают записи. Поля ,
      которые Вы не вводите в выражения, будут автоматически пустыми.
	  Когда Вы вычислите insert-запрос, записи будут добавлены в табли-
      цу-цель; таблица-источник не будет изменяться. Вы не должны  видеть
      ввода, так как таблица-цель не отображается,когда Вы выполнили запрос
      ( Вы можете отобразить ее, если захотите). Вы будете видеть временную
      таблицу  называемую INSERTED, которая содержит записи, которые были
      введены. Вы можете  использовать	эту  таблицу  с  ключевым  словом
      delete или опцию Tools/More/Subtrakt, чтобы удалить введенное, если
      пожелаете.  Напомним, что таблица INSERTED будет переписываться при
      выполнении каждого следующего insert-запроса и стираться,  когда	Вы
      выйдете из Парадокса.

			   -79-

	  4-40. Ввод записей.
	       --------------
	  Предположим, Вы имеете таблицу называемую Usmail (Адрес США),
       которая	имеет  два поля: Name (Имя) и Address (Адрес).В Usmail Вы
       хотите ввести записи Ваших американских заказчиков из таблицы при-
       мера CUSTOMER (ЗАКАЗЧИК).

	   Значения поля NAME (имя) должны составляться из значений полей
       INIT (первая буква имени) и Last Name (фамилия) в Customer(Заказчик),
       в то время как Address (адрес) составляется из City (город), State
       (штат) и Zip (код).





			 Рис.

	   Запросная форма Customer (Заказчик) использует условия выбора
       американских заказчиков (для тех, чье поле Country (страна) явля-
       ется пустым), и элементы примера, чтобы выделить составляющие эле-
       менты имени и адреса. Такие же примеры , с алфавитно-цифровыми кон-
       стантами +, и insert - оператором используются в запросной форме
       Usmail (адреса Заказчиков США), чтобы распределить информацию по
       соответствующим полям. Напомним, что на рисунке показана результи-
       рующая таблица Usmail, предположим , что она была отображена после
       вычисления запроса. Мы не показываем  Inseted таблицу, потому что
       она такая же.

				- 80 -

	   Удаление (Delete).
	   -----------------
	   Ключевое слово "Delete" позволяет Вам удалить выбранные записи
       из таблицы. Несмотря на то, что Вы можете использовать опцию Modify/
       Edit, чтобы удалить записи, "Delete" является более быстрым, когда
       удаляемые записи подобны достаточно, чтобы удовлетворить множеству
       условий запроса. "Delete" будет удалять только полные записи, но не
       отдельные значения внутри них. ( Вы можете использовать "changeto"
       чтобы изменить отдельные значения на пустые).
	  Чтобы сформировать запрос удаления, наберите "Delete" в крайнем
       левом столбце запросной формы для таблицы, содержащей удаляемые за-
       писи. В других столбцах на других связанных запросных формах введите
       условия выбора записи для удаления. Если Вы не вводите условий, все
       записи будут удаляться из таблицы.( Несмотря на это, они могут быть
       еще восстановлены, если Вы измените свое решение).
	  Когда Вы вычисляете запрос удаления, записи удаляются из таблицы.
       Вы не можете посмотреть изменяемую таблицу если она не была вызвана
       на экран, когда Вы вычислили запрос ( Вы можете отобразить ее, если
       пожелаете). Вы будете видеть временную таблицу, называемую "deleted",
       которая содержит удаленные записи. Таблица "deleted" является сетью
       безопасности, в случае, если Вы пожелаете восстановить обратно данные.
       Вы можете использовать ее совместно с операцией "insert" или опцией
       "tools More/add", чтобы восстановить удаленные записи, если Вы поже -
       лаете.
	  Помните, что таблица "deleted" будет переписываться сразу за вы -
       числением запроса на удаление и стираться, когда Вы выйдите из Paradox.
       В этот момент все удаленные записи будут потеряны. Если Вы захотите сох-
       ранить их, используйте опцию "tools/rename", чтобы переименовать табли-
       цу "deleted" (таблица удаленных записей по запросу).
	  Перед тем, как Вы закончите работу, или выполните другой запрос на
       удаление.

	  4-41. Удаление записи.
	  -----------------------
	  Предположим, что Вы хотите удалить из таблицы Orders заказы, разме-
       щенные до 1 января 1988г.





				Рис.



	  Запросная форма использует условия запроса, чтобы выбрать заказы,
       размещенные до 1 января 1988г. Ключевое слово "delete" удаляет из
       таблицы Orders, но они есть (временно) еще в таблице "deleted".Напом-
       ним, что рис.  показывает измененную таблицу Orders, предполагая, что
       она была отображена, когда вычислился запрос.


				 - 81 -

	   Changeto (изменить).
	   -------------------
	   Ключевое слово "changeto" позволет Вам изменить значение в таблице,
       основываясь на условие в запросе. Она очень похожа на общую для боль-
       шинства словарных процессоров способность исследовать и изменять,  но
       "changeto" является даже более мощной, потому что она понимает выраже-
       ния. "Сhangeto" является особенно полезной, когда Вы хотите изменить
       несколько значений одинаковым способом. Чтобы изменить записи, наберите
       ключевое слово "changeto" в поле, которое будет изменяться. Затем новое
       значение, или выражение, представляющее его. Обычно (если Вы не хотите
       сделать такое же изменение во всех записях) Вы должны будете включить
       условия выбора для всех значений, которые будут изменяться или элемент
       примера, представляющий его, чтобы использовать в "changeto" выражение.
       Вы можете также включить условия выбора в другие поля.
	   Когда Вы выполняете запрос изменения, записи в запросной таблице бу-
       дут изменяться. Вы не должны видеть изменения если не отобразили запрос-
       ную таблицу, когда вычислили запрос, (конечно, Вы можете отобразить ее,
       если пожелаете).
	   Вы будете видеть временную таблицу, называемую "changeto", которая
       содержит копии записей до того как они были изменены. Она будет помогать
       Вам проверять, чтобы только те записи, которые Вы хотите изменить, были
       в действительности изменены.
       Если существует проблема, Вы можете удалить измененные записи из запрос-
       ной таблицы и использовать опцию  TOOLS/MORE/ADD, чтобы добавить исход-
       ные неизмененные записи из таблицы "changeto", обратно в запросную таб-
       лицу.
	   Напомним, что "changeto" таблица будет переписываться как только Вы
       выполните запросные изменения и удалится как только Вы покинете Paradox.
       В этот момент копии исходных неизмененных записей будут потеряны. Если
       Вы захотите сохранить их, используйте опцию TOOLS/RENAME, чтобы переиме-
       новать "changeto" таблицу перед тем как Вы покинете Paradox, или выпол -
       ните другой запрос на изменение.

	   4-42. Изменение записи.
	   -----------------------
	   Предположим, Вы изменяете  заголовок  Вашего  персонала  по продаже
       Sales Rep.(стажер) на Customer Agent (агент Заказчика). Вы хотите отобра-
       зить это изменение в таблице Employce TABLE. В поле Position (положение)
       значения Sales Rep выбирает записи представителей по продаже. "Changeto"
       выражение заменяет предыдущее значение на Customer Agent.
	   Напомним, что рис.	показывает измененную таблицу Employce, предпо-
       лагая, что она была отображена после выполнения запроса.













			  -87-


	  4.48. Выбор записей, основанный на групповом среднем.
		----------------------------------------------
	  Предположим, Вы хотите знать состояния, в которых средний  кре-
     дит ограничен меньше  $75.000.

		    отмечается		    state	Credit
     ------------------------------------------------------------
     ORDERS |		       |	 |	   | AYERAGE< 75.000 |		     |
	    |		       |	 |	   |		     |
	    |		       |	 |	   |		     |



	  Если	Вы желаете исключить дублирование значений кредитов - что
     обычно не используется в практике - то в поле Credit надо набирать:

		     AVERAGE VNIQVE < 75.000


	  4.49. Выбор записей, основанный на групповом максимуме.
		------------------------------------------------

	  Предположим, Вы хотите знать состояния, в которых наибольший
     кредит ограничен не более чем $150.000.

		  отметить	   State		 credit
-------------------------------------------------------------------------------
      ORDERS :		       :	  :	    : max.<=150.000   :
	     :		       :	  :	    :		      :
	     :		       :	  :	    :		      :














				  -88-


	   Вы можете также использовать пример элементов для формирования
     полей для различных таблиц ..... ( далее неразборчиво  )






	   4.50. Выбор записей, основанный на групповом минимуме.
		 ------------------------------------------------

	   Предположим, Вы хотите знать продукты, которые расположены по
     порядку после 01.03.88г.
     Даты расположены в таблице ORDERS, а  наименования продуктов в таблице
     PRODUCT.
     Вы можете связать две таблицы посредством их общего поля.
			       Stock #			    Data
     -----------------------------------------------------------------------
      ORDERS :		      : xxxx	  :	      : min>01.03.88	:
	     :		      : 	  :	      : 		:
	     :		      : 	  :	      : 		:


	       Stok #	 Discription
     -----------------------------------------------------------------------
     PRODUCT : xxxx	:		  :				:
	     :		:		  :				:
	     :		:		  :				:
			  отмечается групповое поле
			  для каждого продукта.

      Все это можно использовать в предыдущих случаях, если есть общее поле.











				 -89-


	   Оператор ONL4.
	   --------------

	   Оператор ONL4 может использоваться для выполнения вычислений.
     Однако его работа во многом похожа на выбор групп, которые записывают
     все содержащиеся в них одинаковые значения. Например, если Вы хотите
     найти, какие цены имеют порядок только портативной машинки, Вы можете
     использовать оператор ONL4 в Вашем условии выбора.

	   4.51. Выбор множеств, содержащих только одно значение.
		 -----------------------------------------------

	   Предположим, Вы хотите знать, какие ЗАКАЗЧИКИ  имеют заказы только
     robot-oralue (Stack #519).

	      Cust ID	    Stock #
     ------------------------------------------------------------------------
     ORDERS :		 : ONL4 519   : 		  :		  :
	    :		 :	      : 		  :		  :
	    :		 :	      : 		  :		  :
	      отметить
	      групповое
	      поле "цена"


      Инструментом Paradox отметьте значения Сust ID, которые Вы хотите
      сгруппировать по ценам.
      Наберите ONL4 519 в поле Stock #. Это означает, что Вы хотите посмот-
      реть множество значений заказанных каждым ЗАКАЗЧИКОМ для какой-то оп-
      ределенной цены и выбрать те, которые включают только robot-valet.
      Если Вы наберете 519 без ONL4, Paradox покажет Вам все цены, которые
      тмеют порядок robot-valet, включая те, которые имеют другой порядок.





				 -90-



	   Вычисление гpупп записей.
	   ------------------------
	   В дополнение к вычислениям новых полей для каждой записи,
      Вы можете также вычислить общую статистику и сpеднее значение для
      гpупп записей. Напpимеp, Вы хотите знать :
      - сколько каждый пpодукт имеет заказов;
      - общее количество пpоданных каждому Заказчику;
      - сколько Заказчиков живет в каждом штате;
      - сpедний оклад служащих по каждой специальности в вашей контоpе;
      - наибольший и наименьший кpедит Заказчиков.
      Вы можете использовать суммаpный опеpатоp, показанный в таблице 1-2
      в этой главе с опеpатоpом CALC для подсчета сумм сpеднего значения и
      нахождения min и max значения в полях вашей таблицы. Для того, чтобы
      сделать это, набеpите CALC и поставьте суммаpный опеpатоp в поле, кото-
      pое Вы желаете вычислить. Напpимеp, если Вы хотите вычислить суммаpное
      число заказов, Вы должны будете набpать CALC SUM в поле Qvant таблицы
      Orders в запpосной фоpме.

	   4.52. Вычисления гpупп.
		------------------
	   Пpедположим, Вы хотите знать общее количество каждого пpодукта,
      котоpое будет пpодано. Эта инфоpмация содеpжится в таблице Orders.
      Вы можете использовать опеpатоp CALC SUM, для того, чтобы сделать эти
      вычисления.
						Qvant
      ----------------------------------------------------------------------
      ORDERS :		     :	Stock #      :	CALC SUM	 :
	     :		     :		     :			 :
	     :		     :		     :			 :
			      отметьте гpупповое
			      поле

      Отметьте поле Stock # инстpументом Paradox, означающее, что заказы для
      каждого Snock должны быть сгpуппиpованы вместе.
      CALC CVM в поле Qvant необходим для вычисления суммы значений в этом
      поле.
	   Заметим, что появляется новое поле в таблице ANSWER SVM of Qvant.
      Вы должны использовать   QS  опеpатоp для пеpеименования этого   поля.



	   4.53. Гpуппы, базиpующиеся на более чем одном поле.
		 ---------------------------------------------
	   Пpедположим, что Вы хотите знать общее количество пpодукта,котоpое
      будет пpодано каждым пpодавцом. Опеpатоp CALC SUM тот же самый, как и в
      пpимеpе 4, 57, но в то же вpемя как поле Stock #, так и поле Emp # отме-
      чаются и вычисленное поле пеpеименовывается.
			  Stock #				  Emp #
      ----------------------------------------------------------------------
      ORDERS  : 	:	  : CALC SUM as suller's total :
	      : 	:	  :			       :
	      : 	:	  :			       :

      Отметьте Stock # и Emp # для гpуппы заказов, имеющихся в обоих этих
      полях. Опеpатоp QS  очищает содеpжимое вычисленного поля.







				 -91-



	   Обычно, когда используется CALC, новое поле содеpжащее вычисления,
      добавляется в таблицу ANSWER.		   вычисляется для каждого
      поля ANSWER. Но когда Вы используете CALC с суммаpным опеpатоpом, Вы
      пpоизводите вычисления для гpуппы записей. Пpавда, когда Вы нажимаете
      F6 для выбоpа поля, Вы действительно фоpмиpуете гpуппы, в котоpых пpо-
      изводятся вычисления. Если Вы не сделали отметку вычисления будут выпол-
      нены над всеми записями в таблице одной гpуппы. Если Вы pасположите Маp-
      кеp в том же самом поле, что и суммаpный опеpатоp, Вы можете не получить
      pезультаты, котоpые Вы ожидаете.
      Подобным обpазом когда Вы отмечаете условия для выбоpа записей Вы выби -
      pаете гpуппы для включения в таблицу ANSWER.
	   Последняя колонка в таблице 4, 2 показывает отсутствующие гpуппиpо-
      вания для опеpатоpов агрегатирования - pаботают ли они над всеми значе-
      ниями  поле, или над одним уникальным, исключая дублиpующий. Вы можете
      не пpинимать во внимание упущения, посpедством добавления слова all-
      или unigue к суммаpному опеpатоpу, как показано в пpимеpе 4,57.


	   4.54. Пеpечисления целой гpуппы.
		 -------------------------
	   Пpедположим, Вы хотите знать общее количество пpоданных пpодуктов,
      не пpинимая во внимание какие они, и кто Заказчик. Используйте CALC SUM
      также как в пpимеpах 4.52 и 4,53, но в тоже вpемя не отмечая поле, потому
      что вычисления пpоизводятся в одной гpуппе над всеми записями.




	   4.55. Выбоp и отобpажение агрегатированных значений.
		 ----------------------------------------------
	   Пpедположим, Вы хотите знать, какие пpодукты были заказаны после
      маpта 1988 года, как в пpимеpе 4.50. Но в этом случае Вы хотите знать
      действительные даты их заказов.

			   Stock #
      ---------------------------------------------------------------------
      ORDERS  : 	 : XXXX 	: min>3/1/88, calc min	 :
	      : 	 :		:			 :
					 вычисление и отобpажение
					 дат заказов

		 Stock #      Description
      ---------------------------------------------------------------------
      Product  : XXXX	   :			      :






				 -92-


	   4.56. Вычисления уникальных значений.
		 ------------------------------
	   Предположим, Вы хотиту знать число заказчиков, которые имеют
     заказы. Для того, чтобы вычислить это, Вы можете использовать опера-
     тор СALC COUNT в поле Cust ID запросной формы.

		   Cust ID
     --------------------------------------------------------------------
     ORDERS  : CALC COUNT	  :
	     :			  :
	     :			  :

	       COUNT of Cust ID
     ---------------------------------------------------------------------
     ANSWER  :			  :
	     :			  :
	     :			  :
		      дубликаты игнорируются



	   4.57. Вычисления всех значений.
		 -------------------------

	   Предположим, Вы хотите знать общее количество заказов, имеюших-
     ся у заказчиков. Также используется CALC COUNT, но с добавлением ALL.
     (тоже что и предыдущий пример, но дубликаты не удаляются).

     -----------------------------------------------------------------------
		 : CALC COUNT ALL   :
		 :		    :
		 :		    :





				-93-


	   Работа с множествами записей.
	   ----------------------------

	   Множество, это вид группы - определенной группы записей которая
      предназначена для Вашего будущего запроса. Например, Вы можете исполь-
      зовать множество ключевых слов Paradox для определения множества всех
      книг в серии Investment, или всех заказчиков из Калифорнии. Поскольку
      Вы определяете множество в запросе, Вы можете сравнивать его с другими
      записями или группами записей. Существует два вида сравнения, которое
      Вы можете сделать :
	 1. Вы можете сравнить одну группу записей с другой. Например, Вы мо-
      жете спросить:
	 - какие заказчики купили только книги из Investment серии ?
	 - какие заказчики купили все книги в серии ?
	 - какие заказчики не приобрели ни одного продукта, который продан
      более чем за $100.000 ?
	 - какие продукты заказывались только покупателями с Запада ?
	 - и т.д. и т.п.  вопросы ...
	 Это множество сравнений использует специальную группу операторов
      запроса, включая :
	 ONL4, NO, EVERY, EXCTLY.
	 2. Поскольку множество есть вид группы, Вы можете также использо-
      вать суммарные операторы для подсчета суммы, количества, среднего
      числа,min и max этих значений. Затем Вы можете сравнить результат со
      значениями других записей. Например, какие кредиты заказчиков ограни-
      чены более чем ы 2 раза от среднего лимита кредита ?
      Кто имеет заказы продуктов, которые стоят по крайней мере на 25%, чем
      средняя цена всех продуктов ?
      Имеются ли заказчики из других штатов, заказавшие больше книг, чем
      заказчики из Техаса и т.д., и т.п. (См.табл.4-2 выше в этой главе, для
      полного списка суммирующих операторов.


			     -94-

	   Множество QUERLES  ?
	   --------------------
	   В примере 4-58 иллюстрируется, каждое из множества запросов, имеющих
      следующие компаненты:
      - одну или более строк, которые определяют множество;
      - одну или более строк, отображающие другие записи, которые имеют
	определенное сравнение с множеством;
      - одну или более сведенных строк, которые отображают отношение
	информации.
	   Когда Вы конструируете или просматриваете множество запросов,
      попытайтесь посмотреть их в терминах основных компонент, таких как
      множество определений,множество сравнений и любые дополнительные связки.
	   Вы найдете множество запросов понятным и ясным и более полезным если
      Вы сохраните эту структуру в уме.






	   4.60. Двухсторонний выбор.
		 --------------------
	   Предположим, что Вы хотите узнать, какие книги стоят меньше средней
      стоимости книг в Manners (условной) серии.


	    Vol      Title	Book	  Puice
	   -------------------------------------------------
       Т1    -	  :	     :	       :   <avenage puice   :
		  :	     :	       :		    :
						   эта строка выбирает книги по
						   цене меньшей, чем средняя
	     Vol      Subguonp
	   -----------------------------
       Т2     -   :   Manneus	       :       эти строки выбирают Manneus
		  :		       :       книги и их стоимость


	 Answer       Book	 Puice
       -----------------------------------
	   1	  : Forks     :  29.95
	   2	  : Hint      :  29.95
	   3	  :  -	      :
	   4	  :  -	      :



	   Поскольку Вы интересуетесь как Manneus книгами. так и их стоимостью,
       Вы должны ввести строки в Subguonp и Vols при выборе. Вторая строка  в
       Vols запросе селектирует книги стоимостью меньшей, чем средняя устано-
       вочная  цена.
	   Если Вы теперь хотите знать, кто запросил выбранные книги, исполь-
       зуйте пример элементов, связывая boorond  и customeu (покупателей)  в
       Вашем запросе.

	T1
	T2

	   Bookord	    Customeu	      Date
       ---------------------------------------------------
		     :			 :
		     :			 :
		       Эта строка определяет, кто запросил
		       выбранные книги.


	   Customer	    Cust I D	    Last Name
       ---------------------------------------------------
		     :			 :
		     :			 :
					  Эта строка показывает имена
					  покупателей.


	  ANSWER      Book	Puice	  Last Name
       ---------------------------------------------------
	    1	  : Forks   :  29.95   : Aberdeen
	    2	  :	    :	       :




	       Операция сравнения.
	       ------------------

	    Один из путей сравнения групп записей был показан в 4-58 и
       4-59. Вы видели, как можно осуществлять поиск книг Onlu (только)
       Manneus серии или no (не) Investment серии.
       Onlu  и no являются двумя из 4-х операторов сравнения, которые Вы
       можете использовать для сортировки.
	    Вы используете "Checmarks" (птичка) для выбора групп записей
       для сравнения.

	    T. 4-3. Операторы сравнения.
		    -------------------
	Оператор      Функция		     Пример
       --------------------------------------------------------------------
	Onlu	  : Значения в группе,	: Кто из покупателей заказывал
	(только)  : содержащие только	: только одну книгу в Tuave l
		  : члены в выборе.	: серии.
	No	  : Значения не входя-	: Кто из пациентов Wand (палата)
	(не)	  : щие в группу выбора.: 12 не имеет любые симптомы,
		  :			: выявленные у пациентов Палаты 6.
	Everu	  : Включить в группу	: Кто из студентов взял все курсы
	(каждый)  : все значения в вы-	: лекций, требуемые для химии.
		  : боре.		:
	Exactly   : Значения в группе	: Кто из покупателей заказывал
	(точно)   : точно соответствую- : книги в Tuavel серии 4 и не
		  : щие членам в выборе.: иные.
		  : (комбинация Only и	:
		  : every )		:



	     4-61.

	     Представим, что Вы хотите узнать данные по Coue


       Subgroop--------- Vol----------- Subgroop ---------
       Set	   :		 :  Coue
		   :		 :

				   Выбор всех книг в Coue серии.


	BOOKORD  ------ Cust------ Date ----Item ---- Vol-----
		   :	       :	 :	  : every     :
		   :	       :	 :	  :	      :
		    Отмеченные			  Каждый оператор селекции
		    группы			  групп, включающий запросы
						  для каждого члена в выборе.


	SVSTOMER------- Cust I D -------Last Name-------
		   :		    :
		   :		    :
				      Подсоединение таблицы покупателей
				      с именами покупателей.


	ANSWER -------- Cust -------  Last Name ---------
	   1	   :	2579	:    Chauar	     :
	   2	   :	3120	:		     :
	   3	   :	4435	:		     :





	    Определение ключевого слова SET идентифицирует выбор книг в Coue
       серии Every оператор Paradox просматривает книги, заказанные каждым по-
       купателем и выбирает те, которые включены оператором Every в значение
       выбора. Покупатели, которые имеют также заказы из других серий должны
       также появляться в ответе.

	    4-62. Селектирование групп путем Exactly Match.
		 ------------------------------------------
	    Представим, что Вы хотите найти покупателей, которые  заказали
       каждое значение в Coue серии, но не в других сериях.

       BOOKORD---------- Cust .......	Vol ---------
		   :		 :   exactly	       Оператор Exectly
		   :		 :		       селекции групп, кото-
		   :		 :		       рый включает заказы для
						       каждого члена в выборе.

       CUSTOMER -------- Cust ------- Last Name ......
		   :		 :
		   :		 :

       ANSWER ---------- Cust ------- Last Name
		   :	3120	 :
		   :		 :


	    Этот запрос является  идентичным примеру 4-63. Тз этого следует,
       что every оператор можно заменить оператором Exactly. Этот вопрос также
       селектирует покупателей, которые заказали все книги в серии Coue, но не
       включает тех, кто заказал книги в других сериях. Оператор Exactly эффек-
       тивен в комбинации операторов Only и Eveny.


	    4-63. The Groupby Оператор.
		  ---------------------
	    "Птичка" на произвольной строке представляется путем нажатия:

			-------    ------
			:Shift :   : F6  :   Groupby
			-------    ------

	     Предназначен для 2-х целей :
	- группирования записей через переменное в поле;
	- введения поля в таблицу "ANSWER".


					 ------  ----
	     4-64. Использование Groupby  Shift   F6 .
		   --------------------- ------  ----
	     Представим, что Вы хотите узнать, кто заказал все книги в Coue
       серии, как в пр. 4-61, но Вы хотите показать только имя покупателя без
       номеров.


       BOOKORD--------- Сust -------  ........-- Vol ---
		  : G  -	    :	     :
		  :		    :	     :

		    Нажмите  Shift   F6   для введения
		    оператора Groupby.

	CUSTOMER------- Cust I D ---- Last Name ......	 Vol
		  :	 -	  :			 eveuy
		  :		  :

	ANSWER	------- Last Name ----
	   1	  :   chavel	      : Записи сгруппированы по покупателям,
	   2	  :		      : но их номера не представляются в
	   3	  :		      : ANSWER.



	      4-65. Группирование по покупателям.
		    ----------------------------
	     Представим, что Вы хотите узнать сколько продукции Luxuny Gifts
	закуплено только покупателями с Запада (zip коды 70000 или выше).
	Вы хотите записать продукцию через ее описание, но не указывать номер.


	CUSTOMER--- ......... ---- zip ------
		   :	      : >=70000      : Эта строка селектирует
		   :	      : 	     : покупателей с Запада.

	ORPERS----- ......... ---- Cust I D ----- Stock ---
		   :	      : only	     :	  6	   :
		   :	      : 	     :		   :

			       Эта строка селектирует
			       продукцию, которая имеется
			       только в запросе.

	PRODUCTS------Stock ------ Discgiption ------........
		   :	       :		  :
		   :	       :		  :

	ANSWER ------- Discgiption-------------
	   1	   : Digital guandfatben clock : Записи сгруппированы по роду,
	   2	   :			       : но род членов не появился в
	   3	   :			       : ANSWER


	    В предыдущей главе показано, как сравнимы группы записей в выборе.
       Вы можете также сравнить записи суммарных величин в выборе.
	    Когда Вы это делаете, Вы выбираете обычным путем. В строке, которая
       селектирует записи сравнением, однако, Вы используете суммарный оператор
       (см.табл.4-3). Если Вы захотите, Вы сможете ставить суммарный оператор в
       арифметическом выражении.





	    4-66.

	    Представим, что Вы хотите узнать кто использует меньше денег чем
       нижняя продажная стоимость.


       EMPLOYEES---- I D ---- Last Name--- Position---....---Sulary--
		 :	  :		: Sales      :	  :   < min - :Рента в
		 :	  :		:	     :	  :	      :строке
								       опреде-
       ANSWER------- Last Name ------ Salauy--------		       ляющая
	  1	 :  Lee 	  : 1500000	:		       нижнюю
	  2	 :		  :		:		       плату.
						    Оператор минимума вычис-
						    ляющий нижнюю продажную
						    стоимость.






	     4-67. Приведение записей к среднему.
		   -----------------------------

	     Предположим Вы хотите определить какие клиенты заказывают про-
	дукцию фирмы luxury Gifts, стоящую по крайней мере на 25% больше,
	чем средняя стоимость по всем продуктам.

	 ORDERS---Order B---Cust I D---Stock B---Quant---Data---Emp B--
		:	  :	     :	       :       :      :        :
		:	  :	     :	       :       :      :        :

			   Выбор клиентов, которые
			   заказали эти изделия.


	  PRODUCTS-----Stock B---Description---Quaut---Price----
	  Set	    :	       :	     :	     : amounts
		    :	       :	     :	     : >(dverage
	  Определение набора			       amounts.1.25
	  всех изделий. 	    Средний оператор
				    вычисляет среднюю  Остальная часть
				    стоимость изделий  строки идентифици-
				    в наборе.	       рует изделия, кото-
						       рые превышают сред-
						       нюю стоимость более
						       чем  на 1.25%.

	  ANSWER------Cust I D-----
	     1	  :   2779	  :
	     2	  :   7000	  :


	  Ключевое слово "Set" в первой строке формы "PRODUCTS" опеределяет
	  набор всех изделий и их стоимости. Вторая строка умножает их сред-
	  нее на 1.25, сравнивает результат с индивидуальными записями изде-
	  лий и связывает выбранные изделия с таблицей "ORDERS".
	       Теперь предположим, что дополнительно к номерам клиентов Вы
	  также хотите знать их имена,что они купили и сколько, и какова сред-
	  няя стоимость изделий.

	  ORDERS---ORDER B---Cust I D---Stock---Quant---Data---Enp---
		 :	   : name     : thing :       :      :	     :
		 :	   :	      :       :       :      :	     :

	  PRODUCTS---Stock---Description--------- Price-------------Quant--
	  Set	   : thing :		 : amonnt		   :
		   :	   :		 :  caic average amonnt    :
					   as  Avs Pricc,>=(average
					   amonnt) 1.25.

			     Отображает имя	  Вычисляет среднюю стои-
			     изделия и стои-	  мость изделия.
			     мость.


	  Сustomer-Cust ID-Last-Init-Strect-City-State-Zip-Conntry-Credit--
		  : name  :    :    :	   :	:     :   :	  :	  :
		  :	  :    :    :	   :	:     :   :	  :	  :

			    Отображает имя клиента.

	  ANSWER---Description---Price-----Last---Avg Price--
	     1	 : Diamnud     :1.400.00 :	:	    :
	     2	 : Matching    :	 :	:	    :







	      4-68. Приведение записей к суммарной величине.
		    -----------------------------------------

	      Предположим Вы хотите знать какие клиенты имеют лимиты кредитов
	больше, чем вдвое от среднего лимита кредита по всем клиентам.


	CUSTOMER-Cust ID--Last Name--Init--Street-City-Zip-Contry----Credit--
	 Set	:	:	   :	 :	 :     :  :Limit    :
		:	:	   :	 :	 :     :  : >average:
		:	:	   :	 :	 :     :  :Limit *2 :

	 Определяет набор   Эта строка выбирает клиентов,  Оператор суммирова-
	 всех клиентов.     лимит кредита которрых превы-  ния вычисляет сред-
			    шает вдвое средний. 	   ний лимит кредита
							   для записей набора.


	 ANSWER-----Last Name-----Credits---
	    1	 :	       :	   :
	    2	 :	       :	   :
	    3	 :	       :	   :



	    Даже если вся информация находится в одной таблицу, Вам придется
	выделить две части запроса в две строки. Ключевое слово "Set" в первой
	строке определяет набор всех клиентов в таблицу. Если Вы ............

	    Арифметическое выражение во второй строке включает оператор сум-
	мирования "average". Paradox вычисляет среднее по всем членам опре-
	деленного набора и затем использует его для выбора записи для таблицы
	"ANSWER".


	    4-69. Сравнение двух суммарных величин.
		  --------------------------------

	    Предположим Вы хотите знать если клиенты какого-нибудь штата за-
	казали книг больше, чем клиенты Техаса.

	CUSTOMER-Cust ID-Last Name-Init-Street-Aty-Stete-Zip-Ctnntry-Credit--
	  Set	:	:	  :    :      :   : TX	:   :	    :	    :
		:	:	  :    :      :   :	:   :	    :	    :

				   Эти строки определяют  Эта строка группиру-
				   набор клиентов Техаса  ет и отображает за-
				   и количество их зака-  писи по шатату.
				   зов.

	BOOKORD--Cust---Data---Item---Vol-------Quaut-----------------
	 Set   :      :      :	    :	  : Sum > Sum Caic Sum :      :
	       :      :      :	    :	  :		       :      :


				   Эта строка опеределяет    Отображает общее
				   штаты, общее количество   количество зака-
				   заказов превышающих опре- зов для каждого
				   деленный набор.	     штата.


	 ANSWER-----State-----Sum of Quaut-----
	   1	 :	   :		      :
	   2	 :	   :		      :
	   3	 :	   :		      :
	   4	 :	   :		      :



	      Понимайте это как два запроса в купон.Первая строка каждовй фор-
	  мы запроса определяет набор елиентов Техаса и количество книг,зака-
	  занных ими.
	      Теперь взгляните на вторые строки. Без мспользования выражения
	  "Sum" они просто обобщают количество заказов для каждого штата. Вы-
	  жение "Sum" выбирает только те штаты, общее количество заказов кото-
	  рых превышает количество заказов определенного набора ( штат Техас).


	      Развитые операции запросов.
	      --------------------------
	      Теперь, когда Вы познакомились с базовой техникой, Вы можете ис-
	  пользовать запросы о данных, Вы можете комбинировать множество мощ-
	  ных средств для запросов, вычислений, "master" и "lookup"  таблиц,
	  "Set" операцмй и бодее того - давать ответы на каверзные, хитрые и
	  сложные вопросы.


	      Включающие связи.
	      ----------------

	      В подразделе "Связь со всеми записями в таблице" этой главы Вы
	  видели как применять оператор включения  "!" для включения полного
	  набора записей в ответе на запрос. Это иногда называется "внешнее
	  объединение". Вы добавляете оператор "!" к образцу в запросе, чтобы
	  сохранить все записи в таблице независимо от того есть ли записи в
	  другой таблице. Вы можете также добавить условия выбора для опреде-
	  дения набора основных записей, которые включаются в ответ.
	     Примеры 4-34, 4-35 и 4-36 используют включающие связи в запросах,
	  связывающих одну "master" и одну "lookup" таблицу. Этот раздел пока-
	  жет Вым как :
	     - использовать множественные операторы "!", чтобы сохранить запи-
	  си из более чем одной таблицы;
	     - использовать операторы "!" в арифметических выражениях;
	     - использовать как включающие, так и исключающие связи в одном и
	  том же запросе.
	     Наконец, в конце этой главы, Вы найдете правила руководящие ис -
	  пользованием связей различного рода в одних и тех же запросах в раз-
	  деле "Правила для связывающих таблиц".



	     4-70. Сохранение всех записей в двух связываемых таблицах.
		   ----------------------------------------------------


