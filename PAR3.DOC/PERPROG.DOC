                                     
                                     ГЛАВА 1
                                     
              
                                     ВВЕДЕНИЕ
              
         *  1 * Система PARADOX Personal Programmer (PPROG) представ-
         ляет собой программу, которая позволяет создавать  программ-
         ные  изделия  без программирования. Пользуясь системой PPROG
         Вы можете без особого труда  создавать  программные  изделия
         для  собственных  нужд  и  для других пользователей. Система
         PPROG позволяет:
              - создавать и использовать меню для приложений в  стиле
         системы PARADOX в интерактивном режиме.
              - осуществить привязку действий по задаче по любому ре-
         жиму меню работ приложений.
              -  создавать  основные  файлы системы PARADOX (таблицы,
         отчеты, запросы, формы) для Вашего приложения.
              - создать титульный ("SPLASH") экран приложения в инте-
         рактивном режиме.
              - связать две таблицы реальным "внешним соединением".
              - вносить изменения в имеющееся приложение, созданное в
         системе PPROG.
              Правила работы с системой PPROG легки  для  освоения  и
         могут быть использованы любым человеком не зависимо от уров-
         ня подготовки в программировании.
              Новички  имеют  возможность  работать в среде PARADOX и
         строить систему меню своего приложения без какого-либо прог-
         раммирования.
              Программисты могут применять эту систему для того чтобы
         создать прототип  сложного  приложения  в  виде  исполняемых
         программ его структур. В данной главе рассказывается:
              - что такое приложение
              - что может делать PPROG
              - оборудование необходимое для установки PPROG
              -  что следует знать для более эффективного использова-
         ния системы PPROG
              - возможности и ограничения приложений,  созданных  при
              помощи PPROG
              
         * 2 * Что такое приложение ?
              
              СУБД  реляционного типа PARADOX предлагает неограничен-
         ные возможности для создания, ведения и  вывода  информации.
         Под приложением понимается некоторая последовательность опе-
         раций  в системе PARADOX, позволяющая выполнять определенные
         действия для решения поставленной задачи. Приложение  выпол-
         няет те действия, которые должен произвести пользователь для
         решения конкретной задачи.
              Например,  предположим, что Вы владелец фирмы, выдающей
         в прокат кинофильмы. Вы стремитесь как можно более упростить
         работу Ваших служащих по обслуживанию базы данных,  содержа-
         щей  информацию  о потребителях, фильмах и текущем состоянии
         дел: какие фильмы находятся в прокате, и т.п. До сих пор вам
         приходилось  обучать  своих  служащих  работать  в   системе
         PARADOX - вещь, конечно, приятная, из-за наличия экранов по-
         мощи,  пособий  для пользования и легкости использования. Но
         при наличии соответствующего приложения Вы можете еще  более
         облегчить   этот  процесс.  Вместо  основного  меню  системы

                             - 2 -
         PARADOX перед Вашим служащим будет меню,  содержащее  только
         требуемые ему для выполнения конкретной пркладной задачи ре-
         жимы работ:
              
         ЗАПРОСЫ    ОТЧЕТЫ   ВЕДЕНИЕ БД   ЗАКАЗЫ   ПОЯСНЕНИЯ   ВЫХОД
        -------------------------------------------------------------
              Заказав режим ОТЧЕТЫ из основного меню приложения, слу-
         жащий увидит меню следующего уровня:
              
           КАТАЛОГ   ПРОСРОЧЕННЫЕ_ФИЛЬМЫ   ФИЛЬМЫ_В_ПРОКАТЕ   ВЫХОД
         -----------------------------------------------------------
              Заказав  режим  ПРОСРОЧЕННЫЕ_ФИЛЬМЫ он получит на своем
         печатающем устройстве отчет с информацией, у  каких  фильмов
         просрочена  дата  возврата  на  основании  данных из таблицы
         orders.
              Вот и все, и нет никакой надобности обучать Ваших  слу-
         жащих  работе  в  системе  PARADOX, ни как строить запросы в
         системе, ни как создавать отчеты в нужной форме и т.п.  Все,
         что им нужно для их работы предоставит Ваше приложение. Пос-
         кольку   Ваши  служащие  никогда  не  увидят  самой  системы
         PARADOX, Вам нужно будет только показать им как  выбрать  то
         или  иное  действие по меню приложения и как вводить и выби-
         рать данные. При помощи Personal Programmer довольно сложное
         приложение создается достаточно легко. И, действительно,  Вы
         сможете  создать  его  самостоятельно, изучив гл.4-7 данного
         пособия. Вы обнаружите, что программы, создаваемые  системой
         Personal  Programmer  выполняют  практически  все, что может
         быть написано на языке PAL, принципиальное  исключение  сос-
         тавляют  многопользовательские  операции, поддержание таблиц
         со связями "один ко многим" и  использование  инструментария
         ввода данных (Data Entry Toolkit).
              
              *  3 * Когда Вы создаете приложение при помощи Personal
         Programmer, то сами  определяете,  что  пользователь  Вашего
         приложения  должен  видеть, а что нет, включая и то, к какой
         информации какой доступ он должен  иметь.  Сами  таблицы  не
         должны появляться на экране, вся выводимая информация должна
         быть представлена либо в виде формы, либо в виде отчета. Это
         означает,  что  именно  Вы определяете что и как должно быть
         представлено пользователю. Например, если  Вы  хотите  чтобы
         Ваши служащие могли просмотреть таблицу-список служащих фир-
         мы, но без просмотра данных об их заработной плате, Вы прос-
         то не включаете это поле в форму вывода информации на экран.
         Как  результат  этого,  информация  о заработной плате будет
         присутствовать в таблице данных, но никогда не  будет  выво-
         диться в Вашем приложении.
              Когда  приложение уже создано, то его пользователи даже
         не нуждаются в установке системы PARADOX, для его функциони-
         рования достаточно иметь средство - PARADOX RUNTIME (см.гл.8
         данного пособия).
              * ЧТО МОЖЕТ PERSONAL PROGRAMMER ?
              Система PARADOX состоит из программ, написанных на язы-
         ке создания приложений (PAL). До появления системы PPROG  (и
         его   предшественника  -  генератора  приложений  в  системе
         PARADOX) Вы должны были свободно владеть языковыми средства-
         ми PAL  для  создания  разного  рода  приложений.  Появление
         PERSONAL  PROGRAMMER  изменило состояние дел. Он ведет Вас в

                             - 3 -
         процессе создания приложения и внесения  изменений  в  него.
         Серия последовательно возникающих на экране меню работ опре-
         деляет  основные  этапы в создании прложения. Вообще говоря,
         Вы создаете систему меню и определяете, какие действия долж-
         ны выполняться в том или ином режиме меню. Когда Вы это  за-
         канчиваете,  PPROG  сам пишет за Вас программы на языке PAL,
         которые обеспечат работу приложения. Вам  нет  необходимости
         самим  писать что-либо на PAL и даже вообще что-нибудь знать
         о нем.
              
               * 4 * PERSONAL PROGRAMMER создает хорошо  структуриро-
         ванные  модули на языке PAL и записывает их в специально ор-
         ганизованные библиотеки процедур. Это означает, что если  Вы
         владеете  языком PAL или хотите лучше его изучить, то можете
         использовать PPROG для создания прототипа приложения, а  за-
         тем вносить требуемые изменения и улучшения.
.
                             - 4 -
              РИС. 1-1 Использование PERSONAL PROGRAMMER
              
         основное меню          |-------------------------------------|
         PERSONAL PROGRAMMER    |-------------------------------------|
              
         введите имя создавае-  |-------------------------------------|
         мого приложения        |-------------------------------------|
              
         закажите таблицы, тре- |-------------------------------------|
         буемые для приложения  |-------------------------------------|
              
         создайте основное меню |-------------------------------------|
         Вашего приложения      |-------------------------------------|
              
                                |-------------------------------------|
                                |-------------------------------------|
                                                                             
         завершите работу и     |-------------------------------------|
         запомните созданное    |-------------------------------------|
         приложение
                        
              
              *  5 * PERSONAL PROGRAMMER полностью совместим с систе-
         мой PARADOX. Файлы, используемые в  прложении  -  это  файлы
         PARADOX:
              - таблицы содержат информацию
              - запросы выбирают данные из таблиц
              - формы выводят отдельные записи из таблицы на экран
              -  отчеты группируют, меняют местами и подсчитывают за-
         казываемые итоги по данным из таблицы
              - экраны отображения нескольких таблиц связывают исход-
         ную информацию с выходными таблицами и позволяют Вам вводить
         или редактировать информацию в нескольких таблицах  одновре-
         менно (см. экраны отображения нескольких таблиц в гл.10 под-
         робнее).
            
              * ТРЕБОВАНИЯ И ВОЗМОЖНОСТИ
              
              Для   того,   чтобы   использовать   систему   PERSONAL
         PROGRAMMER Вам требуется:
              - система ЭВМ, в которой может работать PARADOX
              - жесткий диск или сервер для сети ЭВМ  (минимум  2  мб
         свободной памяти)
              - 640к внутренней памяти (прямого доступа)
              
              ЗАПОМНИТЕ,   что  Вы  не  можете  работать  с  PERSONAL
         PROGRAMMER в системе с гибкими дисками. Но можете  использо-
         вать систему с 2-мя гибкими дисками для работы с приложения-
         ми,  созданными  посредством  PERSONAL  PROGRAMMER, если все
         программные и информационные файлы для приложения помещаются
         на одном гибком диске.  Пользователи  могут  применять  либо
         систему PARADOX, либо средство PARADOX RUNTIME для поддержа-
         ния   работы   приложения,   созданного   в  среде  PERSONAL
         PROGRAMMER. Более подробно см.гл.8.
              
              * ЧТО ВЫ ДОЛЖНЫ ЗНАТЬ
              Используя PERSONAL PROGRAMMER Вам ничего не нужно знать

                             - 5 -
         о программировании. Однако, Вы должны знать о том, как рабо-
         тать с системой PARADOX, чем лучше Вы его знаете, тем  лучше
         поймете, что и как можно получить от PERSONAL PROGRAMMER.
              С некоторыми исключениями PERSONAL PROGRAMMER не добав-
         ляет каких-либо новых возможностей в PARADOX, но он облегча-
         ет  и  упрощает  процесс создания программных приложений для
         системы PARADOX.
              Например, поскольку создание основных файлов приложения
         - это создание основных файлов системы PARADOX, т.е. таблиц,
         запросов, форм и отчетов, Вы создаете  их  обычным  образом.
         Так что, понимание природы файлов PARADOX - минимально необ-
         ходимое   условие   для   начала  работы  в  среде  PERSONAL
         PROGRAMMER.
              Если Вы владеете языком PAL, то найдете,  что  PERSONAL
         PROGRAMMER  вполне способный помощник для Вас. С его помощью
         Вы можете легко определить структру Вашего приложения, зако-
         дировать стандартные модули и даже создать  титульный  экран
         для  него.  Создав при помощи PERSONAL PROGRAMMER основу для
         приложения, Вы можете дописать дополнительные  программы  на
         PAL,  чтобы  с  их помощью выполнить более сложные задачи. И
         поскольку PERSONAL PROGRAMMER пишет хорошо структурированные
         модули на PAL, их можно легко отредактировать, вставить свои
         комментарии  и  расширить  их  возможности.  Более  подробно
         см.гл.11 (хитрости программиста).
              * ВОЗМОЖНОСТИ ПРОГРАММ
              PERSONAL  PROGRAMMER  накладывает несколько ограничений
         на создаваемые им приложения. В отдельном  приложении  можно
         иметь до:
              - 15 таблиц
              - 15 пунктов для каждого меню
              - 10 уровней системы меню.
              Хотя   приложения,   созданные   при   помощи  PERSONAL
         PROGRAMMER будут работать в сети, но они не  используются  в
         многопользовательском режиме.
              И, наконец, имеются ограничения на редактирование опре-
         деленных  полей  в  экранах  отображения  нескольких  таблиц
         (см.гл.10).
              ПОМНИТЕ, что программы, создаваемые  системой  PERSONAL
         PROGRAMMER,  должны являться начальной точкой для Вашего ко-
         нечного приложения. С помощью языка PAL и Ваших программ  на
         нем  Вы сумеете обойти даже эти ограничения системы PERSONAL
         PROGRAMMER.
        
              
                                Г Л А В А   4
              
                      26. Создание нового приложения.
             
             Прежде  чем приступить к созданию программного приложе-
         ния при помощи PERSONAL PROGRAMMER (средства создания прог-
         раммных приложений в среде PARADOX) следует:
             а) написать сценарий решаемой задачи;
             б) определить основные составляющие программного прило-
         жения;
             в) создать отдельный директорий для хранения  программ-
         ного обеспечения данного приложения;
             г) дать наименование разрабатываемому приложению;

                             - 6 -
             д) выбрать или создать таблицы хранения данных для раз-
         рабатываемого приложения.
                 
                          27. Создание сценария.
             
             Хотя средство PERSONAL PROGRAMMER позволяет легко приз-
         водить  различные  изменения в процессе решения задачи, все
         же рекомендуется сначала тщательно  разобраться  в  задаче,
         определить ее основные функции, спланировать алгоритм реше-
         ния.
             Желательно  сначала  определить  функции, которые будут
         выполняться создаваемым приложением. Затем следует обдумать
         взаимосвязь  этих функций. Может целесообразным вынести вы-
         полнение аналогичных операций в  особые  подиеню  основного
         меню.  Предпочтительнее вызывать наитболее часто используе-
         мые функции из основного меню, а менее частые действия  вы-
         носить в подменю более низких уровней.
              При создании сценария работы приложения следует прини-
         мать во внимание навыки и привычки  конечного пользователя.
         Если  вы  вводите экраны помощи, то следует определить сте-
         пень их детализации и для описания каких операций они необ-
         ходимы.Следует учесть, будет ли понятна конечному пользова-
         телю вводимая вами терминология, отражаемая на экранах меню
         решения  задачи (например, "квитанция-об-оплате") или лучше
         использовать термины описания  просто  понимаемых  операций
         (например, "ВводДанных" или "Отчеты").
              
                        Создание приложения video.
                                                                   
              Предположим, мы начинаем создавать сценарий задачи для
         владельца прокатного бюро кинофильмов.При создании  данного
         программного  приложения должны быть решены следующие проб-
         лемы:
              а) обработка запроса о прокате кинофильма;
              б) обработка запроса о возврате кинофильма;
              в) вывод на печать квитанций об оплате;
              г) вывод на печать имеющимхся в наличии фильмов;
              д) определить, имеется ли в  наличии  (не  в  прокате)
         данный кинофильм;
              е) ввод новых пользователей в БД;
              ж)  определение какие фильмы часто поступают в прокат,
         какие нет.
              Конечно, данный список далеко не исчерпывает все  воз-
         можные  потребности,  которые  могут возникнуть у владельца
         бюро проката кинофильмов.Они могут  быть  использованы  как
         начальный  этап решения задачи и продемонстрироватьразнооб-
         разие и непохожесть этих функций.
              Следующий шаг - попытка сгруппировать схожие  функции.
         Например,  поскольку  пункты  а) и б) используют однотипную
         информацию (кинофильм, пользователь, дата выпуска, дата вы-
         дачи в прокат, дата возврата и т.д.), их можно объединить в
         одну функцию под  названием  "Запрос  о  прокате".Остальные
         функции также могут быть логически сгруппированы, также как
         и различные виды отчетов, выдаваемых на печать.
              
              Обдумывая  функцию "ввод новых пользователей", вы ско-
         рее всего решите, что необходимо учесть возможность  обнов-

                             - 7 -
         ления данных о текущих пользователях (а если у них изменил-
         ся  адрес?) и что вы еще не продумали вопрос, каким образом
         вводить информацию о к/ф. в БД. Это приведет вас  к  мысли,
         что  следует  выделить отдельную функцию "ведение БД", пос-
         кольку операции, операции проводимые с этими данными, будут
         выполняться не столь уж часто.
              После того, как вы провели анализ функций, выполняемых
         в задаче, и определили их взаимосвязь, вы можете  набросать
         план  системы меню, пункты которого будут вызывать выполне-
         ние той или иной функции. В первом  приближении  ваше  меню
         может выглядеть следующим образом:
.
                             - 8 -
             ╔════════╗    ╔════════════╗      ╔═══════════════╗
             ║ Отчеты ║    ║ Ведение БД ║      ║ Заказы на к/ф ║
             ╚═══╤════╝    ╚═════╤══════╝      ╚═══════════════╝
             ┌───┼───┐      ┌────┴────┐
          список │ счета    │         │
          фильмов│         к/ф   пользователи
                 │
           к/ф в прокате
                                                       
              Подумав  еще и реорганизовав функции, вы останавливае-
         тесь на следующем меню:
              
              Запросы        Отчеты        Ведение БД        Заказы
             ─────────      ────────      ────────────      ────────
           пользователи    список к/ф     ввод новых поль-   прокат
           к/ф            невозвращенные  зователей          возврат
                          к/ф             ввод новых к/ф
                          к/ф в прокате   редактирование:
                                          таблиц пользова-
                                          телей;
                                          таблиц к/ф
                                                                    
              
        
             Мы назовем это "рабочим" меню, поскольку вы можете  из-
         менять  его в любое время, даже после того, как ваше прило-
         жение будет закончено. Как это можно сделать - будет описа-
         но в главе 7, когда вы  будете  использоватьфункцию  Modify
         для того, чтобы объеденить функции задачи "доввод пользова-
         телей"  и "доввод к/ф" в новый подраздел меню: "Ведение БД"
         "Доввод информации".
             Помимо создания общей структуры меню вашего приложения,
         определения его основных функций, вам  необходимо  продумы-
         вать  вопрос, какие таблицы, формы и виды отчетов будут вам
         необходимы. Уже ясно, что вам будут нужны таблицы для  хра-
         нения информации о пользователях и к/ф.
             Из  меню  просматривается  необходимость наличия таблиц
         для категорий фильмов, форм оплаты проката, выдачи  квитан-
         ций  за пользование к/ф. Вам скорее всего захочется заранее
         создать формы для ввода данных по меню "заказы" и для неко-
         торых функций меню "Ведение БД". И, наконец,  каждый  выбор
         меню "отчеты" требует наличия описания конкретных отчетов.
             Из  выше  сказанного становится ясно, что даже создание
         просто сценария работы вашего приложения помогает вам лучше
         понять, что вы хотите получить, прежде чем вы приступите  к
         непоредственному  созданию приложения. Все что было сделано
         до этого момента не требует наличия  ни  ЭВМ,  ни  Personal
         Programmer.  От  вас  на этом этапе требуется решить, какие
         функции будут выполняться в процессе работы вашего приложе-
         ния и как эти функции взаимосвязаны. Помните, что эти функ-
         ции в любой момент могут быть изменены или пересмотрены.
             
             
                             Определение основных
                           составляющих пограммного
                          приложения (файлов PARADOX)
                                         

                             - 9 -
             Cледующий этап работы по созданию вашего  приложения  -
         создание  основных  составляющих  программного  приложения:
         таблиц, форм, отчетов, экранов с информацией из  нескольких
         таблиц  одновременно, отдельных программ. Почти все они мо-
         гут быть созданы в среде Personal Programmer, но вы  можете
         их создать и отладить еще до входа в него. Вы можете разра-
         ботать  достаточно сложную программу, которую затем введете
         в качестве системы PARADOX до входа в Personal Programmer.
             Если требуются отдельные программы на языке PAL, то вам
         придется писать их либо в среде PARADOX либо в среде любого
         текстового редактора до входа в Personal Programmer. Только
         эта задача не может быть выполнена в среде данного  средст-
         ва.  Все  остальные составляющие (файлы) могут быть созданы
         либо в среде PARADOX либо в среде Personal Programmer.
             Наш совет - лучше сначала создать формы, отчеты и экра-
         ны выдачи запросов вне среды Personal Programmer,  отладить
         и  затем  включить в ваше приложение. PARADOX в этом смысле
         дает большую свободу проигрывания  возможных  вариантов  до
         того,   как   вы  сделаете  окончательный  выбор.  Personal
         Programmer не дает подобной свободы манипулирования  объек-
         тами,  хотя вы в любой момент можете вернуться на шаг назад
         и внести изменения в ваши таблицы.
             И, наконец, если вы хотите производить проверку на дос-
         товерность данных или задать установки для отображения таб-
         лиц на экран в процессе ввода/редактирования данных, вы мо-
         жете  определить их либо в PARADOX'е, либо в среде Personal
         Programmer. И снова следует отметить, что PARADOX -  лучшая
         среда  для опробования различных вариантов до получения од-
         ного самого лучшего.
             Для рассматриваемого приложенияч VIDEO этот процесс был
         уже выполнен ранее. Большая  часть  используемых  таблиц  и
         форм  находится  на дискете N1 Personal Programmer вместе с
         программой, называемоей VIDENT. Вы сможете создать все тре-
         буещиеся составляющие по мере изучения данного учебного по-
         собия.
        
                               Парольная защита
             
              Для того, чтобы пользователь мог войти в ваше программ-
         ное приложение, он должен дать ответ о пароле входа. Все что
         пользователь введет, будет проанализировано системой PARADOX
         для  разрешения  доступа  к  защищенной  информации таблиц и
         программ.
              Каждый пользователь может ввести  только  один  пароль.
         Однако  вы  можете  установить некоторое количество дополни-
         тельных паролей для каждой таблицы, и пароли, вводимые поль-
         зователем, могут перекрыватся паролями  к  другим  таблицам.
         Таким  образом, один пароль может дать полный доступ к опре-
         деленным таблицам, ограниченный доступ к другим и не  разре-
         шить  доступ к определенным таблицам. Следующий пароль, вве-
         денный другим пользователем, может дать совсем  другие  воз-
         можности доступа к информации. Вы имеете возможность контро-
         лировать  право  доступа,  задаваемого по каждому паролю ( и
         как результат, права каждого пользователя системы).
              Разветвленная  система  дополнительных  паролей   может
         обеспечить  соответствующий  доступ  к  таблицам для каждого
         пользователя. Кроме того, вы  можете  использовать  дополни-

                             - 10 -
         тельные паролши для защиты ключевых полей при выполнении не-
         которых  операций (см. ограничения на редактирование - глава
         6).
              Если вы будете создавать таблицы в среде PARADOX, то на
         данный момент вы уже должны были продумать свою систему  па-
         рольной  защиты.  Для  установления парольной вы можете вос-
         пользоваться следующими способами:
              а)   -   использовать   возможность   меню    PARADOX'а
         Tools/More/Protect (см. гл. 12 PARADOX User's Guide)
              б) - использовать генератор защиты PARADOX, описанный в
         книге   "руководство  администрированием  в  сети"  (Network
         Administrator's Guide)
              Если же вы собираетесь создавать  некоторые  таблицы  в
         среде  Personal  Programmer,  то вам следует сначала соэдать
         их, а потом уже вводить систему защиты. Удостоверьтесь,  что
         вы  установили  ее  до того, как начнете распространять свое
         приложение.
              Если вам нет необходимости защищать информацию,  то  вы
         можете обойтись без парольной защиты. Тогда пользователи от-
         вечают  на  запрос  о  пароле простым нажатием клавиши ввода
         [Enter], и приложение будет работать не передавая  пароли  в
         PARADOX.
              
                            Создание директория
              
              Хотя  все  файлы Personal Programmer находятся в едином
         директории  (\PARADOX2\PROG),  вы  можете  вызвать  Personal
         Programmer из любого директория вашего жесткого диска. Един-
         ственное  ограничение:  все составляющие вашего приложения и
         его программные файлы должны находиться в едином директории.
         Мы очень советуем иметь отдельный директорий для каждого ва-
         шего приложения.При этом легко определить, какие  составляю-
         щие  и программы относятся к какому приложению. В противопо-
         ложном случае, если в данном директории вы создаете несколь-
         ко приложений, вам будет трудно определить, какие составляю-
         щие и программы относятся к какому приложению. Поэтому преж-
         де чем запустить Personal Programmer рекомендуется выполнить
         следующее:
              1. Создать новый директорий командой md дисковой опера-
         ционной системы.
              2. Сделать созданный директорий текущим  используя  ко-
         манду cd дисковой операционной системы.
              3.  Скопировать  все таблицы, формы, отчеты, программы,
         уже созданные для данного приложения в этот  новый  директо-
         рий, используя либо возможность системы PARADOX "Tools/Copy"
         либо команду "Copy" дисковой операционной системы.
              
                        Вход в Personal Programmer
              
              Сначала  удостоверьтесь, что подсказка дисковой ОС [C>]
         имеет место, и что текущий директорий -  это  директорий,  в
         ктором вы собираетесь хранить ваше завершенное приложение (в
         нашем  примере  \PARADOX2\PPROG\VIDEO). Для запуска Personal
         Programmer рядом с подсказкой вы вводите "PPROG" и нажимаете
         клавишу ввода. Помните, что вы можете работать с  составляю-
         щими  объектами  того  директория  из  которого вы запустили
         Personal Programmer.

                             - 11 -
              Если что-то получается не так, это означает, что отсут-
         ствует какой либо  файл  программного  обеспечения  Personal
         Programmer.  Посмотрите приложение А данного руководства для
         анализа сообщения об ошибке. Если вы видите сообщение  "File
         not  found" (файл не найден), то скорее всего у вас ошибка в
         операторе "Path" ДОС'а (см. глава  2  -  установка  Personal
         Programmer). Если возникают неприятности при чтении информа-
         ции  на  экране  обратитесь  к главе 10 - описание программы
         конфигурации системы.
              
                    4-1. СОЗДАНИЕ ДИРЕКТОРИЯ И ВХОД В
                            PERSONAL PROGRAMMER
                   
                    Шаги:
              1. Использовать команду ДОС md для создания нового  ди-
         ректория под названием:\PARADOX2\PPROG\VIDEO.
                       c>md c:\PARADOX2\PPROG\VIDEO
              2.  Использовать  команду ДОС cd для изменения текущего
         директория:
                       c>cd c:\PARADOX2\PPROG\VIDEO
              3. Скопировать имеющиеся таблицы, формы, отчеты,  прог-
         раммы  с  дискеты Personal Programmer Disc 1, поместив его в
         драйв А и использовав команду ДОС copy:
                            с>copy a:\VIDEO\*.*
              Для выполнения всех этих шагов в нужной  последователь-
         ности  имеется  пакетный  файл под названием VIDDEM. Для ис-
         пользования его вам необходимо иметь как минимум  200К  сво-
         бодных байтов на вашем жестком диске для хранения составляю-
         щих приложение и последующего создания приложения VIDEO.
              Начните с подсказки ДОС C> на экране.
              1.  Введите дискету в Personal Programmer Disc 1 в дис-
         ковод А,
              2.  введите следующее:
                    c>a:viddemo
                    c:\PARADOX2\PPROG\VIDEO
              3. Для запуска Personal Programmer введите:
                                  c>PPROG
              На  экране  появится  начальный  экран системы Personal
         Programmer.
              В верхней части экрана появится основное меню  Personal
         Programmer  и  два  окошка с инструкцией и информацией внизу
         (см. главу 3 - Общее  описание).  Третье  строка  в  верхней
         окошке всегда содержит подсказку о следующих возможных шагах
         при создании вашего приложения.
              Сейчас там сообщение: (выбери режим работы из предлага-
         емого меню).
              
                           Создание и присвоение
                            названия приложению
              
                                Режим CREATE
              
              Для  того,  чтобы  начать создавать новое приложение из
         основного меню  работ  Personal  Programmer  выберите  режим
         "Select".  После этого Personal Programmer выдаст вам запрос
         о вводе наименования для вашего приложения. Оно может  иметь
         до  5  символов в длину. Первый символ - обязательно буквен-

                             - 12 -
         ный, остальные могут буквами, цифрами, символами $, -, !
              Наберите наименование приложения и нажмите клавишу вво-
         да.
              
                                 Выбор таблиц
              
              Прежде всего Personal Programmer должен знать, с какими
         таблицами будет работать ваше приложение. В одном приложении
         может быть задействовано до 15 таблиц.
              Для того, чтобы произвести выбор таблиц, вам предлога-
         ется меню со следующими режимами работ:
              а) "Existing Table":   выбор существующей таблицы
                 (Существующая таблица)
              б) "New Table"     :   создание новой таблицы
                 (Новая таблица)
              в) "Remove Table"  :   отказаться от уже выбранной
                                     таблицы
              г) "DO-IT"         :   закончить выбор таблиц
                 (Выполнить)         (аналогично нажатию клавиши F2)
              д) "Cancel"        :   прекращение процесса выбора
                 (Прекращение        таблиц и возврат в основное
                  работ)             меню Personal Programmer
              Выбор режима NewTable в Personal Programmer  аналогичен
         выбору  режима  Create  oсновного меню системы PARADOX. (см.
         главу 6 режим Create руководства PARADOX User's Guide).
              Для работы по созданию приложения вам  необходимо  выб-
         рать хотя бы одну таблицу.
              Нельзя выбирать временные таблицы системы PARADOX (типа
         ANSWER), поскольку они могут либо отсутствовать, либо не со-
         ответствовать требуемому варианту.
              Как   только   вы   завершили  выбор  таблиц,  Personal
         Programmer просит вас ввести описание для  каждой  выбранной
         таблицы.  Эти  описания  помогут вам запомнить с какой целью
         они были созданы и как будут использованны в дальнейшем. Ес-
         ли вы не введете описание для  таблицы  (т.е.  оставите  его
         пустым), то Personal Programmer создаст его сам ( для табли-
         цы Ordes строка описания бутет выглядеть Orderstable).
              
                    4-2. СОЗДАНИЕ ПРИЛОЖЕНИЯ И ВЫБОР ТАБЛИЦ
                                                     
                     Шаги:
              Начинаем  с картинки основного меню Personal Programmer
         (режим "Create")(стр.32 - 4-1.)
              1. Выбираем режим  "Create"  основного  меню.  Personal
         Programmer просит ввести наименование вашего нового приложе-
         ния.
              2. Наберите VIDEO и нажмите клавишу ввода.
              Вы увидите меню выбора таблиц.
              3. Выберите режим Existing Table (Существующая таблица)
                     Personal Programmer просит вас ввести имя  нуж-
                     ной вам существующей таблицы.
              4.  Наберите название первой таблицы "filmcat" или наж-
         мите клавишу ввода и выберите ее из приводимого  списка  су-
         ществующих таблиц.
              Как  только  вы заказали таблицу "filmcat", ее название
         появится в списке выбранных таблиц распологающемся сразу под
         меню таблиц.

                             - 13 -
              5. Повторите шаги  3-4  для  выбора  следующих  таблиц:
         films, orders, ordtemp и customer.
              6.  Окончив  выбор  таблиц,  выберите режим DO-IT! (или
         нажмите клавишу F2) для  того,  чтобы  дать  знать  Personal
         Programmer, что выбор таблиц завершен.
              Вы увидите список всех заказанных таблиц в виде меню из
         их  названий,  причем первая выбранная таблица filmcat будет
         находиться в освещенном мигающем прямоугольнике. Под ним бу-
         дет расположен большой овещенный прямоугольник.
              7. Для каждой таблицы, по очереди, наберите описания  и
         нажмите клавишу ввода.
              Ниже приводится список ракомендуемых текстов описания:
              
                    Таблица            Описание
              ______________________________________________________
                 filmcat          Типы фильмов
                 films            названия фильмов, регистрационный
                                  номер, дата проката
                 orders           таблица заказов на фильмы
                 ordtemp          временная таблица, используемая
                                  при выписке счетов
                 customer         Фамилия пользователя и его адрес
              
              
              Когда Вы нажмете клавишу ввода после окончания работы с
         последней  таблицей,  можно  приступить к созданию основного
         меню для Вашего приложения.
             
            ГЛАВА 5 ПОСТРОЕНИЕ СИСТЕМЫ МЕНЮ
             
              Следующий важный шаг при создании Вашего  приложения  (
         после  выбора используемых таблиц ) - построение системы ме-
         ню.
              Этот процесс начинается обьявлением основного меню. Это
         меню похоже на самое первое меню, которое Вы увидели,  когда
         вошли  в  систему PARADOX. Оно управляет всей работой Вашего
         приложения.
             Приложения, создаваемые при помощи PPROG,  строятся  как
         меню  в стиле системы PARADOX. Режимы работ располагаются на
         верхней строке экрана, а подсказки или пояснения по  каждому
         выбранному  режиму - на строке ниже. Пользователи могут либо
         набрать первую букву нужного им режима работ, либо использо-
         вать ключи управления движением курсора для передвижения ос-
         вещенного прямоугольника выбора режима работ, и затем нажать
         клавишу ввода. При передвижении по режимам работ строка  по-
         яснений  меняется  в зависимости от режима. Каждое действие,
         выполняемое в Вашем приложении , должно быть отражено  соот-
         ветствующим режимом работ в меню работ.
             Меню  режимов  работ  приложения,  как  и  меню  системы
         PARADOX, имеют иерархическую организацию. Это означает,  что
         выбрав какой - либо режим работ из основного меню, Вы можете
         вывести подменю дополнительных более детальных режимов работ
         и так вплоть до 10 уровней подменю. При необходимости Вы мо-
         жете  сгруппировать аналогичные режимы работ под одним режи-
         мом меню верхнего уровня, например, все запросы  об  отчетах
         могут  находиться  как  подменю режима работ " ОТЧЕТЫ " меню
         верхнего уровня.

                             - 14 -
             В данной главе обьясняется каким образом:
             - вести названия режимов работ Вашего меню;
             - создавать строки комментария для каждого из  введенных
         режимов работ;
             - редактировать созданное меню.
             Хотя  все примеры, приводимые в данной главе относятся к
         правилам построения основного меню приложения, все  нижеска-
         занное  относится также к правилам построения подменю нижних
         уровней.
             
             ВВОД НАЗВАНИЙ ДЛЯ РЕЖИМОВ РАБОТ И КОММЕНТАРИЕВ К НИМ
             
             Поскольку процесс выбора таблиц  для  Вашего  приложения
         завершен, PPROG предложит Вам приступить к построению основ-
         ного  меню  задачи. Вы увидите окошко экрана создания меню (
         см.с.37 пример 5-1 ). В правом верхнем углу окошка находится
         название создаваемого Вами меню. В окошке есть место для:
             - ввода названий режимов  работ  меню.  Название  задает
         пользователь, его длина может достигать 20 символов;
             -  ввода  комментария. Сроки комментария могут достигать
         60 символов в длину. Если Вы не заполните строку комментария
         PPROG создаст ее для Вас сам. Как наименования  режимов  ра-
         бот, так и строки комментариев могут состоять из букв, цифр,
         печатных символов и пробелов. Старайтесь, чтобы первые буквы
         наименований  режимов  работ отличались друг от друга. Тагда
         Вы можете ввести первую букву режима, тем  самым  осуществив
         его  выбор. Иначе Вы должны будете использовать ключи управ-
         ления движением курсора. Вы можете использовать те же  буквы
         в названиях режимов работ меню других уровней.
             
             РЕДАКТИРОВАНИЕ МЕНЮ
             
             Если  Вам  нежно изменить название режима работ уже соз-
         данного меню, нажмите клавиши:
             - "->" или "<-" для движения по Вашему меню;
             - "->" от последнего режима для того, чтобы добавить но-
               вый режим в конец меню;
             - "ins" для того, чтобы вставить новый режим работы сле-
               ва от освещенного квадрата с существующим режимом;
             - "del" для того, чтобы удалить режим работы, находящий-
               ся в освещенном квадрате;
             - редактирование F9 для того, чтобы внести  изменения  в
               название  режима  работы,  находящегося  в  освещенном
               квадрате.
             В режиме редактирования Вы можете:
             1. вводить символы, чтобы добавить текст в конец выбран-
               ного названия;
             2. нажать клавишу "Backspace", чтобы убрать  символы  от
               конца выбранного названия, или "Ctrl/Backspace", чтобы
               стереть все имя;
             3.нажать клавишу ввода, чтобы спуститься на строку  ком-
               ментария и редактированть ее аналогичным образом (вво-
               дить текст или корректировать его );
             4. нажать клавишу "Esc" для возврата к предыдущему  сос-
               тоянию. Для окончания редактирования меню нажмите кла-
               вишу F2 "DO-IT!", затем нажмите клавишу F10 и выберете
               режим  DO-IT! ( выполнение ) или Cancel ( отказ от вы-

                             - 15 -
               полнения ).
             
             
                    5-1. Создание основного меню приложения VIDEO
          
             Шаги:
             Начинаем с экрана, соответствующего примеру 4-3 - экрана
         соэдания меню. Подсказка просит ввести названия режимов  ра-
         бот  и комментарий к ним (Enter the names of menu selections
         and their descriptions).
             1. Введите "Запрос"  и  нажмите  клавишу  ввода.  Курсор
         сдвинется на строку комментария.
             2. Введите "Запросы о к/фильмах". Нажмите клавишу ввода.
         Теперь курсор передвинулся на строку режимов работ справа от
         слова "Запрос".
             3. Повторите шаги 1-2 и введите следующую информацию:
             
               Режимы работ           Комментарии
         ------------------------------------------------------------
              Ведение БД         Обновление/добавление  информации  о
                                 пользователях или к/фильмах
              Заказы             Обработка   запросов  о  возможности
                                 проката к/фильмов и сроках возврата
              Помощь             Подробные пояснения о  перечисленных
                                 режимах работ
         
             4. Ох! Мы "случайно" забыли ввести еще один режим работы
         и оэтому можем ознакомиться с режимом редактирования режимов
         работ  создаваемого меню. Наш второй режим должен называться
         "Отчеты".
             Используем клавиши -> и <- для  продвижения  светящегося
         квадрата к режиму "Ведение БД". Нажимаем клавишу INS.
             Слова  "Ведение  БД" сдвигаются вправо, чтобы освободить
         место для ввода нового, пустого наименования режима работ.
             5. В этом месте наберите слово "отчеты" и нажмите клави-
         шу ввода.
             В строке комментария наберите текст:  "вывод  на  печать
         отчетов" и снова нажмите клавишу ввода.
             ( См. внешний вид экрана нашего меню на стр.37 ).
             6. Нажмите  клавишу F2  " DO IT!".
             При этом Personal Programmer запомнит ваше основное меню
         и  добавит режим работы "Leave" (выход из приложения), чтобы
         пользователь мог выйти из задачи.
             После этого на экране появится меню привязки действий по
         задаче ( Definition menu ), которое будет описано в  следую-
         щей главе.
             Если  вы хотите немного передохнуть, то завершите выпол-
         нение примера 5-2.
         
                          ПОСТРОЕНИЕ ПОДМЕНЮ НИЗШИХ УРОВНЕЙ
                                              
             Описанный выше способ построения  основного  меню  может
         быть  использован  для  построения  подменю  низших уровней.
         Единственное отличие состоит в том, что Personal  Programmer
         не добавляет режим выхода из приложения к создаваемым подме-
         ню.
             В главе 6 будет описано, каким образом связать режим ра-

                             - 16 -
         боты основного меню с подменю другого уровня.
             
                                 ПЕРЕРЫВ В ИЗУЧЕНИИ
        
             Если   сейчас  вы  хотите  сделать  перерыв  в  изучении
         Personal Programmer, вам придется возвращаться к вашему при-
         ложению VIDEO через режим Modify и в нем создать ваше прило-
         жение дальше. Кроме того, это повлечет  за  собой  необходи-
         мость выполнения дополнительных действий по определению каж-
         дого из режимов работ.
             
                    5-2. Как сделать перерыв в создании приложения
                                    на данном этапе
             
             Шаги:
             Начинаем   с  меню  определения  действий  по  задаче  (
         Definition Menu ) на экране.
             Если вы находитесь в процессе создания  основного  меню,
         окончите  его;  если  вы создаете меню более низкого уровня,
         закончите его создание таким образом, чтобы появился следую-
         щий режим работы основного меню. Затем нажмите  клавишу  ESC
         для   того,   чтобы   появилось  меню  привязки  действий  (
         Definition Menu ).
             1. Выберите  DO-IT  из меню определения действий.
             Все ваши неопределенные режимы работ получают статус не-
         определенных ( NotDefined ) - вы их сможете  изменить  позд-
         нее.
             2.  Из  появившегося  на зкране меню создания титульного
         экрана задачи вы выбираете режим NoSplash Screen  (  не  ти-
         тульный  экран ). ( Вы сможете создать титульный зкран позд-
         нее ).
             3. Из последнего меню вы выбираете режим  DO-IT!
             После этого Personal Programmer начинает создавать прог-
         раммы, называемые scripts , на текущее состояние вашего при-
         ложения. Когда этот процесс закончится, вы смова увидите ос-
         новное меню Personal Programmer.
             4. Выбирайте  режим  Exit/Yes  для  выхода  из  Personal
             Programmer.
         
                                 5-3. Как снова начать
             
             Когда вы будете готовы возобновить  работу  по  созданию
         приложения  VIDEO,  войдя  в среду Personal Programmer как и
         раньше.
             1. Из основного меню выберите режим Modify вместо режима
         Create.
             2. Когда появится запрос о наименовании приложения,  на-
         берите VIDEO и нажмите клавишу ввода.
             3.  Из появившегося на экране меню Modify выберите режим
         Not Defired, чтобы попасть на  первый  неопределенный  режим
         работы вашего меню.
             4. Нажмите [ F10 ] = меню и выберите режим Action.
             5. И, наконец, вы задаете режим DEFINE, чтобы определять
         режим работы из титульного экрана.
             После  этого на экране появится меню Action, вы получите
         возможность определить новый режим работы в  вашем  приложе-
         нии,  как вы это делали раньше. Но поскольку вы находитесь в

                             - 17 -
         режиме изменения, а не создания вашего приложения, вы  осоз-
         наете,  что между ними есть различие: после определения каж-
         дого режима работ, вам придется переходить к следующему  ре-
         жиму  и повторять шаги 4 и 5. (В режиме Creat это происходит
         автоматически).
            
             Помните об этом, когда вы начнете изчать материал следу-
         ющей главы и просмотра главы 7 (Изменение  приложения),  где
         объясняется, почему нужны эти этапы.
             6.  Когда  вы  закончили определения всех режимов работ,
         выберите режим Splash screen из меню Modify для создания на-
         чального (титульного) экрана вашего приложения.
             7. Выберите режим DO-IT из меню Modify,  чтобы  окончить
         работ  с  вашим  приложением  и  вернуться  в  оснавное меню
         Personal Programer.
             
             
                             Глава 6.
             
                      Меню  привязки  действий.
        
             Как привязать определенные действия, выполняемые  прило-
         жением,  к  режимам  работ  созданной системы меню для этого
         приложения? Это оснавной момент  при  создании  программного
         приложения средствами Personal Programmer.
             В настоящей главе объесняется, каким образом следет при-
         вязывать действия, выполняемые приложением, с режимом работы
         системы меню. Вы научитесь:
             а)выдавать подменю;
             б)просматривать,  корретировать и добавлять новые записи
         в таблицы;
             в)печатать отчет;
             г)запускать программы;
             д)высвечивать экраны помощи;
             е)прекращать выполнение работы из меню;
             ж)выводить титульный экран.
             Вы также научитесь выполнять действияиз друугих меню,  а
         также записывати созданное программное обеспечение.
             Это  наиболее важная глава данного пособия. Если вы пой-
         мете приведимый ниже  метериал,  вы  сможете  самостоятельно
         создавать любые приложения посредством Perconal Programmeer.
             ЗАМЕЧАНИЕ. Если вы захотите прерваться в процессе изуче-
         ния  данного  материала,  то выполните все шаги, описанные в
         примере 5-2 главы 5 (построение системы меню). Когда вы  во-
         зобновите  изучение  материала данной главы, вы будете рабо-
         тать в режиме изменений (MODIFY) вашего  приложения,  однако
         процесс   будет   анологичен   режиму   создания  приложения
         (CREATE).
.
                             - 18 -
                           Меню привязки.
             
                ------------------------------------------------
                :  Specify Action     DO-IT!          Cancel   :
                ------------------------------------------------
             
             Поскольку вы уже определили основное меню вашего  прило-
         жения, оно появится в центре экрана в светящемся прямоуголь-
         нике.   Первый  режим  работы  освещен,  что  означает,  что
         Perconal Programmtr готов связать его задаваемыми вами дейс-
         твиями. В верхей части экрана расположено меню привязки дей-
         ствий.Оно предлогает следующие режимы работы:
                Specify Action - определить действия  для  выбранного
                                    пункта меню работ приложения;
                DO-IT!  -  классифицировать все еще не заданные пнкты
                                    меню работ приложения как неопре-
                                    деленные (Not Defined); запомнить
                                    все действия, выполненные до дан-
                                    ного момента; и выбраться  в  ос-
                                    новное    меню   работ   Perconal
                                    Programmer;
                Cancel - отменить все действия по созданию/ модифика-
                                    ции вашего приложения  и  возвра-
                                    титься   в  основное  меню  работ
                                    Peerconal Programmer.
             Выбор режима DO-IT! позволяет всем не  только  закончить
         процесс  создания приложения, но и сделать перерыв в работе.
         Это происходит потом, что Perconal Programmer сам присваива-
         ет неопределенным вами пуунктам меню значений "Not  Defined"
         (неопределено).  Если  вы начали работу в вашем приложении и
         выберете режим, определенный как Not Defined, вам буудет вы-
         дано сосбщение, что никаких действий по этому выбору не  мо-
         жет быть произведено,и вы возвратитесь в меню работ,из кото-
         рого  пытались  выполнить  это задание. Другими словами, это
         означает, что вы можете создавать свое приложение по  частям
         и  отлаживать эти части, за тем возвращаться в основное меню
         и, используя возможность Modify, проводить долнейшую  разра-
         ботку режимов работ.
             Не выберайте режим Cancel если у вас нет уверености, что
         все сделаное вами в дольнейшем не пригодится.
             Заказав  режим  Spcify  Action,  вы увидите экран с меню
         Action, который будет описан ниже. Из этого меню  вы  можете
         вернутся  в  меню  привязки действий (Definition menu) нажав
         клавишу ESC. Это же меню бдет всякий раз при создании подме-
         ню, до того как вы определите первый его пункт. Это позволя-
         ет вам либо запомнить, либо отменять выполняемые в  процессе
         привязки действий изменения.
             
             
                 6-1. Режимы рыбот меню привязки действий.
          
             
             
             
                  Меню  выбора  действий - Action Menu.
        
             

                             - 19 -
             
             Если вы знаете режим определения действий Specify Action
         из  меню  привязки действий (Deefinition menu), то последнее
         замещается мен ю выбора действий. В  нем  приводится  список
         возможных действий, которые вы можете связать с определенным
         пунктом  основного  меню  создаваемого вами приложения (того
         самого, которыйнаходится в мигающем освещенном прямогольнике
         меню привязки действий. Действия, которые вы здесь выберете,
         определяют, что сможет выполнить пользователь вашего  прило-
         жения,  если он выберет данный режим работы. Здесь вы можете
         определить следющие дейсвия:
             
             Menu(меню) - вывести меню низшего уровня  приложения  на
                             экран;
             
             View(просмотр)-  дать пользователю возможность просмотра
                             всей или части одной или наскольких таб-
                             лиц;
             
             Report(отчет) - дать пользователю  возможность  выводить
                             на  печать,просматривать  на  экране или
                             записать в виде внешнего  файла  опреде-
                             ленный отчет по задаче;
             
             Data  entry  -  дать  пользователю  возможность доввести
             (ввод данных) новые записи в однуу или несколько таблиц;
             
             Edit - дать пользователю возможность откорректи(редакти-
             рова- рлвать некоторые или все записи в одной
              ние)           или нескольких таблицах;
             
             Script - дать возможность отработать программу на  (пог-
             рамма) языке PAL при выборе данного режима;
             
             Help(средство - вывести экран помощи для использователя;
             помощи)
        
             Not  defined  -  Обойти  на данный момент привязку опре-
             де(работа с не- ленного действия к пункту меню  приложе-
             ния;
              определенным
              пунктом меню)
        
             Cancel  -  возврат  к  меню верхнего уровня создаваемого
             (прекращение приложения при выборе данного режима.
              работ)
             
             
                   6-2. Меню выбора действий (Action menu).
          
        
             Меню выбора действий - сердцевина процесса создания при-
         ложения. Его девять режимов покрывают все основные  действия
         системы  PARADOX  За  исключением  режима  запуска  программ
         (Script), каждый из режимов позволяет  задавать  необходимые
         действия  в  диалоговом  режиме в среде Personal Programmer.
         Помните, что находясь в меню  выбора  действий,птем  нажатия

                             - 20 -
         клавиши ELS вы имеете возможность вернутся на меню более вы-
         сокого  уровня - меню привязки действий. И уже из последнего
         вы можете закончить этап работ по  созданию  приложения  или
         томенить все, что было вами за сеанс работы сделано.
             Что произойдет при выборе вами конкретного действия. За-
             казав действие, которое будет связано с определнным
         пуунктом  пользовательского меню, будете получать вопросы от
         Personal Programmer о всех сууществующих моментах. Этот про-
         цесс будет определяться выбранными вами действиями:
             а) Для режимов Not Defined и Cancel не требуется далней-
         шей информации. Personal Programmer выполнит казанное дейст-
         вие и вернет вас меню привязки действия для продолжения  ра-
         боты.
             б)Для режимов Menu, Script и Help вы должны будете отве-
         тить  на запрос о создаваемых меню, программы или экрана по-
         мощи, по еоторым будуут производится привязки к определенно-
         му пункту работ вашего приложения. Процесс определения  меню
         выполняется по правилам, приводимым в главе 5 (Создание меню
         приложения).  Привязки конкретной программы на языке PAL бу-
         дет просто означать, что вы объявляете имя вышей  программы,
         которая  будет  отрабатывать по заданию определенного режима
         меню приложения. Задав создание экрана помощи  вы  получаете
         возможность  вводить  интересующую  вас информацию используя
         особогго вида генератор форм системы PARADOX.
            в)Для режимов View (просмотр), Report (отчет), Data Entry
         (ввод данных) и Edit (редактирование) вам прийдется по  зап-
         росам точно определить, какая информация должна быть выведе-
         на  на  экран, распечатана в виде отчета, введена или откор-
         ректирована согласно правилам, приводимым ниже.
            
                     Выбор таблиц.
            
            Сначало авс поросят  определить  таблицы  используемые  в
         операции привязки действий. У вас четыре возможности:
            
            Select Table - Выбор таблицы - выбрать одну или несколько
                           таблиц по отдельности;
            
            All  Tables  - все таблицы - выбрать все таблицы, задей-
                           ствованные для работы вашего приложения;
            
            DO-IT!       - выполить - дать знать Personal Progremmer,
                           что выбор таблиц законен;
            
            Cancel       - прекратить работу -  дать  знать  Personol
                           Prog rammer, что вы отменяете все действия
                           по выбору таблиц и хотите вернутся в  меню
                           выбора действия.
            
            Режим  Select Table высвечивает список всех таблиц, кото-
         рые вы определили для вашего приложеия (см. главу 4 -  выбор
         таблиц). Из этого списка вы можете заказть одну или несколь-
         ко  для  выполнения  данного этапа работ. Соответственно, вы
         можете выбрать режим All Tables, чтобы иметь доступ ко  всем
         таблицам вашегш приложения. Другими словами, система PARADOX
         хранит  список  выбранных выми таблиц. Если вы удовлетворены
         этим списком,нажмите клавишуу F2 или задайте режим DO-IT! из

                             - 21 -
         меню работ.
            
               6-3. Выбор таблиц.
          
            
               2. Определение полей.
            
            Затем выс попросят создатьэкран выбора полей, по  кторому
         вы определите, какие поля вам будут нужны для данного дейст-
         вия. Этот прцесс зависит от заказанной вами операции,а также
         от того, заказали ли вы одну или несколько таблиц.
            
              Создание экрана выбора полей для одной таблицы.
            
            Анологично  созданию  запроса  (/////) в системе PARADOX,
         операция создания экрана  выбора  полей  (view)  в  Personal
         Programmer позволяет вам заказать поля для вывода. Таким об-
         разом,  если вы определите экран выбора полей для одной таб-
         лицы, то вы получите меню  с  двумя  возможными  вариантами:
         Select Fields (выбор полей) и All Fields (все поля).
            
            Select  Fields  - выбор полй - использоване формы запроса
                             для указания требуемых полей;
            All Fields      - все  поля -  использование  всех  полей
                             таблицы для данного действия.
              
            Запомните,  если вы выбрали режим Select Fields, то у вас
         есть возможность ввести здесь критерий выборки (см. ниже).
            Если у выс возникнет необходимость выбрать поле для  опе-
         раций  Report,  Data Entry или Edit (для которых меню заказа
         полей не предусмотренно) сделайте следующее: пометите только
         те поля, которые вам будут нужны в  спецификацию  формы  или
         отчета,  или ограничьте доступ пользователя к полям таблицы,
         введя дополнительные пароли для нее.
                 
                   Создание экрана выбора полей для нескольких
                          таблиц одновременно.
            
            Если вы собираетесь осуществить  операции  с  несколькими
         таблицами одновременно, Personal Programmer попросит создать
         вас экран выбора полей для нескольких таблиц, связанных друг
         с другом. Создание экрана подобного вида подробно описывает-
         ся  в главе 10 ("Вопросы повышенной сложности"), оно требует
         предворительно организованной таблицы "map" для тогго, чтобы
         соотнести данные из одной исходной таблицы (source table)  к
         двуум или более таблицам выхода (target tables). Имеется два
         пути для этого:
          
            Create        -  создать  -  построить новый экран выбора
                             полей нескольких таблиц, заполняя  формы
                             запроса;
            
            Borrow        -  взять  -  использовать  уже существующий
                             экран выбора полей.
            
            Создание нового экрана выбора полей будет сосстоять в за-
         поминании  форм  запроса,  имеющего  целью связать выбранные

                             - 22 -
         таблицы и указать поле выбора, подобно тому, как это делает-
         ся в режиме Modify/Multi Entry/Set Up системы  PARADOX  (см.
         главу  9 пособия Paradox User s Guide). Помните, что на этом
         этапе вы не можете указывать критерии выбора в формах запро-
         са - это следующий этап. Здесь вы только даете указания сис-
         теме, как будут объеденятся таблицы и указываете поля вывода
         информации. Экраны выбора полей для нескольких таблиц,  соз-
         даваемые  посредством Personal Programmer для операций прос-
         мотра данных и выдачи отчета по ним, могут включать и  внеш-
         нее  объеденение, позволяющее включать несыязанные записи из
         одной таблицы в другую. См. "Внешнее объединение"  глава  10
         (Вопросы повышенной сложности) для более подробного ознаком-
         ления.
             Если  экран  выбора  уже  создан, вы можете использовать
         его, вызвыв по режимуу Borrow и указав имена исходных таблиц
         и таблицы map, или же дав указание на пункт меню, где вы ра-
         нее определяли этот экран.
             
                  3. Как определить, какие использовать записи.
             
             Затем, практически при всех операциях с таблицами одина-
         ково за исключением режимов ввода данных и  некоторых  видов
         редактирования, Personal Prognammer задает вопрос, будете ли
         заказывать  некоторое подмножество записе для вывода, редок-
         тироване и т.п. Вы можете ограничить число выводимых записей
         как для одиночных, так и для нескольких  связанных  таблиц.У
         вас две возможности:
             
             Select Records - выбор действий - создать запрос для вы-
                              бора записей;
             
             All Records    - все  записи - отобразить, дать откорре-
                              ктировать или вывести в отчет все запи-
                              си или ее отображении.
             
             Если вы выберете режим Select Records, то на экране поя-
         вится  форма  запроса для вывода таблицы или ее отображения.
         Запомните ее, вводя критерии выборки нужных вам записей, как
         это описано в главе 4 (ASK) пособия Paradox  User  s  Guide.
         Поскольку вы осуществляете выборку записей, вы не можете ис-
         пользовать:
             -знаки отметки выбираемых полей (F6,  ALT/F6,  поскольку
         вы определили поля на предедущем этапе работы);
             -знак ввода "примера" F5 для определения элементов срав-
         нения  (т.о. вы не можете соеденить цепочки запросов опрера-
         торами AND и OR);
             -операторы cabe, insert, delete, changeto и find.
             Если возникнет необходимость дать  пользователю  возмож-
         ность  самому  задавать критерии выборки в процессе работы с
         вашим приложением, в форму запроса следует вместо определен-
         ных  значений  включать  так  называемые  тильда-переменные.
         Тильда-переменные  -  это  некоторые цепочки символов, перед
         которыми ставится знак тильда ( ). Когда вы закончите форми-
         рование запроса, Personal Programmer  задаст  вопрос,  каким
         образом  запросить  пользователя  ввести значения для каждой
         определенной таким образом переменной. Этот процесс описан в
         примерах 6-2, 6-3 ниже в этой главе и  подробнее  описаны  в

                             - 23 -
         главе 10 (Вопросы повышенной сложности).
             Вас также просят указать тип вводимых данных. В большен-
         стве  случаев  вы  можете  взять тип данных, предназначаемый
         Personal Programmer. Однако, если  предлогатся  использовать
         вводимые данные для арефметических вычислений (например, те-
         кущая  дата - n дней), то может возникнуть необходимость по-
         менять тип данных.
              Форма запроса, созданная на данном этапе,не используют-
         ся для выбора полей,это было сделано ранее. Если вы  ограни-
         чить  число  полей  в одной тавлице для режимов Report, Data
         Entry или Edit, включите нуужные вам поля в  описание  формы
         или  отчета,  или  же ограничте права доступа пользователя к
         таблице.
              
                  4. Создание форм и отчетов.
              
              На данный момент вы показали какуую информацию вы хоти-
         те получить, следующий этап работы - каким образом ее предс-
         тавить: Vieew, Edit, Data Entry.
              Если вы не работаете с отчетами, то вам будет предложе-
         но меню следующего вида:
          
              Form View    - для  вывода  одной записи за шаг работы,
                             используя либо стандартную, либо зарание
                             созданную пользователем форму;
              
              Table View   - вывод данных в табличной форме;
              
              Form Toggle  - дать возможность пользователюменять  выб-
                             ранный режим путем нажатия клавиши F7.
              
              Обратите  вимание,  что  гениратор  создания приложения
         версии 1.1 давая возможность высвечивать данные только в ви-
         де формы. Personal Programmer позволяет  высвечивать  данные
         еще и в табличной форме.
              Если  вы выбрали режим высвечивания формы, то вам будет
         задан вопрос, какая форма будет использоваться для просмотра
         таблицы или нескольких таблиц одновременно:
          
              Design - выход в средство создания новой формы  системы
                                     PARADOX;
                      
              Borrou - использовать уже созданную и записсанную с оп-
                             ределенным именем форму;
                      
              Standard - вызвать стандартную  форму  систему  PARADOX
               Form для таблицы.
              
              Подробная  информация о создании форм для таблиц содер-
         жится в главе 11 (Формы) пособия Paradox User s Inide.
              При работе с отчетами, вас попрося задать описание  от-
         чета с помощью меню:
          
              Design - использовать генератор отчетов системы PARADOX
                             для создания нового отчета;
                                
              Borrou - использовать ууже созданный и записенный с оп-

                             - 24 -
                             реденным именем отчет;
                      
              Standard  -  выдатьстандартный  отчет  системы PARADOX.
               Report
        
             Подробная  информации о создании отчетов содержится в главе
         12 (Reports) пособия Paradox User s Inide.
             Затем вы получите запрос о том, куда нужно вывести сфор-
         мированный отчет.
          
             Printer       - распечатать отчет;
             Screen        - высветить отчет на экране;
             File          - записать отчет в виде файла.
             
               
                 5. Определение установочных значений.
             
             И, наконец, для режимов Data Entry  и  Edit  вам  дается
         возможность ограничить через которые пользователь может вво-
         дить  или  редактировать записи. На экране появляется меню с
         четырьмя режимами.
             
             Settings      - создать правила проверки на достоверность
                             информации и устоновить,  каким  образом
                             информация вводится в таблицу;
             
             Insert Delete - определить, может ли  пользователь  вво-
                             дить/  удолять  записи (не применяется в
                             режиме Data Entry);
             
             DO-IT!        - записать  все определенные на данный мо-
                             мент  установки (аналогично нажатию кла-
                             виши F2);
             
             Cancel        - отменить все определенные на  данный мо-
                             мент установки и возвратиться в предеду-
                             щее меню форм.
             
             Ечли вы выбераете  режим  Settings  Personal  Programmer
         высвечивает вым пустую запись либо в виде данных, либо в ви-
         де  таблицы, в зависимости от сделанного ранее выбора. Здесь
         вы можете задать установочные значения для нужного вам поля.
         Затем вы можете нажать клавишу F10 - для получения меню  ра-
         бот из четырех режимов:
             
             Format        - изменить вид выдачи числовых данных  или
                             дать на экран;
             
             Valcheck      - установить правила проверки на достовер-
                             ность для текущего поля;
             
             DO-IT!        - запомнить новые установленные значения и
                             возвратиться  в предедущее меню Settings
                             аналог нажатию клавиши F2);
             
             Cancel        - отметить любые сделанные вами  установки
                             и возвратиться на шаг назад в работе.

                             - 25 -
             
             И,  снова,  определение  установочных значений во многом
         похоже на то, как это производится  в  системе  PARADOX.(Для
         более детальной информации см. гл.9 (Modify) и 10(Image) по-
         собия Paradox User's Guide).
             Помните, что устоновки на достоверность данных будут от-
         носится к любому последующему режиму работ с этой таблицой.
             
                     Как вернуться на шаг назад?
             
             Как всегда имеют место два пути, вернуться на шаг назад,
         если вы сделали ошибку:
             -если на экране есть меню или подсказка - нажмите клави-
              шу ESC;
             -если на экране нет ни меню, ни подсказки (например, при
              создании подменю или создание экрана просмотра для нес-
              кольких таблиц) нажмите клавишу [F10].
             Вы увидите меню из двух режимов как минимум:
                                 DO-IT!    Cancel
              DO-IT!   - закончить  ваши действия и перейти к следую-
                         щему этапу (аналог нажатия клавиши F2)
              Cancel   - отменить все сделанные  операции  и  возвра-
                         титься  на  шаг назад (при этом вас попросят
                         потвердить правильность желаемых действий).
             Другие режимы также могут присутсвовать на экране  меню.
         Это  зависит  от  вида  выполняемой вами работы. Помимо всех
         предлогаемых вариантов работы вы также можете нажать клавишу
         [Esc] и возвратиться на шаг назад.
             
        
                                Создание подменю.
             
             Menu  View  Report  Data  Entry  Edit  Script
             
             Чтобы привязать подменю к режиму работы основного  меню,
         выберете  режим  Specify  Action  из  меню привязки дейсвий
         (Definition menu), затем выберете режим Menu из меню  выбора
         действий  (Action).  Подменю определяются по темже правилам,
         что и основное меню (см. главу 5 -  Создание  меню  приложе-
         ния).  Также как и основное меню каждое подменю может содер-
         жеть до 15 пунктов режимов работ  и  каждое  может  вызывать
         подменю следующего уровня до 10 уровней в иерархии.
             Единственное  отличие  состоит  в том, что хотя Personal
         Programmer автоматочески включает режим Leave (выход) в  ос-
         новное  меню любого приложения, режим Cancel для возврата из
         подменю в меню более высокого уровня автоматически не  появ-
         ляется.  Это  делается потому, что пользователь всегда может
         нажать клавишу [ESC] для выхода из подменю. Вы можете  вклю-
         чить  режим  Cancel,  если  считаете это нужным, с описанием
         что-то вроде: "Возврат в основное меню". Позднее, не забудь-
         те привязать действие Cancel к режиму меню Cancel.
             Когда  вы  создадите  некоторое  подменю,  то   Personal
         Programmer  ожидает,  что  вы определите его режим работы до
         того, как перейти к работе с пунктами  меню  более  высокого
         уровня. Если вы пока не готовы сделать привязку к этим режи-
         мам,  то  определите  их  как NotDefined. Вы позднее сможете
         вернуться и сделать нужные вам изменения.

                             - 26 -
             
             
                                  Просмотр таблиц.
             
             Menu  View  Report  DataEntry  Edit  Script  Help
             
             Для того, чтобы разрешить пользователю просмотр информа-
         ции из одной или нескольких таблиц, выберете режим  View  из
         меню выбора действий. Personal Programmer по просит вас точ-
         нее определить, какую информацию вы хотите иметь на выходе:
             1. Указать необходимые одну или несколько таблиц.
             2.  Для  одиночной  таблицы задайте режим All Filds (все
         поля) или примените запрос для указания  нужных  полей.  Для
         нескольких таблиц создайте или определите экран выбора полей
         по этим таблицам.
             3.  Выберете режим All Records или используйте созданный
         ранее запрос, содержащий критерии выборки записей.
             4. Определите, будете ли вы использовать  отображение  в
         виде  формы  или  таблицы и какую конкретную форму (если она
         уже создана) вы хотите видеть.
             
                               6.1. Создание подменю.
             
             Вспомните, что при создании  основного  меню  приложения
         VIDEO (см. гл. 4) заданный режим работ "Запрос" должен был в
         свою  очередь  вызывать  меню следующего уровня, из которого
         пользователи могли бы выбирать варианты опроса системы (либо
         потребители, либо фильмы). Меню низшего уровня  нужны  также
         для режимов "Отчеты" и "Ведение БД".
             Начните с меню выбора действий на экране, при этом пункт
         основного  меню  приложения "Запросы" находится в освещенном
         мигающем прямоугольнике (конец примеров 5-1 и 5-2).
             1. Выберите режим Specify Action из меню привязки дейст-
         ви, чтобы попасть в меню выбора действий.
             2. Выберите режим Menu меню выбора действий. Тотчас же в
         центре экрана высветится пустая рамка  для  создания  вашего
         подменю.
             3. Следуйте правилам, которые вы отрабатывали при созда-
         нии  при  создании основного меню приложения (пример 5-1), и
         создайте подменю со следующими режимами работ:
             
                    Выбор                Объяснения
                Поставщики           Запрос о поставщиках
                Фильмы               Запрос о кинофильмах
                Выход                Возврат в основное меню
             
             4. Когда вы закончили процесс создания подменю и  прове-
         рили, не опустили ли вы что-либо, нажмите клавишу [F2]. Сно-
         ва  появится меню привязки действий; а первый из режимов ра-
         бот вашего подменю "Поставщики" будет находиться в  освещен-
         ном  мигающем  прямоугольнике. Вы можете произвести привязку
         действий этому пункту работ прежде чем снова вернетесь к ра-
         боте с режимами работ основного меню вашего приложения.
             Как и другие операции, режим View достаточно гибок, что-
         бы уменьшить объем отображаемой информации. Запросы, которые
         вы формируете для указания по каким полям и записям вы хоти-
         те видеть данные, позволяют вам выбирать информацию из боль-

                             - 27 -
         ших БД. Обычно, чем более тщательно и осторожно  вы  сужаете
         диапазон  отражаемой  информации, тем легче будет работать с
         вашим приложением.
             
                       6.2. Привязка отображений для просмотра
                             информации к пунктам меню.
             
             Вы работаете с подменю режима работ "Запросы"  основного
         меню вашего приложения VIDEO. "Запросы" означет, что вы дае-
         те пользователю возможность просмотра информации.
             Меню привязки действий должно находиться в верхней части
         вашего  экрана (конец примера 6-1). Подменю "Запросы" должно
         находиться в рамке создаваемого вами меню с пунктом "Постав-
         щики" - в освещенном мигающем прямоугольнике.
             1. Выберите режим Specify Action для вывода меню  выбора
         действий.
             2.  Выберите режим View из меню выбора действий. Вы уви-
         дете метю выбора таблиц для того,  чтобы  вы  могли  указать
         нужные для работы таблицы.
             3.  Выберите  режим Select Table. Вы увидете список всех
         таблиц, задействованных в вашем приложении.
             4. Выберите таблицу "Customer" из споска и нажмите  кла-
         вишу [F2] для завершения процесса выбора таблиц.
             Затем  Personal Programmer спросит вас, будете ли вы вы-
         бирать отдельные поля.
             5. Поскольку вы хотите дать возможность пользователю ви-
         деть всю информацию об интересующем его потребителе, выбере-
         те режим All Fields.
             Если по какой-либо причине вы хотите ограничить диапазон
         выводимой  информации  вам  следует  заказать  режим  Select
         Fields,  затем  заполнить  форму запроса для указания нужных
         вам полей.
             Затем Personal Programmer  спросит  вас,  хотите  ли  вы
         уменьшить число выводимых записей.
             6. Поскольку вы хотите дать возможность пользователю са-
         мому  выбрать,  по  какому потребителю ему нужна информация,
         выберете режим Select Records. Вы увидите форму запроса  для
         таблицы Customer.
             7.  Для  того, чтобы пользователю выводилась подсказка о
         вводе  имени  и  фамилии  потребителя,  в  поле  LastName  и
         FirstName  вы вводите тильда-переменные ~lname и ~fname (см.
         рис. на стр. 53).
             8. Нажмите  клавишу  [F2],  чтобы  дать  знать  Personal
         Programmer,   что   вы  закончили  ввод  критериев  выборки.
         Personal Programmer теперь задает вам вопрос,  каим  образом
         запросить  пользователя о необходимости ввода данных в пере-
         менную lname.
             9. Введите текст: "Введите фамилию потрабителя и нажмите
         клавишу [ENTER]".
             Personal Programmer предложит вам тип данных A20 для пе-
         ременной lname  (это  тип  данных  поля  Last  Name  таблицы
         Customer).
             10. Если вас это устраивает, нажмите клавишу [ENTER].
             11.  Повторите  шаги  9 и 10, чтобы ввести подсказку для
         ввода данных об имени потребителя: "Введите имя потребителя"
         и согласитесь с предложенным типом данных A10 для переменной
         fname.

                             - 28 -
             Теперь Personal Programmer хочет получить инструкции  от
         вас, каким образом вывести данные для пользователя.
             12.  Если  вы  хотите заказать отображение в виде формы,
         выберите режим FormView.
             Следующее меню спросит вас, какую именно форму вы хотите
         использовать.
             13. Чтобы создать новую форму выберите режим Design.
             - На вопрос, какую форму вы будете  создавать,  выберите
         номер 2.
             -  На  вопрос  об  описании данной формы, введите: Форма
         отображения данных о потребителе, и нажмите клавишу [ENTER].
             - Когда появиться шаблон для создания формы, сделайте ее
         похожей на приводимую ниже картинку. (для того, как это  де-
         лается,  просмотрите  главу 2 (Формы) пособия Paradox User's
         Guide.
             - Нажмите [F2], чтобы записать созданную форму.
             Поскольку на этом кончается процесс определения действия
         View, вы вы вернетесь в меню выбора  действий  со  следующим
         пунктом меню "Запросы" (Фильмы) в освещенном мигающем прямо-
         угольнике.
             15. Для описания действий по режиму Фильмы вы производи-
         те  аналогичные  действия. Ниже приводится укороченный вари-
         ант:
             - Выберите режим View из меню выбора действий.
             - Используйте режим  Select  Table  для  выбора  таблицы
         Films и нажмите клавишу [F2].
             - Выберите режим All Filds.
             -  Выберите  режим  Select Records и введите: текст like
         ~film в поле Film Name шаблона запроса  для  таблицы  Films.
         Нажмите [F2].
             При  этом  оператор  like позволит пользователю получить
         информацию о фильме, даже если  он  сделает  орфографическую
         ошибку при вводе названия фильма.
             При  запросе  о  подсказке для ввода данных в переменную
         film, введите: "Введите название интересующего вас фильма  и
         нажмите  клавишу  ввода."  Сщгласитесь  с предлогаемым типом
         данных A30 и нажмите снова клавишу ввода.
             - Выберите режим Form View. Вместо того, чтобы создавать
         новую форму, закажите режим Borrow.  Единственная  имеющаяся
         форма (под название "Форма редактирования информации о кино-
         фильмах")  поквится в списке имеющихся форм для таблицы; за-
         кажите ее, нажав клавишу ввода.
             Поскольку на этом кончается работа с пунктом меню "Филь-
         мы", перед вами снова появится меню выбора действий со  сле-
         дующим  пунктом меню "Запросы" - Выход - в освещенном мигаю-
         щем прямоугольнике.
             16. Режим "Выход" позволит пользователю вернуться из ме-
         ню "Запросы" в основное меню приложения.  Чтобы  осуществить
         пивязку  этого действия выберите режим Cancel из меню выбора
         действий. Поскольку режим "Выход" в  этом  подменю  попросту
         дублирует  возможность,  предоставляемую при нажетии клавиши
         [ESC], то во всех последующих подмменю приложения VIDEO  она
         будет  опущеа  (см.  Возврат  к меню более высокого уровня -
         данной главы).
             Теперь подменю "Запросы" будет  замещено  основным  меню
         создаваемого приложения, причем в освешенном мигающем прямо-
         угольнике будет уже находиться пункт "Отчеты"

                             - 29 -
             -  Замечание: Если вы находитесь в режиме Modify для ва-
         шего приложения,  напоминаем,  что  вы  должны  предпринять,
         прежде чем перейти к отработке следующего примера:
                 1.  Используйте  клавиши [ESC], [ENTER], [->] и [<-]
                 для того, чтобы передвинуться к следующему определя-
                 емому режиму работ (в нашем случае - пункт основного
                 меню "Отчеты"). 2. Нажмите клавишу [F10] - меню, вы-
                 берите режим Action с тем, чтобы дать знать Personal
                 Programmer о вашем  намерении  произвести  некоторые
                 изменения в действиях, выполняемых по вызову данного
                 пункта  меню  вашего  приложения.  3. Выберите режим
                 Define для осуществления этого. Теперь вы можете пе-
                 рейти к примеру 6-3.
             
             
                              Вызов отчетов на печать.
             
             Для вывода отчета на печать произведите привязку требуе-
         мого пункта вашего меню к режиму Report меню  выбора  дейст-
         вий.
             При этом Personal Programmer задает вам следующие вопросы:
             1. Закажите нужную вам таблицу/таблицы.
             2.  Если  вы заказали несколько таблиц, укажите или соз-
         дейте экран вывода данных по ним.
             3. Выберите режим All Records или  создайте  запрос  для
         отбора нужных вам записей.
             4.  Задайте нужные спецификации отчетов и дайте указание
         Personal Programmer, будете ли вы выводить на печать,  экран
         или во внешней файл ваш отчет.
             Обратите  внимание, что вам нет необходимости определять
         поля для отчета по единичной таблице, поскольку это уже сде-
         лано в спецификации отчета по ней.
             
             
                               6.3. Создание отчетов.
             
             Выбрав режим Reports из основного меню приложения VIDEO,
         пользователь должен увидеть список всех имеющихся  вариантов
         отчетов, из которых пользователь будет сам выбирать ему нуж-
         ную информацию.
             Нажмите  с  меню  выбора  действий (конец примера 6-2) с
         пунктом основного меню приложения Отчеты - в освещенном  ми-
         гающем прямоугольнике.
             1.  Для того, чтобы создать подменю Отчеты, выберете ре-
         жим Menu из меню выбора действий. В прямоугольнике для ввода
         наименований введите следующее:
             
                    Выбор                Пояснения
              Каталог                Вывод списка всех к/фильмов
              Просроченные_фильмы Вывод списка к/ф, срок возврата ко-
                                        торых просрочен
              Фильмы_в_прокате Вывод отчета о частотности использова-
                                        ния к/фильмов
             
             (см. пример 5-1, чтобы  вспомнить,  как  это  делается).
         Нажмите  клавишу [F2], чтобы закончить создание этого подме-
         ню. Вы тотчас же увидете меню привязки действий вместе с ва-

                             - 30 -
         шим новым подменю Отчеты, причем первый пункт подменю -  Ка-
         талог будет находиться в освещенном мигающем прямоугольнике.
             Выбор  режима Каталог позволит пользователю системы рас-
         печатать список всех имеющихся к/филмов по их категориям.
             2. Выберите режим Specify Action,  чтобы  получить  меню
         выбора действий.
             3. Выберите режим Report.
             4.  На вопрос, какие таблицы нужно включить, используйте
         режим Select Table для выбора двух таблиц: films и  filmcat.
         Нажмите [F2].
             Так  как  вы  заказали  две таблицы, Personal Programmer
         попросит вас создать экран отображения для этих двух таблиц.
             5. Поскольку у вас нет заранее созданного экрана отобра-
         жения по этим таблицам, вы должны выбрать режим Create.
             Теперь Вы видите на экране 2 схемы для формирования зап-
         роса по этим таблицам. Заполните  их  согласно  приведенному
         рисунку  (стр.  56). Вы формируете экран отображения по этим
         таблицам, связывая их по полям Category и задавая вывод всех
         столбцов  кроме  одного  для  избежания  повторения  столбца
         Category.
             7. Нажмите [F2].
             8.  Поскольку  вам нужен список всех к/фильмов, выберите
         режим All Records. При этом вы моглибы заказать режим Select
         Records для распечатки информации по определенной  категории
         к/фильмов  или  дать возможность пользователю самому опреде-
         лить, какие к/фильмы ему будут нужны.
             Теперь вы получите запрос о том, какую спецификацию  от-
         чета вы хотите использовать.
             9. Чтобы создать новый отчет, выберите режим Design.
             - Когда вас спросят, какую спецификацию вы будете созда-
         вать, ответьте 1.
             -  Когда  вас  попросят, ввести наименование для отчета,
         введите: Каталог к/фильмов, и нажмите клавишу ввода.
             - Когда вас спросят о типе вашего отчета, закажите  таб-
         личный (Tabulat).
             -  Когда появится предлагаемая спецификация отчета, сде-
         лайте ее похожей на приводимый ниже рисунок (стр. 57).
             - Нажмите [F2] для завершения создания спецификации  ва-
         шего отчета.
             Затем  Personal  Programmer  спросит  вас, куда посылать
         этот отчет.
             10. Выберите режим Printer.
             На этом формирование отчета Католог заканчивается. Снова
         появляется меню привязки действий  и  подменю  приложения  с
         пунктом: Просроченные_фильмы - в освещенном мигающем прямоу-
         гольнике.
             11. Ипсользуйте ту же процедуру для определения отчета о
         просроченных к/фильмах:
             - Выберите режим Report из меню выбора действий.
             - С помощью режима Select Table закажите таблицы Orders,
         Films и Customer, и нажмите [F2].
             -  Поскольку мы создали экран отображения по этим табли-
         цам, воспльзуемся режимом Berrow. Personal Programmer запро-
         сит вас о дальнейшей информации.
             - Выберите режим Name и на  запрос  об  именах  исходной
         таблицы и таблицы-map закажите Oversrc и Overmap.
             - Выберите режим Select Records и заполните форму запро-

                             - 31 -
         са  по аналогии с рис. на стр. 57. По этим условиям мы отби-
         раем только те к/фильмы, срок возврата которых не проставлен
         в таблице.
             - Воспользуйтесь режимом Berrow и  закажите  отчет  #  2
         (Просроченные к/фильмы). Выберите режим Printer.
             12.  Режим  "Фильмы  в прокате" должен выводить вместе с
         информацией о к/филмах информацию о том, есть ли на них  еще
         заказы.  Для достижения этого следует воспользоваться специ-
         альным способом объединения таблиц, который называется внеш-
         ней связью (outer join).
             - Выберите режим Report из меню выбора действий.
             - Закажите таблицы Films и Orders.
             - Создайте экран отображения по таблицам,  как  показано
         на рис. стр.58. Знак "!" указывает на внешнюю связь, которая
         ознечает,  что  включены все фильмы, даже те, для которых не
         было заказов. Для подробного ознакомления см. гл. 10 (Вопро-
         сы повышенной сложности).
             - Выберите режим All Records.
             - Выберите режим Design и создайте спецификацию отчета 1
         под названием "фильмы в прокате" как показано на  рис.  стр.
         58.
             - Выберите режим Printer.
             На этом заканчивается процесс привязки действий к режиму
         подменю "Отчеты". У вас на экране - снова меню выбора дейст-
         вий  и  основное  меню приложения с режимом "Ведение БД" - в
         освещенном мигающем прямоугольнике.
             
             
              
                                   Ввод данных.
             
             Режим Data Entry меню  выбора  действий  позволяет  дать
         возможность пользователю, работая в приложении, осуществлять
         ввод  новой информации. Также как и в системе PARADOX, режим
         Data Entry предпочтительнее режима Edit при вводе значитель-
         ного количесва записей.
             Personal Programmer запросит:
             1. Ввести необходимые для работы таблицы.
             2. Для более, чем одной таблицы - создать экран отображения.
             3. Определить, какого вида форму ввода вы будете исполь-
         зовать (табличную или нет).
             4. Задать условия  проверки  на  достоверность  вводимых
         данных и изменить установочные значения.
             
                       6-4. Ввод данных в приложении VIDEO.
             Режим  "Введение  БД" основного меню пользователя должен
         выводить подменю, позволяющее пользователю  вводить/редакти-
         ровать   записи   в   таблицах  потребителей  или  к/фильмов
         (Customer или Films).
             Продолжаем с момента окончания работ примера 6-3. В вер-
         хней части экрана - меню выбора действий, под ним - основное
         меню пользователя с режимом "Ведение БД" - в освещенном  ми-
         гающем прямоугольнике.
             1. Для создания подменю режима "Ведение БД" выберите ре-
         жим  Menu  из  меню  выбора действий. В прямоугольнике ввода
         пунктов меню введите следующее:
             

                             - 32 -
                    Выбор                Пояснения
              Потребители            Ввод новых потребителей
              К/фильмы               Ввод новых к/фильмов
              Редактирование Редактирование таблиц Customer или Films
             
             (см. пример 5-1). Нажмите [F2]. Появится  меню  привязки
         действий вместе с новым подменю для режима "Ведение БД". Вы-
         бор режима "Потребители" должен дать возможность пользовате-
         лю вводить информацию о новых клиентах.
             2.  Выберите  режим  Specify Action, чтобы получить меню
         выбора действой.
             3. Выберите режим Data Entry.
             4. На вопрос о требуемых таблицах, выберите режим Select
         Table и закажите таблицу Customer. Нажмите [F2].
             Вас попросят сообщить, как вы хотите представить таблицу
         Customer.
             5. Дайте пользователю возможность переключения с  одного
         вида  ввода  информации  на  другой (форма или таблица). Для
         этого выберите режим FormTable.
             Следующее меню запросит о том, какую форму  использовать
         при работе в режиме форм.
             6.  Выберите режим Borrow и когда появится меню форм за-
         кажите уже готовую форму под названием - "Форма ввода инфор-
         мации о потребителях".
             Далее последует вопрос об определении  критериев  досто-
         верности ввода информации.
             7.  Поскольку вы хотите иметь уверенность, что пользова-
         тель всегда введет фамилию, имя и номер потребителя, выбери-
         те режим Settings.
             8. Когда на экране появится заказнная форма, передвиньте
         курсор к полю LastName (вообще говоря, он уже стоит  там)  и
         нажмите клавишу [F10] - Menu.
             Personal  Programmer спросит вас, какие установки вы хо-
         тите сделать.
             9. Выберите режим ValChec, затем Define и Required, под-
         твердите выбор, ответив Yes.
             10. Повторите шаги 8 и 9 для полей First Name и Customer #.
             11. Нажмите клавишу [F2] для возврата в меню  установки,
         снова  нажмите клавишу [F2], чтобы запомнить ваши установоч-
         ные значения.
             Повторите аналогичные процедуры для  режима  "К/фильмы",
         по которому пользователь сможет вводить данные о к/фильмах.
             12. Снова появляется меню выбора действий и подменю "Ве-
         дение  БД"  с режимом "редактирование" в освещенном мигающем
         прямоугольнике.
             
                              Редактирование таблиц.
             
             Чтобы дать возможность пользователю корректировать запи-
         си в одной или нескольких таблицах, присвойте режим Edit  из
         меню  выбора действий соответствующему пункту меню работ ва-
         шего приложения.
             Редактирование таблиц - это наиболее сложный режим рабо-
         ты пользователя, поддерживаемый Personal Programmer. В зави-
         симости от характера вашей задачи у вас может возникнуть не-
         обходимость дать более детальную информацию для этого дейст-
         вия, чтобы облегчить защиту данных в талицу. Кроме того,  на

                             - 33 -
         процесс  редактирования  накладываются некоторые ограничения
         (см. гл. 10 - Вопросы повышенной сложности).
             В процессе присвоения режима Edit - Personal  Programmer
         задаст вам несколько вопросов:
             1. Закажите таблицу/таблицы для использования.
             2.  Если было заказано несколько таблиц, то создайте или
         закажите экран отображения для них.
             3. Выберите режим All Records или используйте запрос для
         указания критерия выборки  записей  (для  единичной  таблицы
         возможность  указания  записей для редактирования может быть
         использована, если для таблицы заданы ключевые поля).
             4. Выберите форму редактирования записей (табличная  или
         нет) и при наличии готовой формы - задайте ее.
             5. За исключением случая, когда корректируются все запи-
         си  в единичной таблице, не разрешается редактировать инфор-
         мацию в ключевых полях (они должны быть защищены и объявлены
         в шаблоне формы как Display Only - "только для  просмотра").
         Если  какие-либо ключевые поля были объявлены обычными поля-
         ми, у вас будет возможность внести изменения в шаблон формы,
         чтобы предохранить эти поля от изменения.
             6. Задайте условия проверки на достоверность  и  устано-
         вочные  значения.  Вы также должны решить, дадите ли вы воз-
         можность пользователю вставлять  новые  записи  или  удалять
         старые.  По умолчанию пользователи не могут ни вставлять, ни
         удалять записи. Если вам нужны эти операции,  то  вы  должны
         задать их в явной форме.
             
                   6-5. Добавление режима редактирования записей
                                в приложение VIDEO.
             
             Если  мы  выберем режим Редактирования для меню "Ведение
         БД", то на  экране  должно  появиться  подменю,  позволяющее
         пользователю  корректировать  записи  в  таблицах  Customer,
         Films или Methods.
             Начните с меню выбора действий (конц примера 6-4) с  ре-
         жимом  Edit  меню "Ведение БД" в освещенной мигающем прямоу-
         гольнике.
             1. Создайте подменю редактирования. Для  этого  выберите
         режим  Menu  из меню выбора действий. В прямоугольнике ввода
         пунктов меню введите следующее:
             
                    Выбор                Пояснения
              Customers Корректировка данных для таблицы Customer
              Films Корректировка данных для таблицы Films
             
             (см. пример 5-1). Нажмите клавишу  [F2]  для  завершения
         процесса  создания  подменю. На экране снова появляется меню
         привязки действий  и  новое  меню  "Ведение  БД"  с  пунктом
         "Customers"  в освещенном мигающем прямоугольнике. Выбор ре-
         жима Customers должен позволить пользователю осуществить ре-
         дактирование записей из таблицы Customer.
             2. Выберите режим Specify Action для вывода на экран ме-
         ню выбора действий.
             3. Закажите режим Edit.
             4. На запрос о таблицах  выберите  режим  Select  Table,
         чтобы заказать таблицу Customer. Нажмите клавишу [F2].
             Теперь вы получите запрос о том, какие записи нужно включить.

                             - 34 -
             5.  Для  редактирования  всех записей в таблице выберите
         режим All Records. Затем вы получите вопрос о том,  в  каком
         виде вам нужна информация по таблице Customer.
             6. Для указания формы, выберите режим Form View&
             Следующее  меню  запросит вас, какую форму вы хотите ис-
         пользовать.
             7. Выберите режим Borrow и потом, когда появиться список
         форм, закажите форму под названием  "Форма  ввода  данных  в
         таблицу Customer".
             Теперь Personal Programmer спросит вас, будете ли вы за-
         давать условия на проверку достоверности данных или изменять
         установочные  условия,  позволите  ли пользователю вставлять
         или удалять записи.
             8. Поскольку вы уже задавали условия на проверку  досто-
         верности данных при работе с таблицей Customer в режиме Data
         Entry  (см. пример 6-4), они распространяются и на режим ре-
         дактирования этой таблицы.
             Оновременно с этим мы принимаем предлагаемое по  умолча-
         нию  запрещение  ввода  новых записей, поскольку эта возмож-
         ность предоставляется в режиме Data Entry. Но  поскольку  вы
         хотите  дать возможность пользователю удалять записи из таб-
         лицы Customer, выберите режим Insert Delete.
             Personal Programmer спрашивает вас,  какую  операцию  вы
         хотите разрешить.
             9.  Выберите режим Delete и подтвердите это, введя ответ
         Yes.
             10. Нажмите клавишу [F2], чтобы запомнить ваши  установ-
             ки.  Поскольку  на этом все действия с таблицей Customer
             за-
         канчиваются, на экране снова появится меню выбора  действий.
             В меню редактирования режим Films находится в освещен-
         ном мигающем прямоугольнике.
             11.  Повторите  вышеописанные действия для режима Films,
         по которму пользователь  получит  возможность  редактировать
         запоси о к/фильмах.
             Ниже приводится укороченный вариант ваших действий:
             - Выберите режим Edit из меню выбора действий.
             -  Выберите  таблицу  Films  и Filmcat и нажмите клавишу
         [F2].
             - При вопросе об экране отображения таблиц закажите  ре-
         жим Borrow/Menu. Используйте клавиши со стрелками, [ENTER] и
         [ESC],  чтобы попасть в режим Reports/Catalog. Затем нежмите
         клавишу [F10] - "Меню" и закажите режим Borrow View.
             При этом Personal Programmer  даст  вам  предупреждение,
         что  в таблицах вывода (terget tables) отсутствует однознач-
         ная взаимосвязь между записями, записи из таблицы Filmcat  в
         экране  отображения появятся более чем один раз. Вы проигно-
         рируете это предупреждение из-за боязни испортить  данные  в
         таблицах. Однако поскольку вы защитите поля Categry, объявив
         его DisplayOnly и заполняете его автоматически, пользователи
         не  могут  испортить  информацию в таблице Filmcal, если они
         будут менять информацию в поле Category. Таким  образом,  вы
         можете  проигнорировать  это  предупреждение,  нажав клавишу
         [F2].
             - Выберите режим All Records.
             - Выберите режим Form View и затем Desing. Закажите фор-
         му # 1 и назовите ее "Форма корректировки таблицы Film".

                             - 35 -
             Создейте форму по картинке  (стр.  64).  Удостоверьтесь,
         что  для  полей film # и Category description были выполнены
         действия: Fild/Place/DisplayOnly (поле film #  должно  иметь
         режим   DisplayOnly  поскольку  это  ключевое  поле  таблицы
         Films). Нажмите [F2] для указания, что процесс создания фор-
         мы закончен.
             - Поскольку вы не хотите менять форматы полей или  уста-
         новочные  значения,  и  не хотите, чтобы пользователь вашего
         приложения мог вставлять или удалять записи, на  этом  этапе
         снова нажмите клавишу [F2].
             В примере 7-1 вы вернетесь к этому вопросу и произведете
         модификацию  вашего  приложения  таким  образом,  чтобы поле
         Category description заполнялось автоматически.
             Поскольку на этом шаге  заканчивается  процесс  привязки
         режима редактирования к пункту "Ведение БД", на экране снова
         появляется  основное  меню  вашего приложения, пункт режимов
         работ которого: "Заказы"  находится  в  освещенном  мигающем
         прямоугольнике.
.
                             - 36 -
                    Ограничения на процесс редактирования.
             Редактирование данных в таблицах с использованием запро-
         сов  или  экранов отображения для нескольких таблиц - весьма
         деликатная операция. Если вы будете придерживаться ниже при-
         водимых правил, то вы избежите потерь записей и  непонятнос-
         тей с ключевыми значениями.
        
           Одиночная таблица    │     Экран отображения для
                                │       нескольких таблиц
         ═══════════════════════╪═══════════════════════════════════
         Режим All Records      │ Все таблицы выхода (target tables)
                                │ должны быть проидексированы по
                                │ ключам
         ───────────────────────┼───────────────────────────────────
         Таблица не обязательно │ Все ключевые поля таблицы выхода
         может быть проиндекси- │ должны присутствовать в исходной
         рована по ключам       │ таблице (source table)
         ═══════════════════════╪═══════════════════════════════════
         Режим Select Records   │ Ключевые поля должны быть защищены
                                │ от редактирования
         ───────────────────────┼───────────────────────────────────
         Таблица должна быть    │
         проиндексирована по    │ Ни одна запись таблицы выхода не
         ключам                 │ может появиться более чем в одной
                                │ записи исходной таблицы
                                │
         Ключевые слова должны  │
         быть защищены от       │
         редактирования         │
         ═══════════════════════╧═══════════════════════════════════
             
                            Защита ключевых полей.
             Использование запроса для определения того,  что  только
         определенные  записи  могут  редактироваться - очень удобная
         вещь. Вы можете, например, позволить  пользователю  обновить
         информацию  по таблице Customer только по определенному поч-
         товому индексу.
             При этом могут  возникнуть  некоторые  проблеммы:  Когда
         пользователь  приложения заканчивает процесс редактирования,
         система PARADOX должна возвратить отредактированные записи в
         их соответствующие места в таблице. Система должна знать ка-
         кая запись соответсвует какой записи. Та же самая  проблемма
         возникает,  когда вы производите процесс редактирования, ис-
         пользуя экран отображения для нескольких таблиц,  даже  если
         вы и не используете запрос для выборки записей.
             Система  PARADOX  может определить, какая запись откуда,
         только используя информацию ключевого  поля  для  записи!  В
         связи с этим возникает одно из ограничений на процесс редак-
         тирования в системе Personal Programmer.
         ┌─────────────────────────────────────────────────────────┐
         │     При осушествлении процесса редактирования с исполь- │
         │ зованием запросов или экранов отображения по нескольким │
         │ таблицам, таблицы обязательно должны быть проиндексиро- │
         │ ваны  по ключевым полям и данные в этих полях не должны │
         │ редактироваться.                                        │
         └─────────────────────────────────────────────────────────┘
             Для защиты ключевых полей от редактирования, используйте

                             - 37 -
         режим Form View и определите их как Dislay Only при формиро-
         вании формы для таблицы (см. пример 6-5).
             Вы можете также защитить ключевые поля от редактирования
         введя дополнительные пароли, которые ограничат права пользо-
         вателя  на поле до режима Read Only. Преимущество этого спо-
         соба состоит в том, что он может быть применен как для  таб-
         личной  формы  отображения,  так и для нетабличной. Основным
         неудобством этого метода является то,  что  это  ограничение
         распространяется  уже  и  на все другие операции с таблицей.
         Плюс к этому, Personal Programmer  не  может  контролировать
         этот вид защиты.
             При каждой возможности Personal Programmer позволяет вам
         перевести обычные поля в поля вывода Display Only. Например:
             -  Когда  вы создаете или вызываете форму редактирования
         для таблицы, имеющей запрос или входящей в экран отображения
         (для нескольких таблиц) вас спросят, будете ли вы  модифици-
         ровать форму, чтобы защитить ключевые поля. Если вы закажите
         режим  Modify,  вы войдете в режим создения формы, где у вас
         появится возможность стереть (Erase), а потом заново  ввести
         ключевое поле (Place).
             -  Если  вы  заказываете табличный режим отображения для
         таблицы, имеющей запрос или  входящей  в  экран  отображения
         (для нескольких таблиц), вы получите напоминание, что следу-
         ет  использовать  нетабличное отображение (в виде формы) или
         ограничить права на использование ключевых полей.
             Поскольку Personal Programmer  не  может  распространить
         данное  правило на уже созданные формы, вы можете проигнори-
         ровать предупреждение от Personal Programmer. Вы это сделае-
         те на собственный страх и риск. Если вы позволите редактиро-
         вать ключевые поля, вы можете либо потерять записи, либо мо-
         жет измениться порядок их записи.
             
                     Разрешение связей при работе с экранами
                       отображения для нескольких таблиц.
             Возникают дополнительные трудности при работе с экранами
         отображения для нескольких таблиц. Предположим,  что  запись
         из  таблицы  назначения появляется более, чем один раз в ис-
         ходной таблице. Например, в экране  отображения  для  таблиц
         Films  и  Filmcat  заданная категория к/фильмов появляется в
         нескольких записях таблицы Films. Если при этом пользователь
         редактирует поля в таблице Filmcat поля в одной из этих  за-
         писей,  то это приведет к конфликтной ситуации с другими за-
         писями.
             Отсюда появляется второе правило:
         ┌─────────────────────────────────────────────────────────┐
         │     При редактировании с экранами отображения для  нес- │
         │ кольких таблиц, записи в выходных таблицах должны иметь │
         │ взаимно  однозначное соответствие. Это означает, что ни │
         │ одна запись выходной таблицы не может  появиться  более │
         │ чем  в одной исходной таблице, если ее поля не защищены │
         │ от редактирования.                                      │
         └─────────────────────────────────────────────────────────┘
             Если записи выходных таблиц при использовании их в рабо-
         те с экранами отображения для  нескольких  таблиц  не  имеют
         взаимно  одназначного  соответствия,  то Personal Programmer
         выдаст вам предупреждение, что это  может  повлеч  за  собой
         противоречивость  информации.  Хотя  вам и будет предложено,

                             - 38 -
         выбрав режим Cancel, выйти ипровести редактирование  в  еди-
         ничной  таблице или заказать другой экран редактирования, вы
         можете также окончить вашу работу и нажать  клавишу  [F2]  -
         т.е. выполнить действие не беспокоясь о последствиях.
             Если  вы все-таки хотите работать с экраном такого типа,
         вам следует защитить от редактирования все поля таблицы, за-
         писи с которыми могут встретиться более одного раза. И снова
         вы можете использовать режим отображения  Display  Only  или
         ограничить права доступа пользователя к этим полям (см. при-
         мер 6-5). Более подробная информация по этому вопросу приво-
         дится в гл. 10 (Вопросы повышенной сложности).
             
             
                                ВЫЗОВ ПРОГРАММ
             
             
             Есть  вещи, которые Personal Programmer делать не в сос-
         тоянии. К ним относятся:
             - Осуществление действий по открытию и закрытию таблиц и
         записей в явном виде при многопользовательском режиме в  се-
         ти;
             -  Сложные формы защиты по паролю;
             -  Сложные  операции  по вводу или редактированию данных
         (которые используют инструментарий ввода данных - Data Entry
         Toolkit);
             - Действия, для  выполнения  которых  требуется  наличие
         таблиц, форм и т.п. в другом директории.
             Однако  вы можете добавить эти возможности в ваше прило-
         жение. Для этого скопируйте или напишите программу, выполня-
         емую в системе PARADOX (эти программы  называются  Scripts),
         которая будет выполнять нужные для вас действия, затем выбе-
         рите режим Script в меню выбора действий с тем, чтобы привя-
         зать  выполнение данной программы требуемому пункту меню ва-
         шего приложения.
             Поскольку вы можете связать режим Script только с  опре-
         деленным пунктом вашего меню, вам придется в вашей программе
         продублировать  некоторые  возможности  Personal Programmer.
         Например, вам хочется воспользоваться  расширенными  возмож-
         ностями  инструментария по вводу данных (Data Entry Toolkit)
         в вашем приложении, поэтому создаваемая вами программа долж-
         на будет выполнять весь (!) процесс по  вводу  данных.  Пос-
         кольку  вы  не можете к одному пункту меню вашего приложения
         привязать сразу два режима: Script и Data Entry (или же  оп-
         ределить  режим  Script  как  подчиненный  для  режима  Data
         Entry), ваша программа должна быть полным заменителем режима
         Data Entry.
             Когда вы выбираете режим Script из меню выбора действий,
         Personal Programmer спрашивает  вас  о  названии  вызываемой
         программы.
             Помните,  что  вызываемкая программа должна находиться в
         текущем директории, чтобы Personal Programmer смог найти ее.
         Не забудьте скопировать эту программу  в  директорий  вашего
         приложения до того, как вы запустили Personal Programmer.
             Сама  программа  может  быть  написана  в  среде системы
         PARADOX или создана в каком-либо текстовом редакторе.  Очень
         удобно сначала воспользоваться системой Personal Programmer,
         чтобы  создать  некоторое приложение максимально покрывающее

                             - 39 -
         те возможности, которые должно выполнинять создаваемое  вами
         приложение.  Затем, используя программный редактор языка PAL
         вы переводите созданное приложение в единичную или  многомо-
         дульную  программу, и корректируете ее. Затем вы снова вызы-
         ваете Personal Programmer и присваиваете эту гибридную прог-
         рамму к пункту меню вашего приложения.
             Вы можете ускорить выполнение вашей программы и предста-
         вить ее как некоторое число процедур, находящихся в  библио-
         теке.  Тогда программа, которая будет отрабатываться по выз-
         ванному режиму вашего меню, будет просто загружать и  выпол-
         нять  эти  процедуры (см. гл. 6 - Процедуры и 15 - как улуч-
         шить временные характеристики выполняемых программ в пособии
         по языку PAL (PAL User's Guide) ).
             
             
                    6-6. Вызов программы из меню приложения
             
             Режим "Заказы" основного меню приложения  VIDEO  слишком
         сложен  для Personal Programmer, чтобы рассматривать его как
         некое единичное действие. Мы хотим, чтобы была выведена  не-
         которая контрольная форма, которая:
             1) Запрашивала бы номер потребителя.
             2)  Проверяла,  присутствует  ли  заданный номер таблице
         Customer, и если да, автоматически выводила бы информацию  о
         потребителе.
             3) Запрашивала бы номер к/фильма и автоматически выводи-
         ла бы информацию о к/фильме из таблицы Films.
             4) Создавала бы соответствующую запись в таблице Orders.
             5) Выводила на печать чек для оплаты потребителя.
             Аналогичную  операцию приложение должно выполнять с дан-
         ными о возвращенных к/фильмах.
             Personal Programmer не может  присвоть  выполнение  всех
         этих  операций одному пункту меню. По этому мы для вас напи-
         сали программу на языке PAL под названием VIDENT. Сейчас  мы
         можем привязать к пункту меню "Заказы" выполнение этой прог-
         раммы.
             Начинаем  с меню выбора действий (пример 6-5). Пункт ос-
         новного меню приложения "Заказы"  -  в  освещенном  мигающем
         прямоугольнике.
             1. Выберите режим Script.
             Personal Programmer запросит вас о названии программы.
             2.  Введите  VIDENT или нажмите клавишу ввода и закажите
         его из списка имеющихся программ.
             Вот и все. Вы произвели требуемое действие. На экране  -
         снова меню выбора действий и режим "Пояснения" основного ме-
         ню приложения - в светящемся мигающем прямоугольнике.
             
                       Введение пояснений по режимам работ
                                вашего приложения
             
             Personal  Programmer  позволяет  безболезненно добавлять
         текстовые экраны, где находятся пояснения по  режимам  работ
         или подсказки, что делать дальше. Для создания экранов с по-
         яснениями вы должны воспользоваться режимом Help меню выбора
         действий и связать созданные экраны с соответствующими пунк-
         тами меню вашего приложения.
             Когда  вы закажите режим Help, вы получите пустой экран,

                             - 40 -
         в который вы можете вводить информацию в том виде,  в  каком
         она будет представлена потом пользователю вашего приложения.
         Создание  экрана помощи во многом похоже на создание пользо-
         вательской формы в  системе  PARADOX  (см.  гл.  11  пособия
         "PARADOX User's Guide").
             Вы можете:
             - Вводить любые символы с клавиатуры
             - Пользоваться клавишами передвижения курсора
             -  Нажимать  клавишу  [INS],  чтобы переходить из режима
         вставки символов в режим их замены.
             - Нажимать клавишу [DEL] и [Backspace] для удаления сим-
         волов.
             - Нажимать клавишу [F2] (DO-IT!) для указания  на  конец
         создания экрана пояснений и записи его.
             -  Нажимать клавишу [F10], чтобы вывести меню редактиро-
         вания со следующими возможностями:
                 - Area - передвинуть или стереть кусок экрана
                 - Border - нарисовать рамку или линии на экране
                 - DO-IT! - окончить создание экрана пояснений и  за-
                   писать его (аналог [F2])
                 - Cancel -  уйти  в  режим меню выбора действий.
             Обратите внимание, что меню по режиму Help отличается от
         меню создения форм системы PARADOX, поскольку в нем отсутст-
         вуют следующие возможности:
                 - Field (в экране пояснений нет полей из таблиц)
                 -  Page  (в  экране пояснений содержится только одна
                   страница)
                 - Style (вы не можете изменить шрифт в экране  пояс-
                   нений)
                 - Help (вместо этого вы должны нажать [F1] для полу-
                   чения нужной информации)
             Экран  вашего пояснения может быть очень подробным. Нап-
         ример, вы можете создать целое подменю, по пунктам  которого
         будут выдаваться пояснения. Или же вы можете привязать экран
         пояснения к каждому пункту вашего меню.
             Экраны  пояснений  по вашему приложению не выводится при
         нажатии клавиши [F1]. Они выводятся по  выбору  пользователя
         из меню приложения.
             
                6-7 Создание экранов пояснений в приложении VIDEO
             
             Выбор режима Help основного меню приложения VIDEO выдает
         на экран пояснения по всем пунктам меню приложения.
             Начинаем  с  меню  выбора действий по концу примера 6-6.
         Пункт "Пояснения" основного меню приложения должен находить-
         ся в освещенном мигающем прямоугольнике.
             1. Выберите режим Help.
             Вы получаете чистый экран, на котором можете писать свой
         текст.
             2. Используя возможности, приводимые выше, нарисуйте эк-
         ран как на стр. 70.
             3. Когда вы закончите, нажмите клавишу [F2].
             Personal Programmer записывает экран пояснений и опреде-
         ляет следующий режим работы - "Выход" -  автоматически  (см.
         ниже - Выход из приложения). Поскольку вы завершили привязку
         действий  ко  всем  пунктам  меню вашего приложения, то меню
         VIDEO уже нет на экране, а вместо него появляется меню  соз-

                             - 41 -
         дания титульного экрана для приложения.
             
                   Выход из меню - режим работ неопределен.
             
             Нет  необходимости  осуществлять привязку каждого пункта
         меню, чтобы записать или отработать ваше приложение. Заказав
         режим Not Defined из меню выбора действий,  для  конкретного
         пункта меню, переходите к работе со следующим пунктом вашего
         меню.   Соответственно,   когда   вы  выходите  из  Personal
         Programmer, а некоторые пункты вашего меню не получили  при-
         вязку к конкретным операциям, система сама определяет их как
         Not  Defined,  еще  до того, как станет создавться программа
         отработки приложения.
             И в том, и в другом случаях  результаты  одинаковы.  При
         работе в вашем приложении в случае, когда пользователь выби-
         рает  пункт меню, для которого отсутствует привязка конкрет-
         ных действий, выдается сообщение: "Режим не определен".
             Поскольку всегда существует возможность внести изменения
         в меню привязки действий для приложения (режим Modify),  нет
         ничего  страшного, что вы определяете таким образомпункт ва-
         шего меню. Действительно, обычно  сначала  создается  полная
         структура меню приложения скаждым пунктом не вызывающем меню
         следующего  уровня,  определенным  как  Not Defined. Позднее
         разработчик приложения возвращается к  введенным  пунктам  и
         осуществляет  привязку конкретных действий по решению задачи
         к ним (см. гл. 7 - Внесение изменений в  созданное  приложе-
         ние).
             
                     Возврат к меню более высокого уровня.
             
             Это последний режим работы меню выбора действий - Cancel
         - и предназначен он для возврата в меню более высокого уров-
         ня. Вообще говоря, в режиме Cancel нет особой необходимости,
         т.к.  для  возврата  на  шаг назад пользаватель может нажать
         клавишу [ESC]. Однако, если вы хотите, чтобы возможность вы-
         хода присутствовала в вашем  меню  в  явном  виде,  включите
         пункт  "Выход" в ваше меню и свяжите его с режимом Cancel из
         меню выбора действий.  Вы  это  уже  делали  в  примере  6-2
         (Inqury/Cancel).  Нет  необходимости в каких-либо дальнейших
         операциях. Действие, вызванное выбором по  меню  приложения,
         будет аналогично действию по нажатию клавиши [ESC].
             
                             Выход из приложения.
             
             Из главы 5 вам известно, что Personal Programmer автома-
         тически  вставляет последним пунктом основного менюработ ва-
         шего приложения пункт Leave (Выход). Выбор этого режима дает
         возможность пользователю уйти из приложения  и  вернуться  в
         среду системы PARADOX (в гл. 10 вы научитесь создавать "зак-
         рытое" приложение и выходить из него прямо в DOS).
             При  вызове режим Leave выдает подменю из двух пунктов:
         Yes и No.
             -  No  -  Отменить выполнение режима Leave и вернуться в
         основное меню приложения.
             - Yes - Выход из приложения.
             Режим Leave создается  автоматически  системой  Personal
         Programmer,  вы не должны с ним что-либо еще делать. Наличие

                             - 42 -
         этого режима обеспечивает выход пользователя из  приложения.
         Если  вы хотите изменить действия, выполняемые по Leave, вам
         следует внести изменения в основную  программу,  создаваемую
         системой Personal Programmer.
             
                         Как записать ваше приложение.
                  Создание титульного экрана (Splash Screen).
             
             После  того, как вы определили последний пункт основного
         меню вашего приложения, или когда вы  выбрали  режим  DO-IT!
         или  нажали клавишу [F2] из меню привязки действий, вы полу-
         чаете возможность создать титульный экран вашего приложения.
         Если вы решили его создавать, то помните, что это будет пер-
         вое, что увидит пользователь вашего приложения  одновременно
         с запросом пароля для входа в приложение.
             Режим Splash Screen предлагает вам два варианта:
             - Splash Screen - создать титульный лист для приложения.
             -  No Splash Screen - опустить титульный лист для прило-
               жения.
             Если вы зададите режим Splash Screen, то экран очищается
         и вы можете рисовать свой титульный экран. Этот процесс ана-
         логичен созданию экранов пояснений (см. выше).  Задействовав
         чуть-чуть  вашего  воображения,  вы  сможите даже графически
         изобразить название вашего приложения, используя знаки  рас-
         ширенной графики.
             Если  вы  выберите  режим No Splash Screen, и не станите
         создавать титульный экран, пользователь будет вводить пароль
         на пустом экране.
             
                                    Конец.
             
             И, наконец, вы увидите меню из двух пунктов:
             - DO-IT! - запомнить ваше приложение, записать созданные
               на данный момент программы и возвратиться  в  основное
               меню  Personal  Programmer (аналогично нажатию клавиши
               [F2]).
             - Cancel - отменить работы по созданию  приложения  (или
               по  изменению  его)  и  возвратиться  в  основное меню
               Personal Programmer.
             ** Предупреждение : На этом этапе работ Cancel не самая
         полезная возможность, если вы не хотите  потерять  все,  что
         сделали  до  этого момента. Cancel лучше использовать в про-
         цессе внесения изменений в уже  созданное  приложение,  пос-
         кольку при этом оригинал остается неизменным, а ненужные вам
         изменения теряются.
             
             
                  6-8. Завершение работ по созданию приложения.
             
             Начинаем с меню создания титульного экрана (конец приме-
         ра 6-7).
             1. Выберите режим Splash Screen.
             Экран очистится и можете создавать титульный экран ваше-
         го приложения.
             2.  Пользуясь правилами создания экранов пояснений нари-
         суйте картинку, показанную на рис. стр. 73.
             3. Когда закончите, нажмите клавишу [F2].

                             - 43 -
             Вы увидете меню выхода из Personal Programmer.
             4. Чтобы записать все сделанное по  созданию  приложения
         VIDEO, выберите режим DO-IT! или нажмите клавишу [F2].
             А  теперь  смотрите, как Personal Programmer транслирует
         программы для вашего приложения и создает библиотеки  проце-
         дур.  Ваше приложение будет состоять из нескольких различных
         программ (см. гл. 11 -  Хитрости  для  программиста).  Когда
         процесс  генерации  приложения  закончится, вы снова увидете
         основное меню системы Personal Programmer.
             5. Если на  этом  этапе  вы  хотите  выйти  из  Personal
         Programmer,  закажите Exit/Yes. Вы можете вместо этого зака-
         зать режим Play и поработать с вашим приложением или перейти
         к главе 7, чтобы научиться вносить изменения в ваше приложе-
         ние.
        
                   Действия по Поддержанию Вашего Приложения
             
             Вы  научились  создавать,  вносить изменения и вызывать
         ваше приложение средствами Personal Programmer. В этой гла-
         ве  дают  объяснения  остальным   пунктам   меню   Personal
         Programmer. Здесь объясняется как:
             - документировать ваше приложение;
             - анеализировать структуру приложения (систему меню);
             - копировать, переименовывать и удалять приложение;
             -  менять установки системы Personal Programmer для пе-
         чати, средства помощи и написания программ;
             - изменять рабочий директорий;
             - конвертировать приложение, созданное генератором при-
         ложений PARADOX.
             Мы нызываем эти вопросы "поддержанием приложения", пос-
         кольку они позволяют производить некоторые действия с  соз-
         данным вами приложением. Как и раньше основным условием яв-
         ляется  то, что ваше приложение должно находиться в текущем
         директории.
             
               Резюме
               ------
             Рассматривайте  режим  Summarize как генератор создания
         документации для вашего приложения. Он создает отчеты,  ко-
         торые  помогают  вам  лучше понять, какова структура вашего
         приложения, что оно делает и какие файлы использует.
             
             Когда вы выберите режим  Summarize  из  основного  mеню
         Personal  Programmer,  вы получите вопрос, кокое приложение
         вы хотите документировать.
             
             Введите пятизначное имя приложения  и  нажмите  клавишу
         ввода.  Приложение  должно находиться в текущем директории.
         Затем появится меню из четырех  пунктов,  определяющих  вид
         интересующей вас документации.
             
             - Menu  Listing        - показать структуру меню,  дей-
                                    ствия и  объекты,  привязанные к
                                    каждому пункту меню
             - Application Listing  - дать список файлов, используе-
                                    мых приложением
             - Tree Listing         - показать структуру меню графи-

                             - 44 -
                                    чески
             - All                  - Создать все три  вышеуказанные
                                    виды документации
             Когда вы закажете тип документации, Personal Programmer
         спросит вас, куда вы хотите ее вывести:
             - Printer              - вывести на печать
             - Screen               - вывести на экран
             - File                 - вывести отчет в тестовый файл
             Документация,  выводимая  на  печать использует текущие
         установочные значения для печати (см. режим  Tools/Settings
         ниже). Документация выводимая на экран, выводится поэкранно
         и вы можете двигаться по ней, нажимая на любую клавишу. До-
         кументация,  выводимая  во  внешний  файл, дописывается как
         Ascit text, и вы можете просматривать  и  молдулировать  ее
         любым  текстовым редактором. Наименование файлов документа-
         ции имеет расширение типа .PRT, если вы не зададите другое.
             
                Menu Listing
                ------------
             Документация по режиму Menu Listing содержит информацию
         о  пунктах системы меню приложения всех уровней и действиях
         системы Personal Programmer, выполняемых для каждого  пунк-
         та.  Здесь также указываются программы и библиотеки, управ-
         ляющие каждым меню; таблицы и подпрограммы, связанные с вы-
         полнением каждого конкретного пункта.
             Режим Menu Listing особенно полезен, когда  вы  вносите
         изменения  в ваше приложение. Например, вы можете использо-
         вать его для нахождения таблиц map и source, если вы хотите
         использовать их и в других режимах работы  вашего  приложе-
         ния. рис. стр. 99
             
                Application Listing
                -------------------
             Режим  Application Listing выдает документацию простого
         вида, где указываются наименования  различных  файлов,  ис-
         пользуемых в приложении. Для каждого типа файлов приводятся
         отдельные  списки  (напр.,  для  библиотек процедур - .LIB,
         программ - .SC, таблиц - .DB и т.д.).
             Вы можете заметить, что некоторые названия в  документе
         Application  Listing вам известны, посколь вы сами задавали
         их (напр., таблица Customer), другие же  некоторым  образом
         варьируют  наименование вашего приложения (напр., Videoq3).
         В  главе  11  даются  объяснения,  каким  образом  Personal
         Programmer  дает  названия создаваемым им файлам, и в каких
         содержиться информация, которую вы можете  просматривать  и
         изменять.
             
                Tree Listing
                ------------
             Документация, получаемая по режиму Tree Listing, выдает
         графическое  представление иерархической структуры меню ва-
         шего приложения.
             Здесь  используются  графические  символы  для указания
         связей соответствующих пунктов меню и подменю,  и  указания
         какие  действиявыполняет  Personal  Programmer  по конечным
         пунктам подменю.
             Если линия, ведущая к пункту подменю,  разрывна  (точки

                             - 45 -
         вместо целой линии), это означает, что данный пункт меню не
         имеет дальнейшей привязки действий. см. рис. стр. 100
             
                Review
                ------
             Режим Review основного меню системы Personal Programmer
         очень  удобен для того, чтобы осуществить просмотр меню ва-
         шего приложения. При этом нет действительной работы с  при-
         ложением,  но вы можете пройтись по всей структуре меню ва-
         шего приложения. Когда вы закажете режим  Review  основного
         меню Personal Programmer, вас спросят об имени интересующе-
         го вас приложения.
             Введите  имя  приложения  и нажмите клавишу ввода. Ваше
         приложение должно находится в текущем директории. Теперь вы
         видите основное меню вашего приложения. Вы можете  "гулять"
         по  структуре меню, как если бы вы отрабатывали ваше прило-
         жение. Вы не сможете вызвать конкретные действия по  выпол-
         нению  какого-либо  пункта меню, но вы можете отследить все
         пункты всех подменю приложения. Нажмите клавишу [Esc], что-
         бы выйти из меню приложения и затем клавишу [F2] для  возв-
         рата в основное меню системы Personal Programmer.
             Режим  Review  не  позволяет  вам  вносить изменнения в
         структуру меню прложения, но  вы  легко  можете  для  этого
         сделать шаги Modify/Menu Action.
             
                Tools
                -----
             Режим  Tools основного меню системы Personal Programmer
         предоставляет пользователю целый набор  способов  "ведения"
         вашего  приложения  и  самой  системы  также. Заказав режим
         Tools, вы увидите подменю из пяти пунктов:
               - Copy           - скопировать  приложение  на  дугой
                                диск или директорий;
               - Delete         - удалить приложение с диска;
               - Rename         - дать новое  название вашему прило-
                                жению;
               - Установка      - изменить   выходные   установочные
                                значения   Personal  Programmer  для
                                печатающего устройства, вывода экра-
                                нов пояснения или программ;
               - Directiry      - изменитьрабочий директорий.
             
                Режим Copy
                ----------
             Режим Copy позволяет скопировать приложение целиком  из
         текущего  директория в другой директорий или диск. При этом
         копируются все  программы  данного  приложения,  библиотеки
         процедур,  таблицы,  созданные системой Personal Programmer
         плюс все таблицы, формы, отчеты, запросы и  отбражения  для
         нескольких  таблиц, используемые при работе вашего приложе-
         ния.
             Когда вы заказываете режим Copy из меню Tools, Personal
         Programmer спрашивает вас, какое приложение вы будете копи-
         ровать.
             Введите пятисимвольное наименование вашего приложения и
         нажмите клавишу ввода. Это приложение должно  находиться  в
         текущем директории.

                             - 46 -
             Затем  последует  вопрос, куда вы будете копировать это
         приложение.
             Вы можете задать любое наименование. Выходной диск дол-
         жен  иметь достаточное пространство для включения всех фай-
         лов приложения. Если такого места нет, то удалите  файлы  с
         диска, либо используйте команду DOS Copy, чтобы скопировать
         файлы на несколько дисков.
             Copy  копирует  изменяемую  версию  приложения, которая
         включает больше файлов, чем требуется для  работы  приложе-
         ния.  Если  вам  нужно скопировать приложение в исполняемом
         виде, используйте программу  "copy",  созданную  в  системе
         Personal Programmer для вашего приложения. (см. главу 8)
             Копирование приложения не убирает его из  текущего  ди-
         ректория.  Если  вам  нужно  удалить его, используйте режим
         Delete.
             
                Режим Delete
                ------------
             Режим  Delete  производит  удаление  всего приложения с
         диска, включая все программы и таблицы, созданные  Personal
         Programmer.  При  этом не удаляются таблицы, формы, отчеты,
         запросы, экраны отображений, а также программы,  написанные
         не в среде Personal Programmer. Эти файлы остаются нетрону-
         тыми.
             Когда  вы  задаете режим Delete из меню Tools, Personal
         Programmer спрашивает вас, какое приложение вы хотите  уда-
         лить.
             Введите пятисимвольное наименование вашего приложения и
         нажмите  клавишу  ввода. Это приложение должно находиться в
         текущем директории.
             Поскольку это необратимое действие, вам будет представ-
         лена возможность либо  отказаться,  либо  подтвердить  ваше
         действие.
             
                Предупреждение:
                --------------
             Ваше  приложение  может быть результатом долгого труда.
         Если его можно будет хотябы частично использовать, мы пред-
         лагаем сначала скопировать его на дискету, а уже потом сти-
         рать с жесткого диска. При этом вы всегда можете  восстано-
         вить его и воспользоваться сделанными наработками.
             
                Режим Rename
                ------------
             Режим  Rename  позволяет  изменить название приложения.
         При этом меняются не только имена составляющих файлов  дан-
         ного  приложения, но и все ссылки на эти файлы в программах
         этого приложения.
             Режим Rename особенно полезен при конвертировании  при-
         ложений,  созданных  генератором  приложений  PARADOX 1.1 в
         среду Personal Programmer.
             Когда вы задаете режим Rename из меню  Tools,  Personal
         Programmer  просит вас ввести имя нужного программного при-
         ложения.
             
             Введите  пятизначное  наименование  вашего приложения и
         нажмите клавишу ввода. Это приложение  должно  находится  в

                             - 47 -
         текущем директории.
             Затем вас просят ввести новое иья для этого приложения.
             
             Вводимое вами наименование может иметь до пяти знаков в
         длину  и обязательно начинаться буквой. Остальные знаки мо-
         гут быть буквами, цифрами и специальными символами $,_ и !.
             Режим Rename может быть использован только для приложе-
         ний в изменяемой форме (modifiable),  т.е.  для  приложения
         созданного,  откорректированного или скопированного средст-
         вами Personal Programmer. Режим Rename не  может  быть  ис-
         пользован  для приложения в исполняемой форме (executable),
         т.е. для приложения  переписанного  программой  копирования
         приложения    (cp)    или    полученного   при   посредстве
         Tools/Settings/LibrariesOnly - и поэтому библиотеки  проце-
         дур  не могут быть изменены, поскольку отсутствуют програм-
         мы, которые создали их.
             
                Установки
                ---------
             Режим  Установки - Settings - это функция, которая наст-
         раивает  не  ваше  конкретное  приложение,  а  сам  Personal
         Programmer.  Этот  режим позволяет вам осуществить настройку
         установочных значений Personal Programmer для вашего печата-
         ющего устройства и вашей пользовательской системы.
              Как описывается в главе 10 (вопросы повышенной сложнос-
         ти) для настройки системы Personal Programmer вы можете  ис-
         пользовать   программу   настройки   (Custom   Configuration
         Program). Ее использование и представляемые возможности ана-
         логичны существующим в системе PARADOX (см. гл. 16 - вопросы
         повышенной сложности пособия PARADOX  User's  Guide).  Режим
         Tools/Settings  также используется для управления возможнос-
         тями.
             Как и все другие режимы по изменению установочных значе-
         ний системы, режим Settings обычно используется только в том
         случае, если вы хотите  изменить  какое-нибудь  установочное
         значение  системы, принимаемое по умолчанию. Хотя для многих
         пользователей системы не возникает необходимости что-то  ме-
         нять  в системе, режим Settings всегда для ваших услуг, если
         вам захочется сделать что-то из ряда вон выходящее. Если  вы
         внесли  в установочные значения посредством режимом Settings
         все, что вы закажете будет действовать до тех пор,  пока  вы
         их  не  измените или не выйдете из Personal Programmer. если
         ваши установки понадобятся вам в следующий сеанс вашей рабо-
         ты в системе Personal Programmer, вам  придется  осуществить
         настройку  снова.  Заказав  режим  работы  Settings  из меню
         Tools, вы вы получите подменю из трех пунктов:
              
              - Printer Setup        - изменять номер  порта печатаю-
                                     щего устройства, размер печатной
                                     строки.
              - Help Mode            - изменить вывод  полноэкранного
                                     средства  помощи  ( принятого по
                                     умолчанию ) на полуэкранный.
              - Script Output        - задать, будут ли написаны про-
                                     граммы,  создающие библиотеки, и
                                     в каком режиме (1.1 или 2.0 сис-
                                     темы  PARADOX )  будет  работать

                             - 48 -
                                     ваше приложение.
                      
             
                PRINTER SETUP
             
             Режим Printer Setup позволяет вам  задать  принтер  для
         вывода  отчетов (reports) по режиму Summarize. Выбрав режим
         Printer Setup из меню Tools/Settings, вы увидите подменю из
         трех пунктов:
                             
              - Printer Port        :  для того, чтобы определить, к
                                     какому  порту  присоеденен  ваш
                                     принтер.  Обычно  по  умолчанию
                                     это LPT1. Если ваш принтер при-
                                     соединен к другому порту, то вы
                                     можете  выбрать  правильный  из
                                     предлогаемого списка;
              - Setup               : для ввода установочной строки,
                                     которая подготавливает или  за-
                                     дает конфигурацию для принтера.
                                     Некоторые принтеры требуют  по-
                                     добную  установочную строку для
                                     того, чтобы привести их в рабо-
                                     чее состояние до получения  ко-
                                     манды  о  выводе  данных на пе-
                                     чать.  Например,  для  лазерных
                                     принтеров   требуется  довольно
                                     сложная установочная строка. По
                                     умолчанию  Personal  Programmer
                                     не  посылает установочной стро-
                                     ки.
              - Width               : для  задания  ширины  печатной
                                     строки отчета. По  умолчанию  -
                                     длина  80  знаков,  но если ваш
                                     принтер может печатать строки в
                                     132 символа (другая стандартная
                                     ширина), выберите ее из следую-
                                     щего меню:
              
             Режимы Printer Port и Setup  очень  похожи  на  процесс
         настройки  отчетов  PARADOX  и более подробно описывается в
         главе 6 (Setup/Custom пособия PARADOX user's Guide).
             Все эти установки режима Printer  Setup  факультативны:
         большое  число печатающих устройств позволяет распечатывать
         вполне приличные отчеты без изменения принятых по умолчанию
         установочных значений. Режим Printer Setup необходим  толь-
         ко, когда вам действительно нужно изменить настройку систе-
         мы Personal Programmer.
             
                HELP MODE
                ---------
             Обычно  Personal Programmer выводит экраны помощи прак-
         тически на любом этапе процесса создания приложения. Меню и
         подсказки появляются в верхней части экрана,  прямоугольник
         с  информацией о режиме работы (со следующим предпологаемым
         действием) - в середине, а сам экран помощи - в низу.
             Но вам может не понравится внешний вид экрана помощи.

                             - 49 -
             Тогда, задав режим Help Mode,  вы  можете  видоизменить
         экран  помощи и работать с более свободным, но менее инфор-
         мативным  экраном.  Задав   режим   Help   Mode   из   меню
         Tools/Settings, вы получите подменю из двух пунктов:
             - Verbose               - обычное  полноэкранное  сред-
                                     ство помощи Personal Programmer
             - Terse                 - позволяет удалить пояснения с
                                     экрана,  оставив  только  меню,
                                     комментарии и сообщение о режи-
                                     ме работ (status box)
             
                Scriptoutput
                ------------
             Режим ScriptOutput управляет процессом генерации вашего
         приложения. Когда вы заказываете режим ScriptOutput из меню
         Tools/Setting, вы получаетете подменю из двух пунктов:
             
             - Libreries Only       : для определения писать ли про-
                                     граммы  вместе  с  библиотеками
                                     процедур.
             - Script Version       : для определения, в  какой вер-
                                     сии системы PARADOX будет рабо-
                                     тать ваше приложение.
             
                LIBRERIES ONLY
                --------------
             Для  улучшения  показателей  работы приложения Personal
         Programmer записывает большую часть программ  в  библиотеки
         процедур  языка  PAL.  Программы, создающие эти библиотеки,
         которые содержат текст этих процедур, требуются только  для
         того, чтобы изменять приложение, а не вызывать его работу.
             Вы можете использовать режим Libraries Only для генера-
         ции  приложения  в исполняемой форме, без программ, которые
         создают эти библиотеки. Приложения,  сгенерированные  таким
         образом, работают нормально, но занимают меньше пространст-
         ва на диске.
                Важно: Если вы используете эту возможность, мы реко-
            мендуем вам иметь хотя бы одну копию вашего приложения в
            изменяемой  форме, со всеми необходимыми программами. Вы
            должны иметь изменяемую версию вашего приложения,  чтобы
            иметь возможность вносить каким-то образом ваше приложе-
            ние.
             Режим Libraries Only особенно полезен, когда вы создали
         изменяемую  версию  приложения в системе PARADOX 2.0, и те-
         перь используйте режим Tools/Settings/Script  Output/Script
         Version для создания выполняемой версии для PARADOX 1.1.
             Когда   вы   задаете   режим  Libraries  Only  из  меню
         Tools/Settings/Script Output, вы  получаете  меню  из  двух
         пунктов:
                - No         : Чтобы сгенерировать изменяемую версию
                             приложения с программами и библиотеками
                             процедур.
                - Yes        : Чтобы сгенерировать исполняемую  вер-
                             сию приложения с библиотеками процедур.
             Вы  также  можете  использовать  программу  копирования
         (SC), включаемую в каждое приложение, чтобы скопировать ис-
         полняемую версию приложения. См. гл. 8 (Работа приложения)

                             - 50 -
             
                SCRIPT VERSION
                --------------
             Personal Programmer обычно создает библиотеки  процедур
         для  того,  чтобы  улучшить  работу приложения в версии 2.0
         системы PARADOX. Это означает, что приложение не будет  ра-
         ботать с более ранними версиями PARADOX.
             Режим Script Version позволяет генерировать приложения,
         которые  могут работать с версией 1.1 системы PARADOX. Хотя
         эти приложения будут также работать и с версией 2.0, их по-
         казатели будут хуже, как если бы  приложение  было  создано
         для  этой конкретной версии. Т.о., если ваше приложение бу-
         дет работать в двух версиях PARADOX, вы  можете  сгенериро-
         вать  две  различные  версии  вашего приложения. (см. режим
         Tools/Settings/Script Output/Libraries Only для того, чтобы
         сохранить пространство  вашего  диска,  сделав  версии  1.1
         только исполняемой).
             Когда   вы   задаете   режим  Script  Version  из  меню
         Tools/Settings/ScriptOutput, вы получаете меню из двух пун-
         ктов:
             
                .1.1       : Сгенерировать приложение, которое будет
                           работать  либо с версией  1.1, 1.1i, либо
                           2.0. системы PARADOX.
                .2.0       : Сгенерировать приложение, которое будет
                           работать только  с  версией  2.0  системы
                           PARADOX.
             
             К  сожалению,  Personal  Programmer  не может создавать
         приложения, которые будут работать с  версией  1.0  системы
         PARADOX.
             
                DIRECTORY
                ---------
             Когда вы используете Personal Programmer, все файлы ва-
         шего  приложения (с которым вы работаете) должны находиться
         в рабочем директории. Обычно это директорий из которого  вы
         запускаете  Personal  Programmer. Режим Directory позволяет
         вам изменять рабочий директорий.
             Конечно, вы не можете быть в процессе создания или  из-
         менения   вашего   директория,   когда   вы  задаете  режим
         Directory, вы также не  можете  использовать  файлы  вашего
         приложения, которые находятся одновременно в нескольких ди-
         ректориях.  Однако  режим  Directory  очень удобен, если вы
         ошиблись  в  названии  директория  при   запуске   Personal
         Programmer, или же хотите работать с двумя разными приложе-
         ниями одновременно, в один сеанс работы.
             Когда   вы  задаете  режим  Directory  из  меню  Tools,
         Personal Programmer просит вас ввести наименование директо-
         рия, в который вы хотите перейти.
             Название вашего текущего директория будет еще находится
         на экране. Измените его, чтобы указать на ваш новый рабочий
         директорий и затем нажмите клавишу ввода. После этого будет
         установлен новый рабочий директорий, который вы установили.
        
        
                                   ЧАСТЬ III.

                             - 51 -
             
             
                                    ГЛАВА 10.
             
                          Вопросы повышенной сложности.
             
             Если  вы последовательно знакомились с предлагаемым вам
         материалом этой книги, то вы знаете практически все возмож-
         ности системы Personal Programmer. Вы знаете, как внести  в
         него изменения и как работать с ним. Вы знаете, каким обра-
         зом  выполнить  те  или  иные  действия  в системе Personal
         Programmer.Вам известны и ограничения, которые  накладывает
         на ваше приложение используемая система.
             В  настоящей  главе более подробно рассматриваются пять
         вопросов повышенной сложности, свободное владение тонкостя-
         ми которых поможет вам решать ваши проблеммы более изящно и
         профессионально.
             Здесь рассматриваются:
             - экраны отображения для нескольких таблиц;
             - использование индексированных таблиц;
             - создание "внешнего" соединения между таблицами;
             - работа приложения в сети ЭВМ;
             - вопросы адаптации системы к вашему компьютеру (Custom
         Configuration Programm).
             
                    Экран отображения для нескольких таблиц.
             
             Будучи системой, поддерживающей базы данных реляционно-
         го  типа,  PARADOX  дает лучшие характеристики, когда имеет
         дело с небольшими таблицами в нормализованном виде (см. гл.
         8 - Create пособия  PARADOX  User's  Guide).  Это  упрощает
         структуры  данных,  с которыми вы работаете, но и позволяет
         связывать их между собой по мере необходимости.  Когда  вам
         требуется информация по нескольким таблицам сразу, вы може-
         те использовать:
             а) режим Ask с указанием типов связей соединения любого
         числа  таблиц  в единую временную таблицу ANSWER (см. гл. 4
         пособия PARADOX User's Guide).
             б) режим Modify/MultiEntry для ввода новых  записей  из
         исходной  (source)  таблицы  в  произвольное число выходных
         (target) таблиц (см. гл. 12 пособия PARADOX User's Guide).
             в) режим Tools/More/MultiAdd для добавления  существую-
         щих  записей  из  исходной  (source) таблицы в произвольное
         число выходных (target) таблиц (см. гл. 12 пособия  PARADOX
         User's Guide).
             Все  другие операции, проводимые над произвольным коли-
         чеством таблиц сразу, достаточно сложны. Если вы хотите по-
         лучить один отчет по нескольким таблицам одновременно,  вам
         придется  разбить  это действие на несколько этапов. Напри-
         мер, вы можете объединить их с помощью запроса, скопировать
         нужную заранее созданную спецификацию отчета для  результи-
         рующей  таблицы  ANSWER и вывести отчет на печать. Если вам
         требуется откорректировать записи в нескольких таблицах од-
         новременно, вы должны будете объединить их с помощью запро-
         са,  отредактировать  записи  и  затем  использовать  режим
         Tools/More/MultiAdd/Updata для обновления выходных таблиц.
             Personal Programmer облегчает работу с несколькими таб-

                             - 52 -
         лицами одновременно в вашем приложении. Вы можете заказать-
         создание экрана отображения для нескольких таблиц в режимах
         View,  Report,  Data  Entry  и Edit, при этом вы связываете
         таблицы так, как вам это нужно. Этот процесс описан как шаг
         2 в разделе "Что произойдет, если вы сделаете выбор  дейст-
         вия" в гл. 6 ("Определение режимов меню").
             Вообще  говоря,  экран отображения - это просто большая
         таблица, в которй находятся поля из других таблиц. В ней не
         хранится постоянная информация; она используется только для
         выполнения  операций  над  несколькими  таблицами для того,
         чтобы временно сохранить данные, которые затем будут  запи-
         саны  в  другие, меньшие по размеру таблицы. Таким образом,
         таблица, которую мы называем экраном отображения, в  чем-то
         аналогична временной таблице ANSWER, получающейся в резуль-
         тате отработки запроса по нескольким таблицам, или исходной
         (source) таблице в режимах MultiAdd.
             Рис.  10.1  стр. 116 - получение экрана отображения для
         нескольких таблиц.
             Рис. 10.2 стр. 116 - связывание  таблиц  для  получения
         экрана отображения.
             В  каждой  из  этих  операций, экран отображения должен
         быть связан с таблицами, на основании которых он создается.
         Это нужно для того, чтобы система PARADOX знала, как  пере-
         сылать  записи из таблиц в экран отображения и обратно. При
         создании запроса связь между таблицами задается непосредст-
         венным указанием на связывающие их  поля  (режим  Example).
         В  режимах Multi Entry и Multi Add формы запросов использу-
         ются для создания специальной таблицы связей (maptable),  в
         которой хранятся указания по взаимосвязи между таблицами.
             Экраны  отображения для нескольких таблиц также исполь-
         зуют таблицу связей (maptable)  для  указания  взаимосвязей
         между  исходной  и  выходными  таблицами. Например в отчете
         Catalog, который вы создавали в примере 6-3,  вы  создавали
         таблицу  связей  для  объединения  таблиц Films и Filmcat в
         единую "исходную" таблицу, по которой и выдается отчет.
             Как вы уже видели, таблица  связей  состоит  просто  из
         списка  полей  исходной таблицы, где содержится указание на
         поле выходной таблицы и таблицы, откуда это  поле  берется.
         Более  подробная  информация о таблицах  связи содержится в
         главе 9 (режим Modify/MultiEntry)  пособия  PARADOX  User's
         Guide.
             Естественно, когда вы создаете экран отображения в сис-
         теме  Personal  Programmer, вы не думаете о таблице связей.
         Все, что вам требуется, - это заполнение форм  запроса  для
         указания  связей  между  таблицами, аналогично таму, как вы
         создаете запрос, по которому вы объединяете выходные табли-
         цы во временную таблицу ANSWER.
             Если вы заполняете формы запроса, то  система  Personal
         Programmer автоматически использует их для создания таблицы
         связей. Таблица связей важна для нас, поскольку, в  отличие
         от форм запроса, она хранится в вашей базе данных. Вы може-
         те  воспользоваться ею, если вам она будет нужна при выпол-
         нении еще каких-то операций. Например, в  примере  6-5,  вы
         использовали  созданный  ранее  для  выдачи отчета в режиме
         "Отчеты/Каталог" экран отображения для работы в режиме  ва-
         шего меню "Ведение БД/Редактирование/К/фильмы.
             В  системе  Personal  Programmer  предусматривается два

                             - 53 -
         способа вызова ранее созданного экрана отображения:
             - явное указание на пункт меню его создания;
             - ввод наименований существующих таблицы связей  и  ис-
         ходной таблицы.
             Второй  способ  позволяет вам использовать сушествующие
         исходную и таблицу связей, которые вы могли заранее создать
         в системе PARADOX, работая в режимах MultiEntry или MultiAdd.
             Экран отображения  нескольких  таблиц  -  очень  мощное
         средство,  которое  позволит  сделать ваше приложение более
         функциональным и облегчит вам его использование. Существует
         несколько тонких моментов, о которых вы должны помнить:
             - Для режима Edit: все выходные (target)  таблицы,  за-
         действованные в данном отображении, должны быть проиндекси-
         рованы  по  ключевым  полям.  Все ключевые поля должны быть
         представлены в исходной (source) таблице и защищены от  ре-
         дактирования.  Записи  в  выходных (target) таблицах должны
         иметь взаимооднозначное соответствие.
             Для деталей см. раздел: Ограничения на редактирование в
         гл. 6 (Определение режимов меню).
             - Для операций в режимах DataEntry и Edit с  индексиро-
         ванными  таблицами  в  случаях,  когда  записи  из исходной
         (source) таблицы переносятся в  выходную  (target)  таблицу
         могут возникнуть неприятности с ключами. Предпологаемые пу-
         ти обхода этой ситуации приводятся ниже, в разделе "Исполь-
         зование индексированных таблиц в вашем приложении".
             -  Для операций в режимах View и Report, экраны отобра-
         жений для нескольких таблиц могут включать операцию  "внеш-
         нее  соединение" (Outer joins), при которой записи из одной
         таблицы не связаны специальным образом с  записями  другой.
         См. раздел "Внешнее соединение" ниже.
             
                    Использование индексированнных таблиц.
             
             Индексированных таблицы играют особую роль при работе в
         режиме Edit с использованием запросов или экранов отображе-
         ния нескольких таблиц. Кроме того, вам следует знать, каким
         образом  нужно обходить неприятности с ключевыми значениями
         при действиях в режимах Edit и DataEntry с индексированными
         таблицами.
             
                 Использование ключа для идентификации записи.
             
             Как уже было объяснено в гл. 6 (Определение режимов ме-
         ню) в разделе "Ограничениия на редактирование", при  завер-
         шении  операции  по редактированию с использованием запроса
         или экрана отображения нескольких таблиц,  система  PARADOX
         должна  поместить  откорректированные записи на их исходные
         места в таблицах, откуда они были взяты. Значения в  ключе-
         вых  полях используются именно для этого. Если вы позволите
         пользователю изменить ключевое поле в одной из этих  ситуа-
         ций, значения ключей уже не будут соответствовать друг дру-
         гу,  и  система PARADOX не сможет заместить старые значения
         новыми.
             Поэтому мы ввели следующее правило:
.
                             - 54 -
         ┌─────────────────────────────────────────────────────────┐
         │     При редактировании с  использованием  запросов  или │
         │ экранов  отображений  нескольких таблиц, таблицы должны │
         │ быть проиндексированы, и ключевые поля при этом не дол- │
         │ жны корректироваться.                                   │
         └─────────────────────────────────────────────────────────┘
             Это правило не распространяется на редактирование  еди-
         ничной  таблицы  в  режиме  All Records, поскольку при этом
         PARADOX просто замещает все старые записи на  новые.  Вэтой
         ситуации  таблица может не быть проиндексирована, и пользо-
         ватель имеет право корректировать нинформацию в любом поле,
         включая и ключевые.
             Для защиты ключевых полей от редактирования  вы  можете
         задать  или  режим отображения (Dispay Only) или же ограни-
         чить права доступа пользователя к этому полю.
             При операциях по редактированию с экранами  отображения
         нескольких таблиц могут быть и другие ловушки. Расширяя вы-
         ше  сформулированное  правило,  можно сказать, что исходная
         (source) таблица должна содержать все ключевые поля из всех
         выходных (target) таблиц, и все эти поля должны быть  защи-
         щены от редактирования.
             Кроме того, ни одна запись выходной (target) таблицы не
         может  появиться  более,  чем  один раз в исходной (source)
         таблице. Если вы допускаете это, и пользователь корректиру-
         ет одну "копию" записи, не изменяя все остальные,  то  поя-
         вится  неполноценная  версия однй и той же записи в одной и
         той же таблице.
             Отсюда вытекает наше второе правило:
         ┌─────────────────────────────────────────────────────────┐
         │     При операциях редактирования с экранами отображения │
         │ нескольких таблиц записи в выходных  (target)  таблицах │
         │ должны  иметь  взаимнооднозначное соответствие. Другими │
         │ словами, ни одна запись из выходных таблиц не может со- │
         │ ответствовать более, чем одной записи исходной таблицы, │
         │ если поля не защищены от редактирования.                │
         └─────────────────────────────────────────────────────────┘
             Другими  словами, ваше приложение сохраняет целостность
         до тех пор, пока не имеет права, отредактировав одну  копию
         записи,  не  отредактировать все остальные. Более подробная
         информация содержится в гл. 6.
             
                       Неприятности с ключевыми полями.
             
             В системе PARADOX, когда вы пытаетесь ввести новую  за-
         пись  с уже имеющимся ключевым значением, запись помещается
         во временную таблицу с названием Keyviol,  так  что  у  вас
         есть возможность разрешить создавшееся несоответствие. Дан-
         ная  таблица Keyviol замещается в следующий раз при возник-
         новении аналогичной ситуации.
             При работе с приложением в системе Personal  Programmer
         таблицы Keyviol замещаются с предварительным переименовани-
         ем  ранее  существующей таблицы Keyviol. Таким образом, ин-
         формация из этих таблиц не теряется. Вы найдете  информацию
         с  неверными  ключевыми  значениями  в  таблицах  с именами
         Kv######, где Kv - означает, что это таблица с несоответст-
         виями в ключевых значениях (Key Violaton), а #  -  числовое
         значение (до 6 знаков). Каждое новое несоответствие хранит-

                             - 55 -
         ся  в  новой  таблице, называемой соответственно Kv1, Kv2 и
         т.д.
             Хотя Personal Programmer и осуществляет  перенаименова-
         ние таблиц Keyviol, чтобы они не исчезли, он не обеспечива-
         ет  пользователя  средством согласвать эти несоответствия с
         данными в основной таблице. Имеется две возможности преодо-
         леть эти неприятности с ключами:
             -  Заставить  пользователя  визуально  проанализировать
         таблицы  Kv######  и разрешить возникшие противоречия. Если
         они не пользуются средством PARADOX RUNTIME, то  вы  можете
         дать  им  возможность  осуществить  это  средствами системы
         PARADOX в интерактивном режиме.
             - Напишите программу на языке PAL, которая:
                 - Проверяет наличие  таблиц  с  наименованием  типа
                 Kv######;
                 - выводит как запись из таблицы Kv######, так и со-
                 ответствующую ей запись из основной таблицы;
                 -  позволяет пользователю откорректировать ключевые
                 значения с тем, чтобы исключить  имеющееся  несоот-
                 ветствие;
                 -  и  затем  записывает эту новую запись в основную
                 таблицу данных.
             Написав эту программу, используйте режим Modify,  чтобы
         присоединить ее к пункту меню под названием Resolve Viols в
         меню ведения БД вашего приложения.
              Естественно, второй способ предпочтительнее, однако он
         требует от вас работы по программирыванию.
             
                               Внешние соединения.
             
             Под внешним соединением понимается такой способ объеди-
         нения  таблиц,  при котором все строки одной или нескольких
         таблиц будут обязательно включены, даже если они и не "свя-
         зываются" в привычном для нас смысле. Принцип этого  соеди-
         нения хорошо показан на рис. 10.1.
             10-1. Обычное соединение:
             Предположим,  что  вам нужно вывевести список фильмов в
         прокате по названию фильма. Информацию о фильмах в  прокате
         содержится  в  таблице  Orders, но она содержит только поле
         Film # с его кодом. Названия фильмов  содержатся  только  в
         таблице Films, с его кодом. Итак, вы создаете экран отобра-
         жения  для двух таблиц, объединяя эти две таблицы по их об-
         щему полю Film #.
             См. рис. стр. 120.
             Как вы и ожидали, это экран аналогичен таблице  ANSWER,
         которая  получилась бы в случае, если бы вы создали обычный
         запрос. Каждый фильм, находящийся в прокате, будет  выведен
         в список фильмов вместе с другой нужной информацией из таб-
         лицы Orders.
             Но  если, наоборот, вам нужна информация о всех к/филь-
         мах с указанием, находятся ли они в прокате или нет?  Каким
         образом  вы сможете включить фильмы, которые не находятся в
         прокате (т.е. отсутствуют в таблице Orders)? В примере 10-1
         для связывания двух таблиц было использовано поле  Film  #,
         общее для них. Поэтому только те к/фильмы, которые присутс-
         твовали  и  в первой и во второй таблицах (т.е. те, которые
         хоть единожды были в  прокате)  будут  выведены  в  таблицу

                             - 56 -
         ANSWER.
             Нужный вам перечень всех к/фильмов с указанием был он в
         прокате  или нет можно получить, использовав способ объеди-
         нения таблиц, который мы называем внешним соединением.  При
         этом  происходит отбор всех записей из одной или нескольких
         таблиц независимо от того имеются ли соответствующие записи
         из других таблиц. Вы можете представить себе внешнее соеди-
         нение как присоединение записей, которые при обычном связы-
         вании выпадали бы из выходной таблицы.
             В системе PARADOX  вам  требуется  выполнить  несколько
         действий, чтобы создать внешнее соединение (см. конец гл. 4
         (Ask)   пособия  PARADOX  User's  Guide).  Однако  Personal
         Programmer позволяет вам легко осуществить внешнее соедине-
         ние  при  создании  экранов отображения нескольких таблиц в
         режмах View и Report. Это  задается  добавлением  восклица-
         тельного знака (!) в поле указания связи (Example) для таб-
         лицы, из которой вы хотите получить все записи.
             См. рис. 10-2 на стр. 121.
             Это  внешнее соединение - то же самое, что вы использо-
         вали для получения отчета о просроченных к/фильмах в приме-
         ре 6-3 - выдает список к/фильмов, срок возврата которых ис-
         тек.
             Рис. 10-2. Стр 121. "!" - выбирает все записи из табли-
                 цы Films вне зависимости, есть ли у них  соответст-
                 вие в таблице Orders.
             Запрос, построенный в этом примере, полностью идентичен
         запросу примера 10-1,  за  исключением  знака  "!"  в  поле
         film_# таблицы Films. Этот восклицательный знак имеет боль-
         шую  силу. Результирующая таблица Answer имеет ту же струк-
         туру, что и в предыдущем примере, но включает все к/фильмы,
         вне зависимости были ли они в прокате когда-либо  или  нет.
         Вы  можете  представить  себе этот процесс, как дописывание
         пустой записи к таблице Orders, которая добавляется к любой
         записи таблицы Films, для которой отсутствует реально соот-
         ветствующая запись из таблицы Orders.
             В примере 10-2 только в таблице Films присутствует ука-
         затель поля для внешнего соединения (!). Это потому, что вы
         хотите  иметь список всех имеющихся к/фильмов, все к/фильмы
         в прокате и так будут присутствовать в ыходной таблице.  Но
         предположим,  что в таблице Orders присутствуют фильмы, от-
         сутствующие в таблице Films (например, по  ошибке)  или  же
         кое-какие  фильмы были удалены из таблицы Films, тогда, по-
         местив знак "!" в поле film # таблицы Orders, вы сможете их
         также вывести в выходную  таблицу  Answer.  Вообще  говоря,
         "!",  помещенный после поля связи в форме запроса (Example)
         отберет все имеющиеся записи вне зависимости от того,  есть
         ли  соответствующая им пара в другой таблице, с которой она
         объединена.
             
                       Тильда-переменные в форме запроса.
             
             Когда вы используйте PARADOX для работы в интерактивном
         режиме вы можете настраивать запросы по вашему желанию. Ес-
         ли потребитель меняет свой адрес, вы можете заказать  режим
         Ask,  ввести  его  фамилию  в  форму  запроса  для  таблицы
         Customer и вывести требуемую запись для  ее  корректировки.
         Вы полностью свободны в обращении с информацией, полученной

                             - 57 -
         по запросу.
             Но когда вы работаете в системе Personal Programmer, вы
         должны предварительно создать утверждение запроса. Посколь-
         ку  сейчас  вы не знаете, какую запись захочет отредактиро-
         вать ваш пользователь в некий момент времени, вам очень хо-
         чется оставить поле  для  заказывания  фамилии  потребителя
         пустым,  тем  самым  вы вызываете все имеющиеся записи. При
         этом пользователь будет вынужден просматривать всю таблицу,
         чтобы отыскать единственную, нужную ему запись для  коррек-
         тировки.  Если  таблица  достаточно велика, то поиск нужной
         записи займет много времени, что, естественно, вызовет чув-
         ство неудовольствия.
             Вместо  этого вы можете задать тильда-переменные, кото-
         рые придают гибкость вашему приложению. Как и  другие  виды
         переменных тильда переменная представляет собой нечто похо-
         жее  на ящичектдля хранения писем на почте, в котором нахо-
         дится какой-то кусочек информации. В  форме  запроса  тиль-
         да-переменная представляет собой некоторое множество знаков
         (до  132), начинающееся буквой и оканчивающееся знаком (~),
         который отличает эту переменную от введенных критериев  вы-
         борки или полей связи (Example). Эти знаки представляют со-
         бой  название  переменной  (метка на ящичке), который могут
         быть задействованы вместо реальной информации,  находящейся
         в ящичке с данной меткой.
             Как  информация попадает в ящичек? Когда вы используйте
         тильда-переменную в форме запроса  для  вашего  приложения,
         Personal  Programmer спрашиват вас, каким образом попросить
         пользователя ввести информацию и как она должна выглядеть.
              
             Вопрос к ползователю о вводе той или иной информации  в
         запросе  появится на экране, когда пользователь вызовет ре-
         жим меню  приложения,  использующий  данный  запрос.  Ответ
         пользователя (он должен соответствовать заказанному формату
         для  вводимой  информации)  подставляется в форму запроса в
         процессе выполнения запроса.
             В примере 10-3 вы можете увидеть, каким образом исполь-
         зование тильда-переменных дает пользователю вашего приложе-
         ния возможность варьировать запросы и как быстро они  нахо-
         дят требуемую запись.
             Запомните,   что  если  пользователь  нажимает  клавишу
         [ENTER] без ввода ответа на вопрос, по запосу ищутся записи
         не содержащие информации в искомом поле. Эффект  аналогичен
         тому, как если бы ввели "blank" в форму запроса.
             10-3. Использование тильда-переменных. Перед вами форма
             запроса, созданная в примере 6-2, позволяющая пользова-
             телю получать информацию, задавая фамилию и имя  потре-
             бителя.
             Когда вы создали эту форму запроса, Personal Programmer
         спрашивал вас, каким образом запросить пользователя о вводе
         имени  и фамили потребителя и какой тип данных для этих по-
         лей нужно определить.
             При работе вашего приложения в случае,  если  пользова-
         тель выбирает режим Inquiry/Customers, он получает запрос о
         вводе  фамилии и имени интересующего его потребителя (в том
         виде, как вы это задали).
             Ответы подставляются вместо переменных в форме запроса,
         и PARADOX выведет требуемую информацию о конкретном  потре-

                             - 58 -
         бителе.
             
                               Фонетический поиск.
             
             Предположим, что пользователь неточно помнит имя потре-
         бителя (не то Daphne, не то Daisy, а фамилия то ли Dunston,
         то ли Dunphy или что-то похожее).
             В этом случае, если пользователь неверно введет фамилию
         или имя, то запрос не отработает. Есть два пути, как обойти
         это:
             -  Обучите вашего пользователя, как задавать примеры на
         подобное написание. PARADOX использует знак @ для замещения
         любого одиночного символа, а .. - для указания любого коли-
         чества знаков. Таким образом, если пользователь отвечает на
         вопрос о вводе фамилии следующим образом: Da.. и Du.. соот-
         ветственно, он получит запись для Daphne и Duston. Помните,
         что задавать примеры на подобное написание вы можете только
         в версии PARADOX 2.0.
             - Используйте оператор "like" вместе с вашей тильда-пе-
         ременной.  Это  заставит  PARADOX произвести поиск значений
         наподобие введенной вашим пользователем.
             Второй способ не требует от пользователя знаний  правил
         написания примеров на подобие, но он ищет похожие слова да-
         же тогда, когда пользователь их ввел безошибочно. Это может
         вызвать  некоторое  недоумение  у  пользователя,  но это не
         страшно.
             
             10-4. Исользование оператора like c тильда-переменными.
             
             По этому запросу выводятся записи, фамилии и имена  ко-
         торух  пишутся похоже на фамилию и имя вводимое пользовате-
         лем.
             Теперь,  если  пользователь  отвечает  на  запрос   как
         "Daphne" и как "Dunston", то правильная запись будет найде-
         на. Пользователь должен правильно задать только первую бук-
         ву.
             
                          Работа приложения в сети ЭВМ.
             
             Приложение,   созданное   вами   при   помощи  Personal
         Programmer, будет работать без каких-либо изменений в  сети
         с  установленной сисемой PARADOX или PARADOX RUNTIME версии
         2.0.
             Это означает, что:
             - любое конкретное приложениеможет работать с таблицами
         общего пользования  в  директории  хранения  данных  общего
         пользования;
             - любое конкретное приложение может осуществлять дейст-
         вия по закрытию таблиц для обеспечения целостности и досто-
         верности данных;
             -  если  действие по закрытию таблиц не может буть осу-
         шествлено по каким-либо причинам, то приложение будет  зап-
         рашивать  пользователя: попытаться ли снова закрыть таблицу
         или перейти к выполнению следующего действия.
             Приложения, созданные при помощи  Personal  Programmer,
         вообще  говоря, не являются многопользовательскими система-
         ми, это однопользовательские приложения, работающие в сети.

                             - 59 -
         В частности, операции по внесению изменений в данные,  про-
         водимые   в  приложениях,  созданных  при  помощи  Personal
         Programmer, испльзуют режим Edit, а не Coedit, т.е.  режим,
         где несколько пользователей одновременно могут вносить свои
         изменения  в одну и ту же таблицу. Отсюда следует, что если
         один пользователь данного приложения вносит изменения в не-
         которую таблицу даннух, никакой другой пользователь не смо-
         жет как-либо изменить эту таблицу.
             Вы можете использовать язык PAL  для  того,  чтобы  для
         данного  приложения ввести доплнительную возможность много-
         пользовательского его применения. Например, вы  можете  все
         или определенные таблицы корректировать в режиме многополь-
         зовательского  редактирования. Если вас интересует, как это
         делается, смотрите гл. 17 (Как  работать  с  многопользова-
         тельскими  приложениями)  пособия  PAL User's Guide. В этой
         главе описывается, какие моменты следует учесть при написа-
         нии такого рода программы, и даются практические советы для
         программиста.
             
                      Адаптация системы Personal Programmer
                              к вашему компьютеру.
             
             Также как и в системе PARADOX программа PARADOX  Custom
         Configuration  поможет вам внести изменения в установленную
         версию Personal Programmer и приспособить его к вашей  ЭВМ.
         Если   эта   программа   отработала   в   системе  Personal
         Programmer, то все  сделанные  изменения  будут  относиться
         только к ней и не отразятся на системе PARADOX.
             
                   Как запустить Custom Configuration Program?
             
             Начинаем из основного меню Personal Programmer.
             1.  Выберете  режим  Tools/Directory  из основного меню
         системы.
             2.  Если  вы  имеете  установленную   версию   Personal
         Programmer   на   жестком   диске,   войдите  в  директорий
         \PARADOX2. Если вы работаете с Personal Programmer в  сети,
         войдите   в  директорий,  где  содержатся  системные  файлы
         PARADOX, который обычно называется  \PARADOX2  и  связан  с
         драйвером сети (network drive). Если вам требуется помощь в
         определении этого директория, обратитесь  к  администратору
         сети.
             3. Теперь закажите режим Play из основного меню.
             4.  На  вопрос  об  наименовании  приложения,  ответьте
         Custom и нажмите клавишу ввода.
             Поскольку вы запустили Custom  Configuration  Programm,
         ваши действия по работе с ней будут аналогичны, как если бы
         вы  работали  с  ней в системе PARADOX (см. гл. 16 "Вопросы
         повышенной сложности" пособия PARADOX User's Guide).
             Следует обратить внимание, что:
             - некоторые возможности как Video и Mode/EMS непосредс-
         твенно касаются системы Personal Programmer.
             - другие возможности,  например  Reports,  относятся  к
         итоговым  отчетам, порождаемым системой Personal Programmer
         и приложением, которые работают в этой системе.
             - некоторые возможности, как, например, Int'l,  Network
         и  More/Blabk=Zero  относятся только к приложениям, которые

                             - 60 -
         работают в системе Personal Programmer.
             - две  возможности:  Set  Directory  и  More/Pal/Editor
         здесь  не  важны и не действуют при работе системы Personal
         Programmer.
             Будучи запомненными эти  установки  будут  иметь  место
         всякий раз, когда вы входите в систему Personal Programmer.
             Помните,   что   вы   всегда   можете   заказать  режим
         Tools/Settings из основного меню  Personal  Programmer  для
         изменения  установок  печати, экранов помощи и вывода прог-
         рамм.  Эти  установки  действуют  только  на  сеанс  работы
         Personal  Programmer.  Изменения  по  режиму  Printer Setup
         уничтожают на сеанс работы установочные значения  прогроммы
         Custom Configuration.
        
