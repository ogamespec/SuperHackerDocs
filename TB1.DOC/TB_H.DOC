			   ПРИЛОЖЕНИЕ  H
			   ─────────────

	       Краткое описание функций и процедур
	       ───────────────────────────────────

     Это  приложение  можно  использовать  как краткий справочник
процедур и функций,  сгруппированных в соответствии с их действи-
ем. Так, например, под заголовком  "СИМВОЛЬНЫЕ ОПЕРАЦИИ" приведе-
на, в частности,  функция $BIN,  которая возвращает двоичный сим-
вольный эквивалент заданного числа,  а также все остальные опера-
ции работы со строками.


     СВЯЗЫВАНИЕ
     ──────────

CHAIN	  Вызывает цепной модуль  ТУРБО  БЕЙСИКА  (с  расширением
	  .ТВС).
COMMON	  Объявляет переменную(ые), передаваемые в  цепную
	  программу
RUN	  Перезапускает программу.


     ОПРЕДЕЛЕНИЕ ДАННЫХ
     ──────────────────

DIM	  Объявляет массивы.
LET	  Присваивает переменной значение.
LOCAL	  Объявляет локальные переменные в процедуре или функции.
OPTION BASE Объявляет минимальное значение для индексов массива.
REM	  Отделяет програмные коментарии.
SHARED	  Определяет  разделяемые   (глобальные)   переменные	в
	  процедуре или функции.
STATIC	  Объявляет статические  переменные   в   процедуре   или
	  функции.
TRON/TROFF Включает и выключает трассировку выполнения.


     УСТРОЙСТВА
     ──────────

COM  (n)       Управляет  прерываниями,  связанные  с	событиями
	       последовательного порта
INP	       Читает из порта ввода/вывода.
IOCTL/IOCTL$   Работают с драйвером устройства.
OPEN COM       Открывает и конфигурирует коммуникационный порт.
OUT	       Пишет в порт ввода/вывода.


     DOS
     ───

CHDIR	       Изменяет текущий каталог (команда CD DOS).
KILL	       Удаляет файл (подобно команде DEL DOS).
MKDIR	       Создает каталог (подобно команде MKDIR DOS)
RMDIR	       Удаляет каталог (подобно команде RMDIR DOS)
SHELL	       Загружает и выполняет порожденный  процесс (только
	       для версии 3.0 DOS).
SYSTEM	       Завершает программу.

     ОБРАБОТКА ОШИБОК
     ────────────────

ERADR	       Возвращает адрес самой последней ошибки.
ERRDEV/ERRDEV$ Возвращает информацию драйвера устройства.
ERL/ERR        Возвращает номер строки и код последней ошибки.
ERROR	       Имитирует ошибку выполнения.


     ФАЙЛЫ
     ─────

BLOADS	       Загружает файл ВSAVED в память.
BSAVE	       Сохраняет на диске  содержимое  памяти  в заданном
	       диапазоне адресов.
CLOSE	       Закрывает файл или устройство.
EOF	       Возвращает состояние конца файла.
FIELD	       Определяет  переменные  поля  в	буфере	 файла	с
	       произвольным доступом.
FILES	       Выводит содержимое каталога (подобно команде
	       DIR DOS)
GET(файлы)     Читает запись из файла с произвольным доступом.
GET(графика)   Считывает часть экрана или весь экран в массив.
LINE  INPUT#   Считывает  строку  из  последовательного  файла	в
	       символьную переменную, игнорируя разделители.
LOC	       Возвращает текущую позицию в файле.
LOF	       Возвращает длину файла.
LSET	       Пересылает символьные данные в буфер файла.
NAME	       Переименовывает файл (подобно функции RЕN DOS).
OPEN	       Готовит файл или устройство к записи или чтению.
PRINT#,        Записывает в файл сформатированную информацию.
PRINT# USING
PUT	       Записывает запись в файл с произвольным доступом.
PUT$	       Записывает строку в файл в двоичном режиме.
RESET	       Закрывает и сбрасывает все дисковые файлы.
RSET	       Пересылает  символьные  данные  в  буфер  файла	с
	       произвольным доступом.
SEEK	       Устанавливает позицию в	двоичном  файле  для GET$
	       и РUT$.
WRITE#	       Выводит данные в последовательный файл.


     УПРАВЛЕНИЕ ХОДОМ ПРОГРАММЫ
     ──────────────────────────

CALL	       Вызывает процедуру, подпрограмму.
CALL ABSOLUTE  Вызывает процедуру на языке ассемблер.
CALL INTERUPT  Вызывает системное прерывание.
DEF FN/END DEF Определяет функцию.
DO/LOOP        Строит цикл с проверкой вначале и/или в конце
END	       Завершает выполнение программы или определяет
	       конец структурного блока.
EXIT	       Преждевременный выход из структуры.
FOR/NEXT       Задает  цикл  с	автоматически  возрастающим (или
	       уменьшающимся параметром цикла).
GOSUB	       Вызывает подпрограмму.
GOTO	       Направляет ход программы на оператор, идентифици-
	       руемый меткой.
IF	       Проверяет условие и изменяет ход программы,   если
	       условие выполнено.

IF BLOCK       Создает последовательность операторов IF.
INLINE	       Объявляет встроенный машинный код.
RESUME	       Перезапускает выполнение программы после  бработки
	       ошибки.
RETURN	       Возвращает управление из подпрограммы в	вызываю-
	       щую программу.
SELECT	       Формирует оператор проверки общего назначения.
STOP	       Останавливает программу.
SUB/END SUB    Определяет процедуру (подпрограмму).
WHILE/WEND     Строит цикл с проверкой в начале.


     ГРАФИКА
     ───────

CIRCLE	       Рисует круг или часть круга.
DRAW	       Изображает контур на графическом экране.
LINE	       Рисует прямую линию или прямоугольник.
PAINT	       Закрашивает замкнутую область на графическом экра-
	       не выбранным цветом.
PEEK	       Возвращает байт,  записанный  в	заданную   ячейку
	       памяти.
PEN (функция)  Читает состояние светового пера.
PEN (оператор) Управляет проверкой событий, связанных со световым
	       пером.
PMAP	       Переводит физические координаты в пользовательские
	       и наоборот.
POINT	       Определяет цвет пиксела или информацию LPR.
POKE	       Записывает бай по заданному адресу.
PRESET	       Изображает точку на графическом экране.
PSET	       Изображает точку на графическом экране.
PUT	       Изображает   на	 графическом   экране  содержимое
	       числового массива.
VIEW	       Определяет  активную  область  (после изображения)
	       графического окна.
WINDOW	       Определяет графическую систему координат.


     АППАРАТНЫЕ СОБЫТИЯ
     ──────────────────

ON  COM  (n)   Создает	подпрограмму  обработки  прерывания   по
	       событиям последовательного порта.
ON ERROR       Определяет процедуру обработки  ошибки  и включает
	       прерывания по ошибке.
ON /GOSUB      Вызывает одну из нескольких возможных подпрограмм
	       в соответствии со значением числового выражения.
ON /GOTO       Направляет ход программы по одному  из  нескольких
	       возможных  адресов  в  зависимости   от	 значения
	       числового выражения.
ON   KEY(n)    Объявляет подпрограмму обработки прерывания, полу-
	       чающую управление при нажатии заданной клавиши.
ON PEN	       Объявляет   подпрограмму   обработки   прерывания,
	       получающую управление, если начинается  работа  со
	       световым переом.
ON PLAY        Объявляет   подпрограмму   обработки   прерывания,
	       получающую управление, если буфер  фоновой  музыки
	       содержит меньше заданного количества нот.
ON STRIG       Объявляет   подпрограмму   обработки   прерывания,
	       связанных с кнопками джостика.

ON TIMER       Объявляет   подпрограмму   обработки   прерывания,
	       которая получает управление каждые n секунд.
STICK	       Возвращает информацию о позиции джойстика.
STRIG (функция)     Возвращает состояние кнопок джойстика.
STRIG  (оператор)   Управляет  проверкой  событий,  связанных	с
		    кнопками джойстика.
WAIT	       Ждет заданных условий состояния кнопок клавиатуры.


     ВВОД
     ────

INKEY$	       Читает с клавиатуры.
INPUT	       Запрашивает у пользователя значения, которые будут
	       присвоены одной или нескольким переменным.
INPUT#	       Присваивает переменным данные из последовательного
	       файла.
INPUT$	       Читает заданное число символов с клавиатуры или из
	       файла.
INSTAT	       Возвращает состояние клавиатуры.
LINE  INPUT    Считывает  строку  с   клавиатуры   в   символьную
	       переменную, игнорируя разделители.
READ	       Загружает переменне константами из оператора DATA.
RESTORE        Позволяет повторно читать константы оператора DATA.


     УПРАВЛЕНИЕ КЛАВИАТУРОЙ
     ──────────────────────

KEY	       Устанавливает  и воспроизводит назначения функцио-
	       нальных клавиш и определяет значения прерываний по
	       клавишам.
KEY (n)        Включает и  выключает прерывание  по  определенной
	       клавише.


     УПРАВЛЕНИЕ ПАМЯТЬЮ
     ──────────────────

CLEAR	       Очищает память переменных.
DEF SEG        Определяет сегмент  данных,  который  используется
	       операторами BLOAD, BSAVE, CALL ABSOLUTE, PEEK,
	       POKE
END MEM        Возвращает адрес конца физической памяти.
ERASE	       Удаляет	динамические  массивы	и   возвращает	в
	       исходное состояние.
FRE	       Возвращает количество  свободной  памяти,  которая
	       доступна вашей программе.
MEМSET	       Объявляет верхнюю границу памяти.
POKE	       Записывает бай по заданному адресу.
VARPTR	       Возвращает адрес переменной.
VARPTR$        Возвращает указатель  переменной   в   символьном
	       формате.
VARSEG	       Возвращает адрес сегмента переменной.

     МЕТАОПЕРАТОРЫ
     ─────────────

$COM	       Размещает буфер-приемник  последоватльного порта.
$DYNAMIC       Объявляет динамическими массивы,  размещение кото-
	       рых выполняется по умолчанию.
$EVENT	       Управляет генерацией кода прерывания по событиям.
$IF/$ELSE/$ENDIF  Определяет части  исходной  программы,  которые
		  компилируются или пропускаются в зависимости от
		  условий.
$INCLUDE       Включает текстовый файл.
$SEGMENT       Объявляет новй сегмент кода.
$SOUND	       Объявляет емкость буфера фоновой музыки.
$STACK	       Задает размер стека для прогона программы.
$STATIC        Объявляет статическими массивы, выполнение которых
	       выполняется по умолчанию.


     СМЕШАННЫЕ КОМАНДЫ
     ─────────────────

DATA	      Объявляет константы для оператора READ.
DELAY	       Устанавливает задержку.
REG	       Устанавливает или возвращает значение  в регистро-
	       вом буфере.
SWAP	       Обменивает значение двух переменных.


     ЧИСЛОВЫЕ ОПЕРАЦИИ
     ─────────────────

ABS	       Возвращает абсолютное значение.
ASC	       Возвращает ASCII код первого символа строки.
ATN	       Возвращает значение тригонометрического арктан-
	       генса
CDBL	       Преобразует число в формат с двойной точностью.
CEIL	       Возвращает наименьшее целое,  большее  или  равное
	       аргументу.
CINT	       Преобразует в целое.
CLNG	       Преобразует в длиное целое.
COS	       Возвращает значение тригонометрического косинуса.
CSGN	       Преобразует числовое выражение в эквивалентное ему
	       число.
CVI/CVL/CVS/CVD/  Преобразует символьные данные,  прочитанные  из
		  файла с произвольным доступом в числовую форму.
CVMD/CVMS      Преобразует символьные переменные, прочитанные  из
	       файла с произвольным доступом в формате Microsoft
	       в числовую форму.
DECR	       Уменьшает значение переменной.

DEFINT/DELNG/	 Объявляет тип идентификаторов переменных,
DEFSNG/DEFDBL/	 установленный по умолчанию.
DEFSTR

EXP	       Возвращает e в степени Х.
EXP2	       Возвращает 2 в степени Х.
EXP10	       Возвращает 10 в степени Х.
FIX	       Округляет до целого.
INCR	       Увеличивает значение переменной.
INT	       Преобразует числовое выражение в целое

LOG	       Возвращает значение натурального (по основанию  e)
	       логарифма.
LOG2	       Возвращает значение логарифма по  основанию  2.
LOG10	       Возвращает значение логарифма по  основанию  10.
MKI$/MKL$/MKS$/  Преобразует числовые данные в символьную форму
KD$		 (для файлов с произвольным доступом).
MKMD$/MKMS$    Преобразует числовые  данные  в формате Microsoft
	       (для файлов с произвольным доступом).
RANDOMIZE      Устанавливает начальное	значение  для  генератора
	       случайных чисел.
RND	       Возвращает случайное число.
SGN	       Возвращает знак числового выражения.
SIN	       Возвращает значение тригонометрического синуса.
SQRT	       Возвращает значение квадратного корня.
TAN	       Возвращает значение тригонометрического тангенса.


     ВЫВОД
     ─────

PRINT	       Посылает данные на экран.
PRINT USING    Посылает на экран сформатированную информацию.
SPC	       Пропускает n пробелов (используется в  опреаторах
	       PRINT)
TAB	       Устанавливает табуляцию на заданную позицию вывода
	       n (используется	в  опреаторах PRINT).
WRITE	       Посылает на экран данные, разделенные запятыми.


     ПЕЧАТАЮЩЕЕ УСТРОЙСТВО
     ─────────────────────

LPOS	       Возвращает позицию курсора  в  буфере  печатающего
	       устройства.
LPRINT/        Посылает данные на принтер. (LPT1:)
LPRINT USING


     ЭКРАН
     ─────

CLS	       Очищает экран
COLOR	       Задает цвет
COLOR	       Задает цвет для графических операций
CSRLIN	       Возвращает текущую  вертикальную  позицию  курсора
	       (номер строки)
LOCATE	       Размещает курсор и/или определяет размер указателя
	       (курсора)
POS	       Возвращает текущую горизонтальную позицию  курсора
	       (номер колонки )
SCREEN(файлы)  Возвращает ASCII код символа в заданной	строке	и
	       колонке
SCREEN(графика)  Устанавливает режим изображения на экране
WIDTH	       Устанавливает логическую длину строки

     ЗВУК
     ────

PLAY(функция)  Возвращает число нот в буфере фоновой музыки
PLAY(оператор) Возвращает число нот в буфере фоновой музыки
SOUND	       Генерирует тон заданной частоты и длительности


     СИМВОЛЬНЫЕ ОПЕРАЦИИ
     ───────────────────

BIN$	       Возвращает двоичный символьный эквивалент числа
CHR$	       Преобразует ASCII код в односимвольную строку
GET$	       Читает  в  символьном  формате  данные  из  файла,
	       открытого в режиме BINARY.
HEX$	       Преобразует число в  шестнадцатиричный  символьный
	       эквивалент
INSTR	       Просматривает строки в поисках заданного шаблона
LCASE$	       Возвращает строку, состоящую только  из	прописных
	       букв
LEFT$	       Возвращает n самых левых символов в строке
LEN	       Возвращает длину строки
MID$	       Возвращает символьную строку
MID$	       Замещает символьную строку
OCT$	       Возвращает строку, представляющую значение числа в
	       восьмеричном (по основанию 8) виде
RIGHT$	       Возвращает n самых правых символов строки
SPACE$	       Возвращает строку, состоящую из n пробелов
STR$	       Возвращает символьный эквивалент числа
STRING$        Возвращает строку, состоящую из многократных копий
	       заданного символа
UCASE$	       Возвращает строку, состоящую  только  из  строчных
	       букв
VAL	       Возвращает числовой эквивалент строки


